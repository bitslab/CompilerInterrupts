HOME = ..

include $(HOME)/Defines.mk

ifeq ($(LINKAGE),dynamic)
CFLAGS += -fPIC
endif

# Libfiber module specific definitions

CURR_DIR := $(shell pwd)
LIBFIBER_PATH := $(CURR_DIR)/../../../libfiber
#CFLAGS += -DLIBFIBER -DPHOENIX -I$(LIBFIBER_PATH)/include -Wl,-rpath,"$(LIBFIBER_DIR)" -lfiber
CFLAGS += -DPHOENIX # required for libfiber

export LIBFIBER_FLAGS = -DPHOENIX

OS ?= $(shell uname -s)

ARCH1 ?= $(shell uname -m)
ifeq ($(ARCH1),i386)
ARCH1=x86
endif
ifeq ($(ARCH1),i86pc)
ARCH1=x86
endif
ifeq ($(ARCH1),i686)
ARCH1=x86
endif

ifeq ($(ARCH1),x86_64)
CFLAGS += -m64 -DARCH_x86_64
endif
ifeq ($(ARCH1),x86)
CFLAGS += -m32 -march=i686 -DARCH_x86
endif

.PHONY: default all clean

SRCS := \
        map_reduce.c \
        memory.c \
        processor.c \
        scheduler.c \
        synch.c \
        taskQ.c \
        mcs.c \
        pt_mutex.c \
        locality.c \
        iterator.c \
        tpool.c \

INTERMEDIATE_FILES := $(patsubst %.c, %.ll, $(SRCS))

default: all

all: $(HOME)/$(LIB_DIR)/libci.so $(LIBFIBER_PATH)/libfiber.so $(HOME)/$(LIB_DIR)/$(TARGET)

ci_lib.o: $(CI_HOME)/ci_lib.c $(CI_HOME)/ci_lib.h
	gcc -c -fPIC $< -o $@

libci.so: ci_lib.o
	gcc -shared $< -o $@

$(HOME)/$(LIB_DIR)/libci.so: libci.so
	cp $< $(HOME)/$(LIB_DIR)

$(LIBFIBER_PATH)/libfiber.so:
	$(MAKE) -C $(LIBFIBER_PATH) -f Makefile.int libfiber.so

$(HOME)/$(LIB_DIR)/$(TARGET): $(TARGET)
	cp $< $(HOME)/$(LIB_DIR)

$(LIB_PHOENIX).a: phoenix.o
	$(AR) cr $@ $<
	$(RANLIB) $@

$(LIB_PHOENIX).so: phoenix.o
	$(CC) --shared -o $@ $<

phoenix.o: phoenix.ll
	$(LLVM_BUILD)/bin/llc -O3 -relocation-model=pic -filetype=obj $<

phoenix.ll: $(INTERMEDIATE_FILES)
	llvm-link-9 $^ -o $@

$(INTERMEDIATE_FILES): %.ll : %.c
	clang-9 -S -emit-llvm $(CFLAGS) -I$(HOME)/$(INC_DIR) -o $@ $<

clean:
	make -C $(LIBFIBER_PATH) -f Makefile.int clean
	rm -f $(HOME)/$(LIB_DIR)/$(TARGET) $(TARGET) $(INTERMEDIATE_FILES) $(LIBFIBER_PATH)/libfiber.so $(HOME)/$(LIB_DIR)/libci.so *.a *.so *.o *.ll
