#------------------------------------------------------------------------------
# Copyright (c) 2007-2009, Stanford University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Stanford University nor the names of its 
#       contributors may be used to endorse or promote products derived from 
#       this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY STANFORD UNIVERSITY ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL STANFORD UNIVERSITY BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#------------------------------------------------------------------------------ 

# This Makefile requires GNU make.

HOME = ../..

#INST_LEVEL ?= 1
#PUSH_INTV ?= 5000
#CMMT_INTV ?= 1000
#CONFIG ?= 2
#ALLOWED_DEVIATION ?= 50
#ROOT ?= ../../../../

include $(HOME)/Defines.mk

LIBS += -L$(HOME)/$(LIB_DIR) -l$(PHOENIX)

WC_OBJS := word_count.o
WC_OBJS_PTHREAD := word_count-pthread.o
WC_OBJS_SEQ := word_count-seq.o

OS ?= $(shell uname -s)

ARCH1 ?= $(shell uname -m)
ifeq ($(ARCH1),i386)
ARCH1=x86
endif
ifeq ($(ARCH1),i86pc)
ARCH1=x86
endif
ifeq ($(ARCH1),i686)
ARCH1=x86
endif

ifeq ($(ARCH1),x86_64)
CFLAGS += -m64 -DARCH_x86_64
endif
ifeq ($(ARCH1),x86)
CFLAGS += -m32 -march=i686 -DARCH_x86
endif

SRC_FILES := $(wildcard *.c)
INTERMEDIATE_FILES := $(patsubst %.c, llvm_%.ll, $(SRC_FILES))
CFLAGS += -DLC

PROGS := word_count word_count-pthread word_count-seq
PROGS := word_count

.PHONY: default all clean

default: all

all: $(PROGS)

word_count: word_count.o $(LIB_DEP)
	$(CC) $(CFLAGS) -o $@ word_count.o $(LIBS)

word_count.o: word_count.ll
	$(LLVM_BUILD)/bin/llc -relocation-model=pic -filetype=obj -o $@ $<

word_count.ll: opt_word_count.ll
	opt-9 $(LC_FLAGS) -in-cost-file ../../src/cost.txt < $< > $@

opt_word_count.ll: llvm_word_count_all.ll
	opt-9 $(OPT_FLAGS) -S < $< > $@

llvm_word_count_all.ll: llvm_word_count.ll llvm_sort.ll
	llvm-link-9 $^ -o $@



word_count-seq: word_count-seq.o
	$(CC) $(CFLAGS) -o $@ $< $(LIBS)

word_count-seq.o: word_count-seq.ll
	$(LLVM_BUILD)/bin/llc -relocation-model=pic -filetype=obj -o $@ $<

word_count-seq.ll: opt_word_count-seq.ll
	opt-9 $(LC_FLAGS) < $< > $@

opt_word_count-seq.ll: llvm_word_count-seq.ll
	opt-9 $(OPT_FLAGS) -S < $< > $@



word_count-pthread: word_count-pthread.o
	$(CC) $(CFLAGS) -o $@ $< $(LIBS)

word_count-pthread.o: word_count-pthread.ll
	$(LLVM_BUILD)/bin/llc -relocation-model=pic -filetype=obj -o $@ $<

word_count-pthread.ll: opt_word_count-pthread.ll
	opt-9 $(LC_FLAGS) < $< > $@

opt_word_count-pthread.ll: llvm_word_count-pthread_all.ll
	opt-9 $(OPT_FLAGS) -S < $< > $@

llvm_word_count-pthread_all.ll: llvm_word_count-pthread.ll llvm_sort-pthread.ll
	llvm-link-9 $^ -o $@



$(INTERMEDIATE_FILES): llvm_%.ll : %.c
	clang-9 -S -emit-llvm $(CFLAGS) -I$(HOME)/$(INC_DIR) -o $@ $<



clean:
	rm -f $(PROGS) $(WC_OBJS) $(WC_OBJS_PTHREAD) $(WC_OBJS_SEQ) $(INTERMEDIATE_FILES) *.ll
