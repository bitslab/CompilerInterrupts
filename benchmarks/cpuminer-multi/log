make: Warning: File 'Makefile' has modification time 47 s in the future
make  all-recursive
make[1]: Entering directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/cpuminer-multi'
make[1]: Warning: File 'Makefile' has modification time 47 s in the future
Making all in compat
make[2]: Entering directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/cpuminer-multi/compat'
make[3]: Entering directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/cpuminer-multi/compat'
make[3]: Nothing to be done for 'all-am'.
make[3]: Leaving directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/cpuminer-multi/compat'
make[2]: Leaving directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/cpuminer-multi/compat'
make[2]: Entering directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/cpuminer-multi'
make[2]: Warning: File 'Makefile' has modification time 46 s in the future
gcc -c -fPIC ci_lib.c -o ci_lib.o
make -C ../shenango/shenango/ libiokernel.a
make[3]: Entering directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/shenango/shenango'
make[3]: Warning: File 'iokernel/control-noht.d' has modification time 45 s in the future
make[3]: Warning: File 'iokernel/control-noht.d' has modification time 45 s in the future
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c iokernel/stat.c -o iokernel/stat.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c iokernel/cores.c -o iokernel/cores.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c iokernel/tx.c -o iokernel/tx.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c iokernel/dp_clients.c -o iokernel/dp_clients.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c iokernel/dpdk.c -o iokernel/dpdk.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c iokernel/commands.c -o iokernel/commands.o
iokernel/commands.c: In function ‘commands_drain_queue’:
iokernel/commands.c:40:10: warning: unused variable ‘success’ [-Wunused-variable]
     bool success = rx_send_to_runtime(t->p, t->p->next_thread_rr++, RX_JOIN, payload);
          ^~~~~~~
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c iokernel/rx.c -o iokernel/rx.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c iokernel/mempool_completion.c -o iokernel/mempool_completion.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c iokernel/control.c -o iokernel/control.o
ar rcs libiokernel.a iokernel/stat.o iokernel/cores.o iokernel/tx.o iokernel/dp_clients.o iokernel/dpdk.o iokernel/commands.o iokernel/rx.o iokernel/mempool_completion.o iokernel/control.o
make[3]: warning:  Clock skew detected.  Your build may be incomplete.
make[3]: Leaving directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/shenango/shenango'
cp ../shenango/shenango/libiokernel.a .
DEBUG=1 make -C ../shenango/shenango/ libbase.a
make[3]: Entering directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/shenango/shenango'
make[3]: Warning: File 'iokernel/control-noht.d' has modification time 39 s in the future
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/stat.c -o base/stat.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/lrpc.c -o base/lrpc.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/mem.c -o base/mem.o
base/mem.c:24:2: warning: #warning "Your system does not support specifying MAP_HUGETLB page sizes" [-Wcpp]
 #warning "Your system does not support specifying MAP_HUGETLB page sizes"
  ^~~~~~~
base/mem.c:28:2: warning: #warning "Your system does not support specifying SHM_HUGETLB page sizes" [-Wcpp]
 #warning "Your system does not support specifying SHM_HUGETLB page sizes"
  ^~~~~~~
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/time.c -o base/time.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/init.c -o base/init.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/mempool.c -o base/mempool.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/jenkins_hash.c -o base/jenkins_hash.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/log.c -o base/log.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/list.c -o base/list.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/tcache.c -o base/tcache.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/cpu.c -o base/cpu.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/slab.c -o base/slab.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/pci.c -o base/pci.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/bitmap.c -o base/bitmap.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/page.c -o base/page.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/thread.c -o base/thread.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DDEBUG -DCCAN_LIST_DEBUG -rdynamic -O0 -ggdb -c base/sysfs.c -o base/sysfs.o
ar rcs libbase.a base/stat.o base/lrpc.o base/mem.o base/time.o base/init.o base/mempool.o base/jenkins_hash.o base/log.o base/list.o base/tcache.o base/cpu.o base/slab.o base/pci.o base/bitmap.o base/page.o base/thread.o base/sysfs.o
make[3]: warning:  Clock skew detected.  Your build may be incomplete.
make[3]: Leaving directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/shenango/shenango'
#make -C ../shenango/shenango/ libbase.a
cp ../shenango/shenango/libbase.a .
make -C ../shenango/shenango/ libnet.a
make[3]: Entering directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/shenango/shenango'
make[3]: Warning: File 'iokernel/control-noht.d' has modification time 37 s in the future
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c net/netdump.c -o net/netdump.o
gcc -g -Wall -std=gnu11 -D_GNU_SOURCE -I./inc -Idpdk/build/include -mssse3 -DNDEBUG -O3 -c net/mbuf.c -o net/mbuf.o
ar rcs libnet.a net/netdump.o net/mbuf.o
make[3]: warning:  Clock skew detected.  Your build may be incomplete.
make[3]: Leaving directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/shenango/shenango'
cp ../shenango/shenango/libnet.a .
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT llvm_cpuminer-cpu-miner.ll -MD -MP -MF .deps/cpuminer-cpu-miner.Tpo -c -o llvm_cpuminer-cpu-miner.ll `test -f 'cpu-miner.c' || echo './'`cpu-miner.c
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from cpu-miner.c:48:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
In file included from cpu-miner.c:49:
In file included from ./TriggerAction.h:16:
In file included from ../shenango/shenango/iokernel/defs.h:9:
In file included from ../shenango/shenango/inc/base/bitmap.h:10:
../shenango/shenango/inc/base/atomic.h:52:43: warning: the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here [-Wsync-fetch-and-nand-semantics-changed]
        return __sync_fetch_and_nand(&a->cnt, val);
               ~~~~~~~~~~~~~~~~~~~~~             ^
../shenango/shenango/inc/base/atomic.h:122:43: warning: the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here [-Wsync-fetch-and-nand-semantics-changed]
        return __sync_fetch_and_nand(&a->cnt, val);
               ~~~~~~~~~~~~~~~~~~~~~             ^
3 warnings generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < llvm_cpuminer-cpu-miner.ll > opt_cpuminer-cpu-miner.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < opt_cpuminer-cpu-miner.ll > cpuminer-cpu-miner.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
Compiler Interrupt function: compiler_interrupt_handler
Recursive func name: parse_config
Recursive func name: parse_arg
List of Functions in Call Graph order:-
Function: compiler_interrupt_handler
Function: gbt_work_decode
Function: get_currentalgo
Function: get_mininginfo
Function: get_upstream_work
Function: init_stats
Function: longpoll_thread
Function: main
Function: miner_thread
Function: parse_arg
Function: parse_cmdline
Function: parse_config
Function: proper_exit
Function: restart_threads
Function: rpc2_login
Function: rpc2_stratum_job
Function: rpc2_workio_login
Function: share_result
Function: show_usage_and_exit
Function: show_version_and_exit
Function: signal_handler
Function: stratum_gen_work
Function: stratum_thread
Function: work_decode
Function: workio_thread
gbt_work_decode(): Transformed branch between land.lhs.true2 and if.end29 in the forward direction
gbt_work_decode(): Transformed branch between if.then and if.end29_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.end and cleanup in the forward direction
gbt_work_decode(): Transformed branch between if.else and cleanup_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.else17 and cleanup_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.end38 and out in the forward direction
gbt_work_decode(): Transformed branch between if.end51 and out_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.end75 and out_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.end82 and out_dummy_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.end92 and out_dummy_dummy_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.end106 and out_dummy_dummy_dummy_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.end116 and out_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between for.end138 and out_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.then163 and out_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.then258 and if.end275 in the forward direction
gbt_work_decode(): Transformed branch between land.lhs.true280 and if.end327 in the forward direction
gbt_work_decode(): Transformed branch between if.then284 and if.end327_dummy in the forward direction
gbt_work_decode(): Transformed branch between if.end376 and out_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between while.cond446.preheader and while.end476 in the forward direction
gbt_work_decode(): Transformed branch between while.end476 and out_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy1 in the forward direction
gbt_work_decode(): Transformed branch between for.body540.preheader and out_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy1_dummy in the forward direction
gbt_work_decode(): Transformed branch between land.lhs.true556 and out_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy1_dummy_dummy in the forward direction
gbt_work_decode(): Transformed branch between land.lhs.true570 and cleanup597 in the forward direction
gbt_work_decode(): Transformed branch between if.then574 and cleanup597_dummy in the forward direction
gbt_work_decode(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.end,%if.else,%if.else17,%if.else21,%cleanup<latch><exiting>,%cleanup_dummy,%cleanup_dummy_dummy,%cleanup_dummy_dummy_dummy
. Latch: cleanup, Exiting block: cleanup
gbt_work_decode(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.end,%if.else,%if.else17,%if.else21,%cleanup<latch><exiting>,%cleanup_dummy,%cleanup_dummy_dummy,%cleanup_dummy_dummy_dummy
. Latch: cleanup, Exiting block: cleanup
gbt_work_decode(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.end,%if.else,%if.else17,%if.else21,%cleanup<latch><exiting>,%cleanup_dummy,%cleanup_dummy_dummy,%cleanup_dummy_dummy_dummy
. Latch: cleanup, Exiting block: cleanup
gbt_work_decode(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.end,%if.else,%if.else17,%if.else21,%cleanup<latch><exiting>,%cleanup_dummy,%cleanup_dummy_dummy,%cleanup_dummy_dummy_dummy
. Latch: cleanup, Exiting block: cleanup
gbt_work_decode(): Checking if simple for Loop Loop at depth 1 containing: %for.body203<header><latch><exiting>
. Latch: for.body203, Exiting block: for.body203
gbt_work_decode(): Checking if simple for Loop Loop at depth 2 containing: %for.body465<header><latch><exiting>
. Latch: for.body465, Exiting block: for.body465
manageDanglingLCCs(inverted V shape): Removing cost 3 of if.then56
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.then56 to successor if.then58
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.then56 to successor if.else60
manageDanglingLCCs(inverted V shape): Removing cost 12 of if.else60
manageDanglingLCCs(inverted V shape): Adding pred cost 12 of if.else60 to successor if.then68
manageDanglingLCCs(inverted V shape): Adding pred cost 12 of if.else60 to successor if.else69
manageDanglingLCCs(inverted V shape): Removing cost 102 of if.end75
manageDanglingLCCs(inverted V shape): Adding pred cost 102 of if.end75 to successor if.then81
manageDanglingLCCs(inverted V shape): Adding pred cost 102 of if.end75 to successor if.end82
manageDanglingLCCs(inverted V shape): Removing cost 204 of if.end92
manageDanglingLCCs(inverted V shape): Adding pred cost 204 of if.end92 to successor if.then105
manageDanglingLCCs(inverted V shape): Adding pred cost 204 of if.end92 to successor if.end106
manageDanglingLCCs(inverted V shape): Removing cost 305 of for.body122
manageDanglingLCCs(inverted V shape): Adding pred cost 305 of for.body122 to successor cleanup132
manageDanglingLCCs(inverted V shape): Adding pred cost 305 of for.body122 to successor for.inc136
manageDanglingLCCs(inverted V shape): Removing cost 9 of if.then329
manageDanglingLCCs(inverted V shape): Adding pred cost 9 of if.then329 to successor cond.end349.thread
manageDanglingLCCs(inverted V shape): Adding pred cost 9 of if.then329 to successor cond.false341
manageDanglingLCCs(inverted V shape): Removing cost 12 of cond.false341
manageDanglingLCCs(inverted V shape): Adding pred cost 12 of cond.false341 to successor cond.end349
manageDanglingLCCs(inverted V shape): Adding pred cost 12 of cond.false341 to successor if.end366.thread
manageDanglingLCCs(inverted V shape): Removing cost 4 of for.body404.lr.ph
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of for.body404.lr.ph to successor for.body404.preheader
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of for.body404.lr.ph to successor for.body404.us.preheader
manageDanglingLCCs(inverted V shape): Removing cost 305 of for.body404.us
manageDanglingLCCs(inverted V shape): Adding pred cost 305 of for.body404.us to successor lor.lhs.false423.us
manageDanglingLCCs(inverted V shape): Adding pred cost 305 of for.body404.us to successor cond.end417.loopexit
manageDanglingLCCs(inverted V shape): Removing cost 612 of lor.lhs.false423.us
manageDanglingLCCs(inverted V shape): Adding pred cost 612 of lor.lhs.false423.us to successor if.end427.us
manageDanglingLCCs(inverted V shape): Adding pred cost 612 of lor.lhs.false423.us to successor cleanup437.loopexit
manageDanglingLCCs(inverted V shape): Removing cost 305 of for.body404
manageDanglingLCCs(inverted V shape): Adding pred cost 305 of for.body404 to successor cond.end417.loopexit1
manageDanglingLCCs(inverted V shape): Adding pred cost 305 of for.body404 to successor lor.lhs.false423
manageDanglingLCCs(inverted V shape): Removing cost 612 of lor.lhs.false423
manageDanglingLCCs(inverted V shape): Adding pred cost 612 of lor.lhs.false423 to successor if.end427
manageDanglingLCCs(inverted V shape): Adding pred cost 612 of lor.lhs.false423 to successor cleanup437.loopexit2
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end366.thread is 126
Pred cost for cond.end349.thread is 121
manageDanglingLCCs(V shape): Removing cost 121 of predecessor cond.end349.thread for merge node if.then368
manageDanglingLCCs(V shape): Removing cost 126 of predecessor if.end366.thread for merge node if.then368
manageDanglingLCCs(V shape): Settting average cost 123 as initial cost for merge node if.then368
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.then368 is 127
Pred cost for cond.end349 is 123
manageDanglingLCCs(V shape): Removing cost 123 of predecessor cond.end349 for merge node if.end371
manageDanglingLCCs(V shape): Removing cost 127 of predecessor if.then368 for merge node if.end371
manageDanglingLCCs(V shape): Settting average cost 125 as initial cost for merge node if.end371
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for while.cond446.preheader.loopexit3 is 1
Pred cost for while.cond446.preheader.loopexit is 1
manageDanglingLCCs(V shape): Removing cost 1 of predecessor while.cond446.preheader.loopexit for merge node while.cond446.preheader
manageDanglingLCCs(V shape): Removing cost 1 of predecessor while.cond446.preheader.loopexit3 for merge node while.cond446.preheader
manageDanglingLCCs(V shape): Settting average cost 1 as initial cost for merge node while.cond446.preheader
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for cond.end417.loopexit1 is 306
Pred cost for cond.end417.loopexit is 306
manageDanglingLCCs(V shape): Removing cost 306 of predecessor cond.end417.loopexit for merge node cond.end417
manageDanglingLCCs(V shape): Removing cost 306 of predecessor cond.end417.loopexit1 for merge node cond.end417
manageDanglingLCCs(V shape): Settting average cost 306 as initial cost for merge node cond.end417
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for cleanup437.loopexit2 is 613
Pred cost for cleanup437.loopexit is 613
Pred cost for cond.end417 is 408
manageDanglingLCCs(V shape): Removing cost 408 of predecessor cond.end417 for merge node cleanup437
manageDanglingLCCs(V shape): Removing cost 613 of predecessor cleanup437.loopexit for merge node cleanup437
manageDanglingLCCs(V shape): Removing cost 613 of predecessor cleanup437.loopexit2 for merge node cleanup437
manageDanglingLCCs(V shape): Settting average cost 544 as initial cost for merge node cleanup437
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for out_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup132 is 407
manageDanglingLCCs(V shape): Removing cost 407 of predecessor cleanup132 for merge node out_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 1 of predecessor out_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy for merge node out_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 204 as initial cost for merge node out_dummy_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for out_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 205
Pred cost for if.then115 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then115 for merge node out_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 205 of predecessor out_dummy_dummy_dummy_dummy_dummy_dummy_dummy for merge node out_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 153 as initial cost for merge node out_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for out_dummy_dummy_dummy_dummy_dummy_dummy is 154
Pred cost for if.then105 is 306
manageDanglingLCCs(V shape): Removing cost 306 of predecessor if.then105 for merge node out_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 154 of predecessor out_dummy_dummy_dummy_dummy_dummy_dummy for merge node out_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 230 as initial cost for merge node out_dummy_dummy_dummy_dummy_dummy
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for out_dummy_dummy_dummy_dummy_dummy is 231
Pred cost for if.then91 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then91 for merge node out_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 231 of predecessor out_dummy_dummy_dummy_dummy_dummy for merge node out_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 166 as initial cost for merge node out_dummy_dummy_dummy_dummy
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for out_dummy_dummy_dummy_dummy is 167
Pred cost for if.then81 is 204
manageDanglingLCCs(V shape): Removing cost 204 of predecessor if.then81 for merge node out_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 167 of predecessor out_dummy_dummy_dummy_dummy for merge node out_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 185 as initial cost for merge node out_dummy_dummy_dummy
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for out_dummy_dummy_dummy is 186
Pred cost for if.then71 is 102
Pred cost for if.then68 is 115
manageDanglingLCCs(V shape): Removing cost 115 of predecessor if.then68 for merge node out_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then71 for merge node out_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 186 of predecessor out_dummy_dummy_dummy for merge node out_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 134 as initial cost for merge node out_dummy_dummy
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for out_dummy_dummy is 135
Pred cost for if.then50 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then50 for merge node out_dummy
manageDanglingLCCs(V shape): Removing cost 135 of predecessor out_dummy_dummy for merge node out_dummy
manageDanglingLCCs(V shape): Settting average cost 118 as initial cost for merge node out_dummy
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for out_dummy is 119
Pred cost for if.then37 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then37 for merge node out
manageDanglingLCCs(V shape): Removing cost 119 of predecessor out_dummy for merge node out
manageDanglingLCCs(V shape): Settting average cost 110 as initial cost for merge node out
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for cond.false588 is 2
Pred cost for cond.true585 is 203
manageDanglingLCCs(V shape): Removing cost 203 of predecessor cond.true585 for merge node cond.end589
manageDanglingLCCs(V shape): Removing cost 2 of predecessor cond.false588 for merge node cond.end589
manageDanglingLCCs(V shape): Settting average cost 102 as initial cost for merge node cond.end589
Pred cost for for.end138.loopexit is 1
Pred cost for if.end327.loopexit is 1
Pred cost for cleanup323.thread is 203
Pred cost for if.end327_dummy_dummy is 1
Pred cost for if.end371 is 229
Pred cost for if.end375 is 103
Pred cost for cond.end589 is 210
Pred cost for cleanup597_dummy_dummy is 1
Pred cost for cleanup597_dummy is 1
Direct branch from if.else17 needs to be instrumented
Direct branch from if.else needs to be instrumented
Direct branch from if.end needs to be instrumented
Direct branch from for.body needs to be instrumented
Instrumenting loop with body cost: 3
Non-header-colocated-exit loop will be transformed, & body cost is 3 for loop with header for.body
Direct branch from land.lhs.true2 needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 103 for gbt_work_decode has been optimized for entry cost!
Direct branch from if.then141 needs to be instrumented
Self loop:- #backedges: 0, body cost: 7, preheader cost: 220
Self loop will be transformed, & body cost is 7 for loop Loop at depth 1 containing: %for.body203<header><latch><exiting>

Direct branch from if.then256 needs to be instrumented
Direct branch from if.end307 needs to be instrumented
Direct branch from while.body449 needs to be instrumented
Self loop:- #backedges: 0, body cost: 107, preheader cost: 2
Self loop will be transformed, & body cost is 107 for loop Loop at depth 2 containing: %for.body465<header><latch><exiting>

Direct branch from for.body540.preheader needs to be instrumented
Func cost 608 for gbt_work_decode has been optimized for exit cost!
Storing cost of gbt_work_decode() : 711

Instrumenting loops (self loop count: 2, sese loop count: 1) for function gbt_work_decode

Loops scheduled for transform for gbt_work_decode:- 
Self Loop: Loop at depth 1 containing: %for.body203<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body465<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body<header>,%if.end,%if.else,%if.else17,%if.else21,%cleanup<latch><exiting>,%cleanup_dummy,%cleanup_dummy_dummy,%cleanup_dummy_dummy_dummy,%for.bodyDirectSucc,%if.endDirectSucc,%if.elseDirectSucc,%if.else17DirectSucc



gbt_work_decode(): Self loop Loop at depth 1 containing: %for.body203<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> for.body203( gbt_work_decode() )

gbt_work_decode(): Transformed Self loop Loop at depth 1 containing: %for.body203<header><latch><exiting>


gbt_work_decode(): Self loop Loop at depth 2 containing: %for.body465<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body465( gbt_work_decode() ). Self Loop cost: 107. Iterations: 37
Self loop is canonical. Going for special transformation with 37 iterations.
Attempting to transform self loop for.body465 of gbt_work_decode with 37 inner loop iterations --> Loop at depth 2 containing: %for.body465<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ 0, %for.body465.preheader ], [ %indvars.iv.next, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %41 = add i64 37, %indvars.iv
Applied self loop transform on for.body465( gbt_work_decode() )

gbt_work_decode(): Transformed Self loop Loop at depth 2 containing: %for.body465<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>


gbt_work_decode(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.end,%if.else,%if.else17,%if.else21,%cleanup<latch><exiting>,%cleanup_dummy,%cleanup_dummy_dummy,%cleanup_dummy_dummy_dummy,%for.bodyDirectSucc,%if.endDirectSucc,%if.elseDirectSucc,%if.else17DirectSucc


This seseloop will be transformed & instrumented --> for.body( gbt_work_decode() ). SESE Loop cost: 3. Iterations: 1333
Found local ind var:   %indvars.iv1053 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next1054, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone2 = phi i64 
User in header block to replace Phi:   %5 = add i64 1333, %indvars.iv1053
Applied sese loop transform on for.body( gbt_work_decode() )

gbt_work_decode(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.end,%if.else,%if.else17,%if.else21,%cleanup,%cleanup_dummy,%cleanup_dummy_dummy,%cleanup_dummy_dummy_dummy,%for.bodyDirectSucc,%if.endDirectSucc,%if.elseDirectSucc,%if.else17DirectSucc,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%if.else,%if.else17,%if.else21,%cleanup<latch><exiting>,%cleanup_dummy,%cleanup_dummy_dummy,%cleanup_dummy_dummy_dummy,%for.bodyDirectSucc,%if.endDirectSucc,%if.elseDirectSucc,%if.else17DirectSucc,%if.end

Func cost 110 for get_currentalgo has been optimized for entry cost!
Storing cost of get_currentalgo() : 110

Instrumenting loops (self loop count: 0, sese loop count: 0) for function get_currentalgo

Loops scheduled for transform for get_currentalgo:- 

get_mininginfo(): Transformed branch between if.then5 and cleanup in the forward direction
get_mininginfo(): Transformed branch between land.lhs.true16 and if.end28 in the forward direction
get_mininginfo(): Transformed branch between land.lhs.true22 and if.end28_dummy in the forward direction
get_mininginfo(): Transformed branch between land.lhs.true33 and if.end38 in the forward direction
get_mininginfo(): Transformed branch between land.lhs.true43 and if.end49 in the forward direction
get_mininginfo(): Transformed branch between if.end49 and if.end75 in the forward direction
get_mininginfo(): Transformed branch between if.then51 and if.end75_dummy in the forward direction
get_mininginfo(): Transformed branch between restart_threads.exit.loopexit.unr-lcssa and restart_threads.exit in the forward direction
get_mininginfo(): Transformed branch between restart_threads.exit and if.end75_dummy_dummy in the forward direction
get_mininginfo(): Transformed branch between if.end75 and cleanup in the forward direction
get_mininginfo(): Transformed branch between land.lhs.true.i and cleanup_dummy1 in the forward direction
get_mininginfo(): Transformed branch between land.lhs.true1.i and cleanup_dummy1_dummy in the forward direction
get_mininginfo(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
get_mininginfo(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i.epil<header><latch><exiting>
. Latch: for.body.i.epil, Exiting block: for.body.i.epil
Pred cost for cleanup is 102
Func cost 11 for get_mininginfo has been optimized for entry cost!
Direct branch from if.then5 needs to be instrumented
Direct branch from land.lhs.true22 needs to be instrumented
Direct branch from land.lhs.true33 needs to be instrumented
Direct branch from if.end28 needs to be instrumented
Direct branch from land.lhs.true43 needs to be instrumented
Direct branch from if.end38 needs to be instrumented
Self loop:- #backedges: 0, body cost: 15, preheader cost: 22
Self loop will be transformed, & body cost is 15 for loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 6, preheader cost: 24
Self loop will be transformed, & body cost is 6 for loop Loop at depth 1 containing: %for.body.i.epil<header><latch><exiting>

Direct branch from if.then59 needs to be instrumented
Direct branch from restart_threads.exit needs to be instrumented
Direct branch from land.lhs.true1.i needs to be instrumented
Func cost 1 for get_mininginfo has been optimized for exit cost!
Storing cost of get_mininginfo() : 12

Instrumenting loops (self loop count: 2, sese loop count: 0) for function get_mininginfo

Loops scheduled for transform for get_mininginfo:- 
Self Loop: Loop at depth 1 containing: %for.body.i.epil<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>



get_mininginfo(): Self loop Loop at depth 1 containing: %for.body.i.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i.epil( get_mininginfo() ). Self Loop cost: 6. Iterations: 666
Self loop is not canonical. Going for generic transformation with 666 iterations.
Attempting to transform self loop for.body.i.epil of get_mininginfo with 666 inner loop iterations --> Loop at depth 1 containing: %for.body.i.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i64 [ %epil.iter.sub, %selfLoopOptExitBlock ], [ %xtraiter, %for.body.i.epil.preheader ], mapping it to   %phiIVClone2 = phi i64 
User in header block to replace Phi:   %22 = add i64 -666, %epil.iter
Applied self loop transform on for.body.i.epil( get_mininginfo() )

get_mininginfo(): Transformed Self loop Loop at depth 1 containing: %for.body.i.epil<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


get_mininginfo(): Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i( get_mininginfo() ). Self Loop cost: 15. Iterations: 266
Self loop is not canonical. Going for generic transformation with 266 iterations.
Attempting to transform self loop for.body.i of get_mininginfo with 266 inner loop iterations --> Loop at depth 1 containing: %for.body.i<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %for.body.lr.ph.i.new ], [ %niter.nsub.3, %selfLoopOptExitBlock4 ], mapping it to   %phiIVClone6 = phi i64 
User in header block to replace Phi:   %22 = add i64 -1064, %niter
Applied self loop transform on for.body.i( get_mininginfo() )

get_mininginfo(): Transformed Self loop Loop at depth 1 containing: %for.body.i<header>,%selfLoopOptBlock3,%selfLoopOptExitBlock4<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock3<header><latch><exiting>

get_upstream_work(): Transformed branch between if.then10 and cleanup in the forward direction
get_upstream_work(): Transformed branch between land.lhs.true.i and cleanup_dummy in the forward direction
get_upstream_work(): Transformed branch between land.lhs.true1.i and cleanup_dummy_dummy in the forward direction
get_upstream_work(): Transformed branch between if.then17 and cleanup in the forward direction
get_upstream_work(): Transformed branch between land.lhs.true.i77 and cleanup_dummy1 in the forward direction
get_upstream_work(): Transformed branch between land.lhs.true1.i79 and cleanup_dummy1_dummy in the forward direction
get_upstream_work(): Transformed branch between land.lhs.true.i85 and start.backedge in the forward direction
get_upstream_work(): Transformed branch between land.lhs.true1.i87 and start.backedge_dummy in the forward direction
get_upstream_work(): Transformed branch between land.lhs.true1.i95 and json_decref.exit97 in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 2 of if.end29
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of if.end29 to successor if.end32
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of if.end29 to successor cleanup.loopexit
manageDanglingLCCs(inverted V shape): Removing cost 104 of if.end32
manageDanglingLCCs(inverted V shape): Adding pred cost 104 of if.end32 to successor if.else40
manageDanglingLCCs(inverted V shape): Adding pred cost 104 of if.end32 to successor if.then34
Func cost 415 for get_upstream_work has been optimized for entry cost!
Direct branch from land.lhs.true1.i needs to be instrumented
Direct branch from land.lhs.true1.i79 needs to be instrumented
Direct branch from land.lhs.true.i77 needs to be instrumented
Direct branch from if.then17 needs to be instrumented
Direct branch from land.lhs.true1.i87 needs to be instrumented
Direct branch from if.end44 needs to be instrumented
Direct branch from land.lhs.true1.i95 needs to be instrumented
Func cost 405 for get_upstream_work has been optimized for exit cost!
Storing cost of get_upstream_work() : 820

Instrumenting loops (self loop count: 0, sese loop count: 0) for function get_upstream_work

Loops scheduled for transform for get_upstream_work:- 

init_stats(): Transformed branch between land.lhs.true and if.end13 in the forward direction
Skipping unreachable block if.then
Func cost 406 for init_stats has been optimized for entry cost!
Direct branch from land.lhs.true needs to be instrumented
Direct branch from if.end needs to be instrumented
Storing cost of init_stats() : 406

Instrumenting loops (self loop count: 0, sese loop count: 0) for function init_stats

Loops scheduled for transform for init_stats:- 

longpoll_thread(): Transformed branch between start.preheader and out in the forward direction
longpoll_thread(): Transformed branch between start.loopexit.loopexit.unr-lcssa and start.loopexit in the forward direction
longpoll_thread(): Transformed branch between land.lhs.true.i and cleanup157.thread in the forward direction
longpoll_thread(): Transformed branch between land.lhs.true1.i and cleanup157.thread_dummy in the forward direction
longpoll_thread(): Transformed branch between land.end114 and land.lhs.true.i236 in the forward direction
longpoll_thread(): Transformed branch between if.end141 and land.lhs.true.i236_dummy in the forward direction
longpoll_thread(): Transformed branch between land.lhs.true.i236.loopexit.unr-lcssa and land.lhs.true.i236_dummy_dummy in the forward direction
longpoll_thread(): Transformed branch between land.lhs.true.i236 and while.cond.backedge in the forward direction
longpoll_thread(): Transformed branch between land.lhs.true1.i238 and while.cond.backedge_dummy in the forward direction
longpoll_thread(): Transformed branch between if.then152 and while.cond.backedge in the forward direction
longpoll_thread(): Transformed branch between while.cond.backedge.loopexit.unr-lcssa and while.cond.backedge_dummy2 in the forward direction
longpoll_thread(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i223.epil<header><latch><exiting>
. Latch: for.body.i223.epil, Exiting block: for.body.i223.epil
longpoll_thread(): Checking if simple for Loop Loop at depth 3 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
longpoll_thread(): Checking if simple for Loop Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
. Latch: for.body.i.epil, Exiting block: for.body.i.epil
longpoll_thread(): Checking if simple for Loop Loop at depth 3 containing: %for.body.i231<header><latch><exiting>
. Latch: for.body.i231, Exiting block: for.body.i231
longpoll_thread(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i223<header><latch><exiting>
. Latch: for.body.i223, Exiting block: for.body.i223
longpoll_thread(): Checking if simple for Loop Loop at depth 3 containing: %for.body.i231.epil<header><latch><exiting>
. Latch: for.body.i231.epil, Exiting block: for.body.i231.epil
manageDanglingLCCs(inverted V shape): Removing cost 513 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 513 of entry to successor start.preheader
manageDanglingLCCs(inverted V shape): Adding pred cost 513 of entry to successor if.then
manageDanglingLCCs(inverted V shape): Removing cost 305 of if.then35
manageDanglingLCCs(inverted V shape): Adding pred cost 305 of if.then35 to successor cleanup.thread
manageDanglingLCCs(inverted V shape): Adding pred cost 305 of if.then35 to successor cleanup
Direct branch from if.end30 needs to be instrumented
Direct branch from if.else46 needs to be instrumented
Direct branch from land.lhs.true1.i needs to be instrumented
Direct branch from if.then78 needs to be instrumented
Direct branch from if.end92 needs to be instrumented
Direct branch from if.then109 needs to be instrumented
Direct branch from if.then126 needs to be instrumented
Direct branch from if.end132 needs to be instrumented
Direct branch from if.then124 needs to be instrumented
Self loop:- #backedges: 0, body cost: 15, preheader cost: 112
Self loop will be transformed, & body cost is 15 for loop Loop at depth 3 containing: %for.body.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 6, preheader cost: 114
Self loop will be transformed, & body cost is 6 for loop Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>

Direct branch from land.end114 needs to be instrumented
Direct branch from land.lhs.true1.i238 needs to be instrumented
Direct branch from land.lhs.true.i236 needs to be instrumented
Self loop:- #backedges: 0, body cost: 15, preheader cost: 11
Self loop will be transformed, & body cost is 15 for loop Loop at depth 3 containing: %for.body.i231<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 6, preheader cost: 13
Self loop will be transformed, & body cost is 6 for loop Loop at depth 3 containing: %for.body.i231.epil<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 15, preheader cost: 12
Self loop will be transformed, & body cost is 15 for loop Loop at depth 2 containing: %for.body.i223<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 6, preheader cost: 14
Self loop will be transformed, & body cost is 6 for loop Loop at depth 2 containing: %for.body.i223.epil<header><latch><exiting>

Direct branch from out needs to be instrumented

Instrumenting loops (self loop count: 6, sese loop count: 0) for function longpoll_thread

Loops scheduled for transform for longpoll_thread:- 
Self Loop: Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>

Self Loop: Loop at depth 3 containing: %for.body.i<header><latch><exiting>

Self Loop: Loop at depth 3 containing: %for.body.i231.epil<header><latch><exiting>

Self Loop: Loop at depth 3 containing: %for.body.i231<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i223.epil<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i223<header><latch><exiting>



longpoll_thread(): Self loop Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i.epil( longpoll_thread() ). Self Loop cost: 6. Iterations: 666
Self loop is not canonical. Going for generic transformation with 666 iterations.
Attempting to transform self loop for.body.i.epil of longpoll_thread with 666 inner loop iterations --> Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
Found local ind var:   %epil.iter291 = phi i64 [ %epil.iter291.sub, %selfLoopOptExitBlock ], [ %xtraiter290, %for.body.i.epil.preheader ], mapping it to   %phiIVClone3 = phi i64 
User in header block to replace Phi:   %39 = add i64 -666, %epil.iter291
Applied self loop transform on for.body.i.epil( longpoll_thread() )

longpoll_thread(): Transformed Self loop Loop at depth 3 containing: %for.body.i.epil<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 4 containing: %selfLoopOptBlock<header><latch><exiting>


longpoll_thread(): Self loop Loop at depth 3 containing: %for.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i( longpoll_thread() ). Self Loop cost: 15. Iterations: 266
Self loop is not canonical. Going for generic transformation with 266 iterations.
Attempting to transform self loop for.body.i of longpoll_thread with 266 inner loop iterations --> Loop at depth 3 containing: %for.body.i<header><latch><exiting>
Found local ind var:   %niter294 = phi i64 [ %unroll_iter293, %for.body.lr.ph.i.new ], [ %niter294.nsub.3, %selfLoopOptExitBlock5 ], mapping it to   %phiIVClone7 = phi i64 
User in header block to replace Phi:   %39 = add i64 -1064, %niter294
Applied self loop transform on for.body.i( longpoll_thread() )

longpoll_thread(): Transformed Self loop Loop at depth 3 containing: %for.body.i<header>,%selfLoopOptBlock4,%selfLoopOptExitBlock5<latch><exiting>
    Loop at depth 4 containing: %selfLoopOptBlock4<header><latch><exiting>


longpoll_thread(): Self loop Loop at depth 3 containing: %for.body.i231.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i231.epil( longpoll_thread() ). Self Loop cost: 6. Iterations: 666
Self loop is not canonical. Going for generic transformation with 666 iterations.
Attempting to transform self loop for.body.i231.epil of longpoll_thread with 666 inner loop iterations --> Loop at depth 3 containing: %for.body.i231.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i64 [ %epil.iter.sub, %selfLoopOptExitBlock13 ], [ %xtraiter, %for.body.i231.epil.preheader ], mapping it to   %phiIVClone15 = phi i64 
User in header block to replace Phi:   %57 = add i64 -666, %epil.iter
Applied self loop transform on for.body.i231.epil( longpoll_thread() )

longpoll_thread(): Transformed Self loop Loop at depth 3 containing: %for.body.i231.epil<header>,%selfLoopOptBlock12,%selfLoopOptExitBlock13<latch><exiting>
    Loop at depth 4 containing: %selfLoopOptBlock12<header><latch><exiting>


longpoll_thread(): Self loop Loop at depth 3 containing: %for.body.i231<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i231( longpoll_thread() ). Self Loop cost: 15. Iterations: 266
Self loop is not canonical. Going for generic transformation with 266 iterations.
Attempting to transform self loop for.body.i231 of longpoll_thread with 266 inner loop iterations --> Loop at depth 3 containing: %for.body.i231<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %for.body.lr.ph.i226.new ], [ %niter.nsub.3, %selfLoopOptExitBlock21 ], mapping it to   %phiIVClone23 = phi i64 
User in header block to replace Phi:   %52 = add i64 -1064, %niter
Applied self loop transform on for.body.i231( longpoll_thread() )

longpoll_thread(): Transformed Self loop Loop at depth 3 containing: %for.body.i231<header>,%selfLoopOptBlock20,%selfLoopOptExitBlock21<latch><exiting>
    Loop at depth 4 containing: %selfLoopOptBlock20<header><latch><exiting>


longpoll_thread(): Self loop Loop at depth 2 containing: %for.body.i223.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i223.epil( longpoll_thread() ). Self Loop cost: 6. Iterations: 666
Self loop is not canonical. Going for generic transformation with 666 iterations.
Attempting to transform self loop for.body.i223.epil of longpoll_thread with 666 inner loop iterations --> Loop at depth 2 containing: %for.body.i223.epil<header><latch><exiting>
Found local ind var:   %epil.iter296 = phi i64 [ %epil.iter296.sub, %selfLoopOptExitBlock29 ], [ %xtraiter295, %for.body.i223.epil.preheader ], mapping it to   %phiIVClone31 = phi i64 
User in header block to replace Phi:   %5 = add i64 -666, %epil.iter296
Applied self loop transform on for.body.i223.epil( longpoll_thread() )

longpoll_thread(): Transformed Self loop Loop at depth 2 containing: %for.body.i223.epil<header>,%selfLoopOptBlock28,%selfLoopOptExitBlock29<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock28<header><latch><exiting>


longpoll_thread(): Self loop Loop at depth 2 containing: %for.body.i223<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i223( longpoll_thread() ). Self Loop cost: 15. Iterations: 266
Self loop is not canonical. Going for generic transformation with 266 iterations.
Attempting to transform self loop for.body.i223 of longpoll_thread with 266 inner loop iterations --> Loop at depth 2 containing: %for.body.i223<header><latch><exiting>
Found local ind var:   %niter299 = phi i64 [ %unroll_iter298, %for.body.lr.ph.i218.new ], [ %niter299.nsub.3, %selfLoopOptExitBlock37 ], mapping it to   %phiIVClone39 = phi i64 
User in header block to replace Phi:   %61 = add i64 -1064, %niter299
Applied self loop transform on for.body.i223( longpoll_thread() )

longpoll_thread(): Transformed Self loop Loop at depth 2 containing: %for.body.i223<header>,%selfLoopOptBlock36,%selfLoopOptExitBlock37<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock36<header><latch><exiting>

main(): Transformed branch between if.else and if.end48 in the forward direction
main(): Transformed branch between if.then32 and if.end48_dummy in the forward direction
main(): Transformed branch between if.else39 and if.end48_dummy in the forward direction
main(): Transformed branch between if.end115 and cleanup in the forward direction
main(): Transformed branch between if.end120 and cleanup_dummy in the forward direction
main(): Transformed branch between if.end126 and cleanup_dummy_dummy in the forward direction
main(): Transformed branch between if.end131 and cleanup_dummy_dummy_dummy in the forward direction
main(): Transformed branch between if.end149 and cleanup_dummy_dummy_dummy_dummy in the forward direction
main(): Transformed branch between if.end153 and cleanup_dummy_dummy_dummy_dummy_dummy in the forward direction
main(): Transformed branch between if.end173 and cleanup_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
main(): Transformed branch between if.end189 and if.end198 in the forward direction
main(): Transformed branch between if.end198 and cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
main(): Transformed branch between if.end215 and cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
Skipping unreachable block if.then52
Skipping unreachable block if.then87
Skipping unreachable block if.then91
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
main(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i,%for.inc.i<latch><exiting>
. Latch: for.inc.i, Exiting block: for.inc.i
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then45 (14)
Succs are:- if.end48_dummy_dummy1 (16)
manageDanglingLCCs(inverted V shape): Removing cost 110 of for.body
manageDanglingLCCs(inverted V shape): Adding pred cost 110 of for.body to successor if.end226
manageDanglingLCCs(inverted V shape): Adding pred cost 110 of for.body to successor cleanup.loopexit
manageDanglingLCCs(inverted V shape): Removing cost 418 of if.end226
manageDanglingLCCs(inverted V shape): Adding pred cost 418 of if.end226 to successor if.then229
manageDanglingLCCs(inverted V shape): Adding pred cost 418 of if.end226 to successor for.inc
Pred cost for if.then45 is 2
Pred cost for for.end.loopexit is 1
Pred cost for if.then229 is 521
Pred cost for for.end is 313
Pred cost for cleanup.loopexit is 111
manageDanglingLCCs(V shape): Removing cost 521 of predecessor if.then229 for merge node cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 313 of predecessor for.end for merge node cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 111 of predecessor cleanup.loopexit for merge node cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 315 as initial cost for merge node cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for if.then45 is 2
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 316
Pred cost for if.then213 is 102
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for if.then171 is 102
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for if.then152 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then152 for merge node cleanup_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup_dummy_dummy_dummy_dummy_dummy_dummy for merge node cleanup_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup_dummy_dummy_dummy_dummy_dummy
Pred cost for if.then45 is 2
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 316
Pred cost for if.then213 is 102
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy is 52
Pred cost for cleanup_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy is 1
Pred cost for if.then80 is 102
Direct branch from if.then11 needs to be instrumented
Direct branch from if.then7 needs to be instrumented
Direct branch from entry needs to be instrumented
Direct branch from if.then32 needs to be instrumented
Direct branch from if.end66 needs to be instrumented
Direct branch from if.end92 needs to be instrumented
Direct branch from if.end98 needs to be instrumented
Direct branch from if.then111 needs to be instrumented
Instrumenting loop with body cost: 14
Non-header-colocated-exit loop will be transformed, & body cost is 14 for loop with header for.body.i
Direct branch from if.end107 needs to be instrumented
Direct branch from if.then141 needs to be instrumented
Direct branch from if.end189 needs to be instrumented

Instrumenting loops (self loop count: 0, sese loop count: 1) for function main

Loops scheduled for transform for main:- 
Sese Loop: Loop at depth 1 containing: %for.body.i<header>,%if.then.i,%for.inc.i<latch><exiting>



main(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i,%for.inc.i<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> for.body.i( main() )

main(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i,%for.inc.i<latch><exiting>

miner_thread(): Transformed branch between if.then and if.end11.sink.split in the forward direction
miner_thread(): Transformed branch between if.then9 and if.end11.sink.split in the forward direction
miner_thread(): Transformed branch between if.then13 and if.end32 in the forward direction
miner_thread(): Transformed branch between if.else24 and if.end32_dummy in the forward direction
miner_thread(): Transformed branch between while.end96 and if.end164 in the forward direction
miner_thread(): Transformed branch between if.then.i900 and if.end10.i in the forward direction
miner_thread(): Transformed branch between if.then3.i902 and if.end10.i_dummy in the forward direction
miner_thread(): Transformed branch between if.then16.i904 and if.end26.i in the forward direction
miner_thread(): Transformed branch between if.then308 and if.end339 in the forward direction
miner_thread(): Transformed branch between cond.end315 and if.end339_dummy in the forward direction
miner_thread(): Transformed branch between land.lhs.true506 and if.end530 in the forward direction
miner_thread(): Transformed branch between for.end and if.end567 in the forward direction
miner_thread(): Transformed branch between if.end.i22.i and workio_cmd_free.exit.i928 in the forward direction
miner_thread(): Transformed branch between if.end574 and cleanup583 in the forward direction
Skipping unreachable block if.then37
Skipping unreachable block if.then46
Skipping unreachable block if.end289
miner_thread(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i850,%for.inc.i<latch><exiting>
. Latch: for.inc.i, Exiting block: for.inc.i
miner_thread(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i862<header>,%if.then.i868,%for.inc.i872<latch><exiting>
. Latch: for.inc.i872, Exiting block: for.inc.i872
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
miner_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.body94<header><latch><exiting>
. Latch: while.body94, Exiting block: while.body94
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb309 (158)
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 5
Succs are:- if.then62 (47)
Succs are:- if.then66 (48)
Succs are:- if.then70 (49)
Succs are:- if.end74.fold.split (50)
Succs are:- if.end74 (51)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 50, #successors: 10
Succs are:- sw.bb330 (162)
Succs are:- sw.bb331 (163)
Succs are:- sw.bb332 (164)
Succs are:- sw.bb333 (165)
Succs are:- sw.bb334 (166)
Succs are:- sw.bb335 (167)
Succs are:- sw.bb336 (168)
Succs are:- sw.default (169)
Succs are:- if.end339_dummy (171)
Succs are:- sw.bb309 (158)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb513 (243)
Succs are:- sw.default516 (244)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- sw.bb552 (257)
Succs are:- sw.default556 (258)
manageDanglingLCCs(inverted V shape): Removing cost 3 of if.then26
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.then26 to successor if.end29.thread
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.then26 to successor if.end29
manageDanglingLCCs(inverted V shape): Removing cost 9 of if.end74
manageDanglingLCCs(inverted V shape): Adding pred cost 9 of if.end74 to successor while.cond80.preheader
manageDanglingLCCs(inverted V shape): Adding pred cost 9 of if.end74 to successor if.else121
manageDanglingLCCs(inverted V shape): Removing cost 106 of if.end199
manageDanglingLCCs(inverted V shape): Adding pred cost 106 of if.end199 to successor if.end199.if.end233_crit_edge
manageDanglingLCCs(inverted V shape): Adding pred cost 106 of if.end199 to successor if.then205
manageDanglingLCCs(inverted V shape): Adding pred cost 106 of if.end199 to successor if.then219
manageDanglingLCCs(inverted V shape): Removing cost 107 of if.then269
manageDanglingLCCs(inverted V shape): Adding pred cost 107 of if.then269 to successor if.then276
manageDanglingLCCs(inverted V shape): Adding pred cost 107 of if.then269 to successor cleanup297.thread
manageDanglingLCCs(inverted V shape): Removing cost 108 of if.then276
manageDanglingLCCs(inverted V shape): Adding pred cost 108 of if.then276 to successor if.end281
manageDanglingLCCs(inverted V shape): Adding pred cost 108 of if.then276 to successor cleanup297
manageDanglingLCCs(inverted V shape): Removing cost 111 of if.end281
manageDanglingLCCs(inverted V shape): Adding pred cost 111 of if.end281 to successor if.then283
manageDanglingLCCs(inverted V shape): Adding pred cost 111 of if.end281 to successor if.else288
manageDanglingLCCs(inverted V shape): Removing cost 4 of land.rhs540
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of land.rhs540 to successor for.body
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of land.rhs540 to successor for.end.loopexit.split.loop.exit1012
Pred cost for if.end32_dummy is 1
Pred cost for if.end164_dummy is 1
Pred cost for if.then191 is 105
Pred cost for if.end227 is 7
Pred cost for if.end212 is 11
Pred cost for if.end199.if.end233_crit_edge is 108
manageDanglingLCCs(V shape): Removing cost 108 of predecessor if.end199.if.end233_crit_edge for merge node if.end233
manageDanglingLCCs(V shape): Removing cost 11 of predecessor if.end212 for merge node if.end233
manageDanglingLCCs(V shape): Removing cost 7 of predecessor if.end227 for merge node if.end233
manageDanglingLCCs(V shape): Settting average cost 42 as initial cost for merge node if.end233
Pred cost for if.end32_dummy is 1
Pred cost for if.end164_dummy is 1
Pred cost for if.then191 is 105
Pred cost for if.then46.i is 4
Pred cost for if.end43.if.end52_crit_edge.i is 2
manageDanglingLCCs(V shape): Removing cost 2 of predecessor if.end43.if.end52_crit_edge.i for merge node wanna_mine.exit
manageDanglingLCCs(V shape): Removing cost 4 of predecessor if.then46.i for merge node wanna_mine.exit
manageDanglingLCCs(V shape): Settting average cost 3 as initial cost for merge node wanna_mine.exit
Pred cost for if.end32_dummy is 1
Pred cost for if.end164_dummy is 1
Pred cost for if.then191 is 105
Pred cost for sw.default516 is 210
Pred cost for sw.bb513 is 105
manageDanglingLCCs(V shape): Removing cost 105 of predecessor sw.bb513 for merge node sw.epilog528
manageDanglingLCCs(V shape): Removing cost 210 of predecessor sw.default516 for merge node sw.epilog528
manageDanglingLCCs(V shape): Settting average cost 157 as initial cost for merge node sw.epilog528
Pred cost for if.end32_dummy is 1
Pred cost for if.end164_dummy is 1
Pred cost for if.then191 is 105
Pred cost for for.end.loopexit is 1
Pred cost for for.end.loopexit.split.loop.exit1012 is 6
Pred cost for sw.default556 is 105
Pred cost for sw.bb552 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor sw.bb552 for merge node sw.epilog564
manageDanglingLCCs(V shape): Removing cost 105 of predecessor sw.default556 for merge node sw.epilog564
manageDanglingLCCs(V shape): Settting average cost 103 as initial cost for merge node sw.epilog564
Pred cost for if.end32_dummy is 1
Pred cost for if.end164_dummy is 1
Pred cost for if.then191 is 105
Pred cost for for.end.loopexit is 1
Pred cost for for.end.loopexit.split.loop.exit1012 is 6
Pred cost for if.end567_dummy is 1
Pred cost for cleanup597.loopexit is 1
Pred cost for workio_cmd_free.exit.i928 is 102
Pred cost for cleanup583.thread943 is 204
manageDanglingLCCs(V shape): Removing cost 204 of predecessor cleanup583.thread943 for merge node cleanup597
manageDanglingLCCs(V shape): Removing cost 102 of predecessor workio_cmd_free.exit.i928 for merge node cleanup597
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup597.loopexit for merge node cleanup597
manageDanglingLCCs(V shape): Settting average cost 102 as initial cost for merge node cleanup597
Pred cost for if.end32_dummy is 1
Pred cost for if.end164_dummy is 1
Pred cost for if.then191 is 105
Pred cost for for.end.loopexit is 1
Pred cost for for.end.loopexit.split.loop.exit1012 is 6
Pred cost for if.end567_dummy is 1
Direct branch from if.then needs to be instrumented
Direct branch from if.else needs to be instrumented
Direct branch from if.then9 needs to be instrumented
Direct branch from if.then17 needs to be instrumented
Instrumenting loop with body cost: 14
Non-header-colocated-exit loop will be transformed, & body cost is 14 for loop with header for.body.i
Instrumenting loop with body cost: 14
Non-header-colocated-exit loop will be transformed, & body cost is 14 for loop with header for.body.i862
Self loop:- #backedges: 0, body cost: 208, preheader cost: 6
Self loop will be transformed, & body cost is 208 for loop Loop at depth 2 containing: %while.body94<header><latch><exiting>

Direct branch from sw.bb.i.i needs to be instrumented
Direct branch from if.end.i2.i needs to be instrumented
Direct branch from if.end5.i.i needs to be instrumented
Direct branch from if.end9.i.i needs to be instrumented
Direct branch from if.end151 needs to be instrumented
Direct branch from if.then183 needs to be instrumented
Direct branch from if.end.i889 needs to be instrumented
Direct branch from if.end5.i needs to be instrumented
Direct branch from if.end9.i needs to be instrumented
Direct branch from work_free.exit needs to be instrumented
Direct branch from if.end.i893 needs to be instrumented
Direct branch from if.end8.i needs to be instrumented
Direct branch from if.end14.i needs to be instrumented
Direct branch from if.then3.i902 needs to be instrumented
Direct branch from if.then.i900 needs to be instrumented
Direct branch from if.then16.i904 needs to be instrumented
Direct branch from if.end251 needs to be instrumented
Direct branch from if.end339 needs to be instrumented
Direct branch from sw.epilog485 needs to be instrumented
Direct branch from if.end6.i needs to be instrumented
Direct branch from if.end.i.i912 needs to be instrumented
Direct branch from if.end8.i.i needs to be instrumented
Direct branch from if.end14.i.i needs to be instrumented
Direct branch from sw.bb.i.i918 needs to be instrumented
Direct branch from if.end.i27.i needs to be instrumented
Direct branch from if.end5.i.i922 needs to be instrumented
Direct branch from if.end9.i.i925 needs to be instrumented
Direct branch from if.end574 needs to be instrumented

Instrumenting loops (self loop count: 1, sese loop count: 2) for function miner_thread

Loops scheduled for transform for miner_thread:- 
Self Loop: Loop at depth 2 containing: %while.body94<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body.i<header>,%if.then.i850,%for.inc.i<latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body.i862<header>,%if.then.i868,%for.inc.i872<latch><exiting>



miner_thread(): Self loop Loop at depth 2 containing: %while.body94<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.body94( miner_thread() )

miner_thread(): Transformed Self loop Loop at depth 2 containing: %while.body94<header><latch><exiting>


miner_thread(): Max depth loop Loop at depth 1 containing: %for.body.i862<header>,%if.then.i868,%for.inc.i872<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> for.body.i862( miner_thread() )

miner_thread(): Transformed loop Loop at depth 1 containing: %for.body.i862<header>,%if.then.i868,%for.inc.i872<latch><exiting>


miner_thread(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i850,%for.inc.i<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> for.body.i( miner_thread() )

miner_thread(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i850,%for.inc.i<latch><exiting>

parse_arg(): Transformed branch between if.end129 and sw.epilog in the forward direction
parse_arg(): Transformed branch between sw.bb137 and sw.epilog in the forward direction
parse_arg(): Transformed branch between if.else152 and sw.epilog_dummy1 in the forward direction
parse_arg(): Transformed branch between land.lhs.true154 and sw.epilog_dummy1_dummy in the forward direction
parse_arg(): Transformed branch between if.then196 and if.end208 in the forward direction
parse_arg(): Transformed branch between land.lhs.true.i and if.end208 in the forward direction
parse_arg(): Transformed branch between land.lhs.true1.i and if.end208_dummy2 in the forward direction
parse_arg(): Transformed branch between sw.bb213 and sw.epilog in the forward direction
parse_arg(): Transformed branch between if.end.i and sw.epilog_dummy3 in the forward direction
parse_arg(): Transformed branch between if.end356 and sw.epilog in the forward direction
parse_arg(): Transformed branch between if.end.i713 and sw.epilog_dummy4 in the forward direction
parse_arg(): Transformed branch between if.else373 and if.end389 in the forward direction
parse_arg(): Transformed branch between if.else377 and if.end389_dummy in the forward direction
Skipping unreachable block if.then122
Skipping unreachable block if.then177
Skipping unreachable block if.then223
Skipping unreachable block if.then232
Skipping unreachable block if.then241
Skipping unreachable block if.then250
Skipping unreachable block if.then259
Skipping unreachable block if.then316
Skipping unreachable block if.then337
Skipping unreachable block if.then354
Skipping unreachable block sw.bb396
Skipping unreachable block if.then409
Skipping unreachable block if.then417
Skipping unreachable block if.then425
Skipping unreachable block if.then431
Skipping unreachable block if.then456
Skipping unreachable block sw.bb479
Skipping unreachable block sw.bb480
Skipping unreachable block sw.default
parse_arg(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>
. Latch: while.body.i, Exiting block: while.body.i
parse_arg(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i717<header><latch><exiting>
. Latch: while.body.i717, Exiting block: while.body.i717
manageDanglingLCCs(inverted V shape): Removing cost 103 of if.else
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.else to successor if.then50
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.else to successor if.else51
manageDanglingLCCs(inverted V shape): Removing cost 206 of if.else51
manageDanglingLCCs(inverted V shape): Adding pred cost 206 of if.else51 to successor if.else55
manageDanglingLCCs(inverted V shape): Adding pred cost 206 of if.else51 to successor if.then54
manageDanglingLCCs(inverted V shape): Removing cost 309 of if.else55
manageDanglingLCCs(inverted V shape): Adding pred cost 309 of if.else55 to successor if.then58
manageDanglingLCCs(inverted V shape): Adding pred cost 309 of if.else55 to successor if.else59
manageDanglingLCCs(inverted V shape): Removing cost 412 of if.else59
manageDanglingLCCs(inverted V shape): Adding pred cost 412 of if.else59 to successor if.else63
manageDanglingLCCs(inverted V shape): Adding pred cost 412 of if.else59 to successor if.then62
manageDanglingLCCs(inverted V shape): Removing cost 515 of if.else63
manageDanglingLCCs(inverted V shape): Adding pred cost 515 of if.else63 to successor if.then66
manageDanglingLCCs(inverted V shape): Adding pred cost 515 of if.else63 to successor if.else67
manageDanglingLCCs(inverted V shape): Removing cost 618 of if.else67
manageDanglingLCCs(inverted V shape): Adding pred cost 618 of if.else67 to successor if.then70
manageDanglingLCCs(inverted V shape): Adding pred cost 618 of if.else67 to successor if.else71
manageDanglingLCCs(inverted V shape): Removing cost 721 of if.else71
manageDanglingLCCs(inverted V shape): Adding pred cost 721 of if.else71 to successor if.then74
manageDanglingLCCs(inverted V shape): Adding pred cost 721 of if.else71 to successor if.else75
manageDanglingLCCs(inverted V shape): Removing cost 824 of if.else75
manageDanglingLCCs(inverted V shape): Adding pred cost 824 of if.else75 to successor if.else79
manageDanglingLCCs(inverted V shape): Adding pred cost 824 of if.else75 to successor if.then78
manageDanglingLCCs(inverted V shape): Removing cost 927 of if.else79
manageDanglingLCCs(inverted V shape): Adding pred cost 927 of if.else79 to successor if.then82
manageDanglingLCCs(inverted V shape): Adding pred cost 927 of if.else79 to successor if.else83
manageDanglingLCCs(inverted V shape): Removing cost 1030 of if.else83
manageDanglingLCCs(inverted V shape): Adding pred cost 1030 of if.else83 to successor if.then86
manageDanglingLCCs(inverted V shape): Adding pred cost 1030 of if.else83 to successor if.else87
manageDanglingLCCs(inverted V shape): Removing cost 1133 of if.else87
manageDanglingLCCs(inverted V shape): Adding pred cost 1133 of if.else87 to successor if.then90
manageDanglingLCCs(inverted V shape): Adding pred cost 1133 of if.else87 to successor if.else91
manageDanglingLCCs(inverted V shape): Removing cost 1236 of if.else91
manageDanglingLCCs(inverted V shape): Adding pred cost 1236 of if.else91 to successor if.then94
manageDanglingLCCs(inverted V shape): Adding pred cost 1236 of if.else91 to successor if.else95
Pred cost for cleanup is 102
Pred cost for if.end31 is 106
Pred cost for if.then11 is 3
manageDanglingLCCs(V shape): Removing cost 3 of predecessor if.then11 for merge node if.end123
manageDanglingLCCs(V shape): Removing cost 106 of predecessor if.end31 for merge node if.end123
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node if.end123
Pred cost for cleanup is 102
Pred cost for if.else189 is 102
Pred cost for if.then187 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then187 for merge node if.end191
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.else189 for merge node if.end191
manageDanglingLCCs(V shape): Settting average cost 102 as initial cost for merge node if.end191
Pred cost for cleanup is 102
Direct branch from if.then36 needs to be instrumented
Direct branch from if.else152 needs to be instrumented
Direct branch from if.then140 needs to be instrumented
Direct branch from land.lhs.true1.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 5, preheader cost: 213
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>

Direct branch from sw.bb263 needs to be instrumented
Direct branch from if.end345 needs to be instrumented
Self loop:- #backedges: 0, body cost: 5, preheader cost: 830
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body.i717<header><latch><exiting>

Direct branch from if.else377 needs to be instrumented
Direct branch from if.else373 needs to be instrumented
Direct branch from sw.bb369 needs to be instrumented

Instrumenting loops (self loop count: 2, sese loop count: 0) for function parse_arg

Loops scheduled for transform for parse_arg:- 
Self Loop: Loop at depth 1 containing: %while.body.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body.i717<header><latch><exiting>



parse_arg(): Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i( parse_arg() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

parse_arg(): Transformed Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>


parse_arg(): Self loop Loop at depth 1 containing: %while.body.i717<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i717( parse_arg() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

parse_arg(): Transformed Self loop Loop at depth 1 containing: %while.body.i717<header><latch><exiting>

Skipping unreachable block if.then2
parse_cmdline(): Checking if simple for Loop Loop at depth 1 containing: %if.end<header><latch><exiting>
. Latch: if.end, Exiting block: if.end
Self loop:- #backedges: 0, body cost: 106, preheader cost: 104
Self loop will be transformed, & body cost is 106 for loop Loop at depth 1 containing: %if.end<header><latch><exiting>

Func cost 108 for parse_cmdline has been optimized for entry cost!
Storing cost of parse_cmdline() : 108

Instrumenting loops (self loop count: 1, sese loop count: 0) for function parse_cmdline

Loops scheduled for transform for parse_cmdline:- 
Self Loop: Loop at depth 1 containing: %if.end<header><latch><exiting>



parse_cmdline(): Self loop Loop at depth 1 containing: %if.end<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> if.end( parse_cmdline() )

parse_cmdline(): Transformed Self loop Loop at depth 1 containing: %if.end<header><latch><exiting>

parse_config(): Transformed branch between land.lhs.true69 and for.inc in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 1 of land.lhs.true12
manageDanglingLCCs(inverted V shape): Adding pred cost 1 of land.lhs.true12 to successor if.then15
manageDanglingLCCs(inverted V shape): Adding pred cost 1 of land.lhs.true12 to successor if.then34
manageDanglingLCCs(inverted V shape): Adding pred cost 1 of land.lhs.true12 to successor if.then53
manageDanglingLCCs(inverted V shape): Adding pred cost 1 of land.lhs.true12 to successor if.else78

Instrumenting loops (self loop count: 0, sese loop count: 0) for function parse_config

Loops scheduled for transform for parse_config:- 

Skipping unreachable block entry
Func cost 102 for proper_exit has been optimized for entry cost!
Storing cost of proper_exit() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function proper_exit

Loops scheduled for transform for proper_exit:- 

restart_threads(): Transformed branch between for.end.loopexit.unr-lcssa and for.end in the forward direction
restart_threads(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
restart_threads(): Checking if simple for Loop Loop at depth 1 containing: %for.body.epil<header><latch><exiting>
. Latch: for.body.epil, Exiting block: for.body.epil
Self loop:- #backedges: 0, body cost: 15, preheader cost: 11
Self loop will be transformed, & body cost is 15 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 6, preheader cost: 13
Self loop will be transformed, & body cost is 6 for loop Loop at depth 1 containing: %for.body.epil<header><latch><exiting>

Func cost 10 for restart_threads has been optimized for entry cost!
Storing cost of restart_threads() : 10

Instrumenting loops (self loop count: 2, sese loop count: 0) for function restart_threads

Loops scheduled for transform for restart_threads:- 
Self Loop: Loop at depth 1 containing: %for.body.epil<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



restart_threads(): Self loop Loop at depth 1 containing: %for.body.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.epil( restart_threads() ). Self Loop cost: 6. Iterations: 666
Self loop is not canonical. Going for generic transformation with 666 iterations.
Attempting to transform self loop for.body.epil of restart_threads with 666 inner loop iterations --> Loop at depth 1 containing: %for.body.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i64 [ %epil.iter.sub, %selfLoopOptExitBlock ], [ %xtraiter, %for.body.epil.preheader ], mapping it to   %phiIVClone1 = phi i64 
User in header block to replace Phi:   %5 = add i64 -666, %epil.iter
Applied self loop transform on for.body.epil( restart_threads() )

restart_threads(): Transformed Self loop Loop at depth 1 containing: %for.body.epil<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


restart_threads(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( restart_threads() ). Self Loop cost: 15. Iterations: 266
Self loop is not canonical. Going for generic transformation with 266 iterations.
Attempting to transform self loop for.body of restart_threads with 266 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.3, %selfLoopOptExitBlock3 ], mapping it to   %phiIVClone5 = phi i64 
User in header block to replace Phi:   %5 = add i64 -1064, %niter
Applied self loop transform on for.body( restart_threads() )

restart_threads(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock2<header><latch><exiting>

rpc2_login(): Transformed branch between if.end and cleanup in the forward direction
rpc2_login(): Transformed branch between if.end7 and cleanup_dummy in the forward direction
rpc2_login(): Transformed branch between if.end12 and cleanup_dummy_dummy in the forward direction
rpc2_login(): Transformed branch between land.lhs.true.i and cleanup_dummy_dummy_dummy in the forward direction
rpc2_login(): Transformed branch between land.lhs.true1.i and cleanup_dummy_dummy_dummy_dummy in the forward direction
Direct branch from if.end16 needs to be instrumented
Direct branch from land.lhs.true1.i needs to be instrumented
Direct branch from if.end12 needs to be instrumented
Direct branch from if.end7 needs to be instrumented
Direct branch from if.end needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 405 for rpc2_login has been optimized for entry cost!
Storing cost of rpc2_login() : 405

Instrumenting loops (self loop count: 0, sese loop count: 0) for function rpc2_login

Loops scheduled for transform for rpc2_login:- 

Direct branch from if.then needs to be instrumented
Direct branch from if.end.i needs to be instrumented
Direct branch from if.end5.i needs to be instrumented
Direct branch from if.end9.i needs to be instrumented
Direct branch from work_free.exit needs to be instrumented
Direct branch from if.end.i12 needs to be instrumented
Direct branch from if.end8.i needs to be instrumented
Direct branch from if.end14.i needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 102 for rpc2_stratum_job has been optimized for entry cost!
Storing cost of rpc2_stratum_job() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function rpc2_stratum_job

Loops scheduled for transform for rpc2_stratum_job:- 

Pred cost for cleanup.sink.split.loopexit is 1
Pred cost for if.then6 is 102
Pred cost for cleanup.sink.split is 102
Func cost 3 for rpc2_workio_login has been optimized for entry cost!
Direct branch from if.end8 needs to be instrumented
Func cost 1 for rpc2_workio_login has been optimized for exit cost!
Storing cost of rpc2_workio_login() : 4

Instrumenting loops (self loop count: 0, sese loop count: 0) for function rpc2_workio_login

Loops scheduled for transform for rpc2_workio_login:- 

share_result(): Transformed branch between for.body.lr.ph and for.end in the forward direction
share_result(): Checking if simple for Loop Loop at depth 1 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
share_result(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Sign Extend: operand %2, type i64, scev (sext i32 %2 to i64)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb (19)
Succs are:- sw.default (20)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- sw.bb (19)
Succs are:- sw.default (20)
Func cost 415 for share_result has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 37, preheader cost: 9
Self loop will be transformed, & body cost is 37 for loop Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 6, preheader cost: 1
Self loop will be transformed, & body cost is 6 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Direct branch from sw.epilog needs to be instrumented
Func cost 203 for share_result has been optimized for exit cost!
Storing cost of share_result() : 618

Instrumenting loops (self loop count: 2, sese loop count: 0) for function share_result

Loops scheduled for transform for share_result:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body<header><latch><exiting>



share_result(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( share_result() ). Self Loop cost: 6. Iterations: 666
Self loop is not canonical. Going for generic transformation with 666 iterations.
Attempting to transform self loop for.body of share_result with 666 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ %indvars.iv.next, %selfLoopOptExitBlock ], [ %indvars.iv.ph, %for.body.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %46 = add i64 666, %indvars.iv
Applied self loop transform on for.body( share_result() )

share_result(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


share_result(): Self loop Loop at depth 1 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( share_result() ). Self Loop cost: 37. Iterations: 108
Self loop is not canonical. Going for generic transformation with 108 iterations.
Attempting to transform self loop vector.body of share_result with 108 inner loop iterations --> Loop at depth 1 containing: %vector.body<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %selfLoopOptExitBlock3 ], mapping it to   %phiIVClone9 = phi i64 
User in header block to replace Phi:   %9 = add i64 -216, %niter
Applied self loop transform on vector.body( share_result() )

share_result(): Transformed Self loop Loop at depth 1 containing: %vector.body<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock2<header><latch><exiting>

Skipping unreachable block if.end
manageDanglingLCCs(inverted V shape): Removing cost 2 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of entry to successor if.then
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of entry to successor if.else
Func cost 102 for show_usage_and_exit has been optimized for exit cost!
Storing cost of show_usage_and_exit() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function show_usage_and_exit

Loops scheduled for transform for show_usage_and_exit:- 

Skipping unreachable block entry
Func cost 1011 for show_version_and_exit has been optimized for entry cost!
Storing cost of show_version_and_exit() : 1011

Instrumenting loops (self loop count: 0, sese loop count: 0) for function show_version_and_exit

Loops scheduled for transform for show_version_and_exit:- 

Skipping unreachable block sw.bb1
Skipping unreachable block sw.bb2
Pred cost for sw.bb is 102
Func cost 1 for signal_handler has been optimized for entry cost!
Storing cost of signal_handler() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function signal_handler

Loops scheduled for transform for signal_handler:- 

stratum_gen_work(): Transformed branch between for.body189.lr.ph and for.end198 in the forward direction
stratum_gen_work(): Transformed branch between for.body.i.preheader and for.cond23.preheader.i in the forward direction
stratum_gen_work(): Transformed branch between for.body28.i.preheader and for.cond.cleanup27.i in the forward direction
stratum_gen_work(): Transformed branch between switch.early.test and if.end404 in the forward direction
stratum_gen_work(): Transformed branch between sw.epilog423 and if.end443 in the forward direction
stratum_gen_work(): Transformed branch between land.lhs.true433 and if.end440 in the forward direction
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.else84,%if.then81,%for.inc<latch><exiting>
. Latch: for.inc, Exiting block: for.inc
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Loop at depth 1 containing: %land.rhs<header><latch><exiting>
. Latch: land.rhs, Exiting block: land.rhs
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Loop at depth 1 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Loop at depth 1 containing: %for.body189<header><latch><exiting>
. Latch: for.body189, Exiting block: for.body189
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Parallel Loop at depth 1 containing: %vector.body181<header><latch><exiting>
. Latch: vector.body181, Exiting block: vector.body181
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Parallel Loop at depth 1 containing: %vector.body181.epil<header><latch><exiting>
. Latch: vector.body181.epil, Exiting block: vector.body181.epil
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Parallel Loop at depth 1 containing: %vector.body207<header><latch><exiting>
. Latch: vector.body207, Exiting block: vector.body207
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Parallel Loop at depth 1 containing: %vector.body207.epil<header><latch><exiting>
. Latch: vector.body207.epil, Exiting block: vector.body207.epil
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
stratum_gen_work(): Checking if simple for Loop Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>
. Latch: for.body28.i, Exiting block: for.body28.i
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- if.then371 (98)
Succs are:- if.end386 (99)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then396 (101)
Succs are:- if.end404_dummy (102)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 26, #successors: 4
Succs are:- sw.bb405 (104)
Succs are:- sw.bb409 (105)
Succs are:- sw.bb414 (106)
Succs are:- sw.default419 (107)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- if.then371 (98)
Succs are:- if.end386 (99)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then396 (101)
Succs are:- if.end404_dummy (102)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 26, #successors: 4
Succs are:- sw.bb405 (104)
Succs are:- sw.bb409 (105)
Succs are:- sw.bb414 (106)
Succs are:- sw.default419 (107)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- if.then371 (98)
Succs are:- if.end386 (99)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then396 (101)
Succs are:- if.end404_dummy (102)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 26, #successors: 4
Succs are:- sw.bb405 (104)
Succs are:- sw.bb409 (105)
Succs are:- sw.bb414 (106)
Succs are:- sw.default419 (107)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb (19)
Succs are:- sw.bb24 (20)
Succs are:- sw.bb31 (21)
Succs are:- sw.bb40 (22)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- if.then371 (98)
Succs are:- if.end386 (99)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- if.then396 (101)
Succs are:- if.end404_dummy (102)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 26, #successors: 4
Succs are:- sw.bb405 (104)
Succs are:- sw.bb409 (105)
Succs are:- sw.bb414 (106)
Succs are:- sw.default419 (107)
Pred cost for if.then371 is 516
Pred cost for if.end404_dummy is 1
Func cost 514 for stratum_gen_work has been optimized for entry cost!
Direct branch from if.then needs to be instrumented
Direct branch from if.end.i needs to be instrumented
Direct branch from if.end5.i needs to be instrumented
Direct branch from if.end9.i needs to be instrumented
Direct branch from work_free.exit needs to be instrumented
Direct branch from if.end.i5 needs to be instrumented
Direct branch from if.end8.i needs to be instrumented
Direct branch from if.end14.i needs to be instrumented
Instrumenting loop with body cost: 214
Non-header-colocated-exit loop will be transformed, & body cost is 214 for loop with header for.body
Self loop:- #backedges: 0, body cost: 11, preheader cost: 10
Self loop will be transformed, & body cost is 11 for loop Loop at depth 1 containing: %land.rhs<header><latch><exiting>

Direct branch from if.then138 needs to be instrumented
Self loop:- #backedges: 0, body cost: 55, preheader cost: 9
Self loop will be transformed, & body cost is 55 for loop Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 8, preheader cost: 1
Self loop will be transformed, & body cost is 8 for loop Loop at depth 1 containing: %for.body189<header><latch><exiting>

Direct branch from for.end198 needs to be instrumented
Direct branch from if.then361 needs to be instrumented
Self loop:- #backedges: 0, body cost: 4, preheader cost: 1
Self loop will be transformed, & body cost is 4 for loop Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 11
Self loop will be transformed, & body cost is 7 for loop Parallel Loop at depth 1 containing: %vector.body181<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 13
Self loop will be transformed, & body cost is 7 for loop Parallel Loop at depth 1 containing: %vector.body181.epil<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 4, preheader cost: 1
Self loop will be transformed, & body cost is 4 for loop Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 11
Self loop will be transformed, & body cost is 7 for loop Parallel Loop at depth 1 containing: %vector.body207<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 13
Self loop will be transformed, & body cost is 7 for loop Parallel Loop at depth 1 containing: %vector.body207.epil<header><latch><exiting>

Direct branch from for.cond.cleanup27.i needs to be instrumented
Direct branch from land.lhs.true433 needs to be instrumented
Direct branch from if.then428 needs to be instrumented
Func cost 203 for stratum_gen_work has been optimized for exit cost!
Storing cost of stratum_gen_work() : 717

Instrumenting loops (self loop count: 9, sese loop count: 1) for function stratum_gen_work

Loops scheduled for transform for stratum_gen_work:- 
Self Loop: Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %vector.body181.epil<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %vector.body181<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %vector.body207.epil<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %vector.body207<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body189<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %land.rhs<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body<header>,%if.else84,%if.then81,%for.inc<latch><exiting>



stratum_gen_work(): Self loop Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i( stratum_gen_work() ). Self Loop cost: 4. Iterations: 1000
Self loop is not canonical. Going for generic transformation with 1000 iterations.
Attempting to transform self loop for.body.i of stratum_gen_work with 1000 inner loop iterations --> Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>
Found local ind var:   %m.079.i = phi i32 [ %inc.i, %selfLoopOptExitBlock ], [ %m.079.i.ph, %for.body.i.preheader240 ], mapping it to   %phiIVClone = phi i32 
User in header block to replace Phi:   %350 = add i32 1000, %m.079.i
Applied self loop transform on for.body.i( stratum_gen_work() )

stratum_gen_work(): Transformed Self loop Parallel Loop at depth 1 containing: %for.body.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


stratum_gen_work(): Self loop Parallel Loop at depth 1 containing: %vector.body181.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body181.epil( stratum_gen_work() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop vector.body181.epil of stratum_gen_work with 571 inner loop iterations --> Parallel Loop at depth 1 containing: %vector.body181.epil<header><latch><exiting>
Found local ind var:   %epil.iter253 = phi i32 [ %epil.iter253.sub, %selfLoopOptExitBlock4 ], [ %xtraiter252, %vector.body181.epil.preheader ], mapping it to   %phiIVClone9 = phi i32 
User in header block to replace Phi:   %329 = add i32 -571, %epil.iter253
Applied self loop transform on vector.body181.epil( stratum_gen_work() )

stratum_gen_work(): Transformed Self loop Parallel Loop at depth 1 containing: %vector.body181.epil<header>,%selfLoopOptBlock3,%selfLoopOptExitBlock4<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock3<header><latch><exiting>


stratum_gen_work(): Self loop Parallel Loop at depth 1 containing: %vector.body181<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body181( stratum_gen_work() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop vector.body181 of stratum_gen_work with 571 inner loop iterations --> Parallel Loop at depth 1 containing: %vector.body181<header><latch><exiting>
Found local ind var:   %niter260 = phi i32 [ %unroll_iter259, %vector.ph186.new ], [ %niter260.nsub.3, %selfLoopOptExitBlock16 ], mapping it to   %phiIVClone21 = phi i32 
User in header block to replace Phi:   %325 = add i32 -2284, %niter260
Applied self loop transform on vector.body181( stratum_gen_work() )

stratum_gen_work(): Transformed Self loop Parallel Loop at depth 1 containing: %vector.body181<header>,%selfLoopOptBlock15,%selfLoopOptExitBlock16<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock15<header><latch><exiting>


stratum_gen_work(): Self loop Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body28.i( stratum_gen_work() ). Self Loop cost: 4. Iterations: 1000
Self loop is not canonical. Going for generic transformation with 1000 iterations.
Attempting to transform self loop for.body28.i of stratum_gen_work with 1000 inner loop iterations --> Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>
Found local ind var:   %m22.076.i = phi i32 [ %inc31.i, %selfLoopOptExitBlock28 ], [ %m22.076.i.ph, %for.body28.i.preheader239 ], mapping it to   %phiIVClone29 = phi i32 
User in header block to replace Phi:   %357 = add i32 1000, %m22.076.i
Applied self loop transform on for.body28.i( stratum_gen_work() )

stratum_gen_work(): Transformed Self loop Parallel Loop at depth 1 containing: %for.body28.i<header>,%selfLoopOptBlock27,%selfLoopOptExitBlock28<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock27<header><latch><exiting>


stratum_gen_work(): Self loop Parallel Loop at depth 1 containing: %vector.body207.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body207.epil( stratum_gen_work() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop vector.body207.epil of stratum_gen_work with 571 inner loop iterations --> Parallel Loop at depth 1 containing: %vector.body207.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i32 [ %epil.iter.sub, %selfLoopOptExitBlock37 ], [ %xtraiter, %vector.body207.epil.preheader ], mapping it to   %phiIVClone42 = phi i32 
User in header block to replace Phi:   %349 = add i32 -571, %epil.iter
Applied self loop transform on vector.body207.epil( stratum_gen_work() )

stratum_gen_work(): Transformed Self loop Parallel Loop at depth 1 containing: %vector.body207.epil<header>,%selfLoopOptBlock36,%selfLoopOptExitBlock37<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock36<header><latch><exiting>


stratum_gen_work(): Self loop Parallel Loop at depth 1 containing: %vector.body207<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body207( stratum_gen_work() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop vector.body207 of stratum_gen_work with 571 inner loop iterations --> Parallel Loop at depth 1 containing: %vector.body207<header><latch><exiting>
Found local ind var:   %niter = phi i32 [ %unroll_iter, %vector.ph212.new ], [ %niter.nsub.3, %selfLoopOptExitBlock49 ], mapping it to   %phiIVClone54 = phi i32 
User in header block to replace Phi:   %345 = add i32 -2284, %niter
Applied self loop transform on vector.body207( stratum_gen_work() )

stratum_gen_work(): Transformed Self loop Parallel Loop at depth 1 containing: %vector.body207<header>,%selfLoopOptBlock48,%selfLoopOptExitBlock49<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock48<header><latch><exiting>


stratum_gen_work(): Self loop Loop at depth 1 containing: %for.body189<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body189( stratum_gen_work() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Attempting to transform self loop for.body189 of stratum_gen_work with 500 inner loop iterations --> Loop at depth 1 containing: %for.body189<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ %indvars.iv.next, %selfLoopOptExitBlock61 ], [ %indvars.iv.ph, %for.body189.preheader ], mapping it to   %phiIVClone62 = phi i64 
User in header block to replace Phi:   %285 = add i64 500, %indvars.iv
Applied self loop transform on for.body189( stratum_gen_work() )

stratum_gen_work(): Transformed Self loop Loop at depth 1 containing: %for.body189<header>,%selfLoopOptBlock60,%selfLoopOptExitBlock61<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock60<header><latch><exiting>


stratum_gen_work(): Self loop Loop at depth 1 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( stratum_gen_work() ). Self Loop cost: 55. Iterations: 72
Self loop is not canonical. Going for generic transformation with 72 iterations.
Attempting to transform self loop vector.body of stratum_gen_work with 72 inner loop iterations --> Loop at depth 1 containing: %vector.body<header><latch><exiting>
Found local ind var:   %niter264 = phi i64 [ %unroll_iter263, %vector.ph.new ], [ %niter264.nsub.1, %selfLoopOptExitBlock68 ], mapping it to   %phiIVClone70 = phi i64 
User in header block to replace Phi:   %234 = add i64 -144, %niter264
Applied self loop transform on vector.body( stratum_gen_work() )

stratum_gen_work(): Transformed Self loop Loop at depth 1 containing: %vector.body<header>,%selfLoopOptBlock67,%selfLoopOptExitBlock68<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock67<header><latch><exiting>


stratum_gen_work(): Self loop Loop at depth 1 containing: %land.rhs<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> land.rhs( stratum_gen_work() )

stratum_gen_work(): Transformed Self loop Loop at depth 1 containing: %land.rhs<header><latch><exiting>


stratum_gen_work(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.else84,%if.then81,%for.inc<latch><exiting>


This seseloop will be transformed & instrumented --> for.body( stratum_gen_work() ). SESE Loop cost: 214. Iterations: 18
Found local ind var:   %indvars.iv166 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next167, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone75 = phi i64 
User in header block to replace Phi:   %30 = add i64 18, %indvars.iv166
Applied sese loop transform on for.body( stratum_gen_work() )

stratum_gen_work(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.else84,%if.then81,%for.inc,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%if.then81,%for.inc<latch><exiting>,%if.else84

stratum_thread(): Transformed branch between if.then2 and if.end11 in the forward direction
stratum_thread(): Transformed branch between if.else and if.end11_dummy in the forward direction
stratum_thread(): Transformed branch between restart_threads.exit.loopexit.unr-lcssa and restart_threads.exit in the forward direction
stratum_thread(): Transformed branch between if.end14.i103 and if.end34 in the forward direction
stratum_thread(): Transformed branch between land.lhs.true36 and if.end70 in the forward direction
stratum_thread(): Transformed branch between if.then41 and if.end70_dummy in the forward direction
stratum_thread(): Transformed branch between land.lhs.true50 and if.end61 in the forward direction
stratum_thread(): Transformed branch between if.then52 and if.end61_dummy in the forward direction
stratum_thread(): Transformed branch between if.end61 and if.end70_dummy_dummy in the forward direction
stratum_thread(): Transformed branch between if.else62 and if.end70_dummy_dummy in the forward direction
stratum_thread(): Transformed branch between if.end70.loopexit.unr-lcssa and if.end70_dummy_dummy_dummy in the forward direction
stratum_thread(): Transformed branch between land.lhs.true.i and land.lhs.true.i.i in the forward direction
stratum_thread(): Transformed branch between if.end7.i and land.lhs.true.i.i_dummy in the forward direction
stratum_thread(): Transformed branch between if.then9.i and land.lhs.true.i.i_dummy_dummy in the forward direction
stratum_thread(): Transformed branch between if.else37.i and land.lhs.true.i.i_dummy_dummy in the forward direction
stratum_thread(): Transformed branch between lor.lhs.false39.i and land.lhs.true.i.i_dummy_dummy_dummy2 in the forward direction
stratum_thread(): Transformed branch between land.lhs.true.i.i and stratum_handle_response.exit in the forward direction
stratum_thread(): Transformed branch between land.lhs.true1.i.i and stratum_handle_response.exit_dummy in the forward direction
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 3 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
. Latch: for.body.i.epil, Exiting block: for.body.i.epil
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
. Latch: for.body.i110, Exiting block: for.body.i110
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: for.body.i110.epil, Exiting block: for.body.i110.epil
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
stratum_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy
        Loop at depth 3 containing: %for.body.i<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
. Latch: while.cond.backedge, Exiting block: land.lhs.true
manageDanglingLCCs(inverted V shape): Removing cost 103 of if.end70
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end70 to successor if.end75.thread
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end70 to successor if.end75
manageDanglingLCCs(inverted V shape): Removing cost 204 of if.then80
manageDanglingLCCs(inverted V shape): Adding pred cost 204 of if.then80 to successor if.end.i
manageDanglingLCCs(inverted V shape): Adding pred cost 204 of if.then80 to successor out.i
Pred cost for land.lhs.true.i.i_dummy_dummy is 1
Pred cost for stratum_handle_response.exit is 102
Pred cost for if.end82 is 102
Pred cost for if.then77 is 203
manageDanglingLCCs(V shape): Removing cost 203 of predecessor if.then77 for merge node while.cond.backedge
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.end82 for merge node while.cond.backedge
manageDanglingLCCs(V shape): Settting average cost 152 as initial cost for merge node while.cond.backedge
Pred cost for land.lhs.true.i.i_dummy_dummy is 1
Pred cost for cleanup.thread is 208
Direct branch from if.else needs to be instrumented
Self loop:- #backedges: 0, body cost: 15, preheader cost: 214
Self loop will be transformed, & body cost is 15 for loop Loop at depth 3 containing: %for.body.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 6, preheader cost: 216
Self loop will be transformed, & body cost is 6 for loop Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>

Direct branch from if.end26 needs to be instrumented
Direct branch from if.then33 needs to be instrumented
Direct branch from if.end.i97 needs to be instrumented
Direct branch from if.end5.i needs to be instrumented
Direct branch from if.end9.i needs to be instrumented
Direct branch from work_free.exit needs to be instrumented
Direct branch from if.end.i102 needs to be instrumented
Direct branch from if.end8.i needs to be instrumented
Direct branch from if.end14.i103 needs to be instrumented
Direct branch from land.lhs.true50 needs to be instrumented
Direct branch from if.then48 needs to be instrumented
Self loop:- #backedges: 0, body cost: 15, preheader cost: 11
Self loop will be transformed, & body cost is 15 for loop Loop at depth 2 containing: %for.body.i110<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 6, preheader cost: 13
Self loop will be transformed, & body cost is 6 for loop Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>

Direct branch from if.else62 needs to be instrumented
Direct branch from land.end50.i needs to be instrumented
Direct branch from lor.lhs.false39.i needs to be instrumented
Direct branch from land.lhs.true1.i.i needs to be instrumented

Instrumenting loops (self loop count: 4, sese loop count: 0) for function stratum_thread

Loops scheduled for transform for stratum_thread:- 
Self Loop: Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>

Self Loop: Loop at depth 3 containing: %for.body.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i110<header><latch><exiting>



stratum_thread(): Self loop Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i.epil( stratum_thread() ). Self Loop cost: 6. Iterations: 666
Self loop is not canonical. Going for generic transformation with 666 iterations.
Attempting to transform self loop for.body.i.epil of stratum_thread with 666 inner loop iterations --> Loop at depth 3 containing: %for.body.i.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i64 [ %epil.iter.sub, %selfLoopOptExitBlock ], [ %xtraiter, %for.body.i.epil.preheader ], mapping it to   %phiIVClone3 = phi i64 
User in header block to replace Phi:   %15 = add i64 -666, %epil.iter
Applied self loop transform on for.body.i.epil( stratum_thread() )

stratum_thread(): Transformed Self loop Loop at depth 3 containing: %for.body.i.epil<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 4 containing: %selfLoopOptBlock<header><latch><exiting>


stratum_thread(): Self loop Loop at depth 3 containing: %for.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i( stratum_thread() ). Self Loop cost: 15. Iterations: 266
Self loop is not canonical. Going for generic transformation with 266 iterations.
Attempting to transform self loop for.body.i of stratum_thread with 266 inner loop iterations --> Loop at depth 3 containing: %for.body.i<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %for.body.lr.ph.i.new ], [ %niter.nsub.3, %selfLoopOptExitBlock5 ], mapping it to   %phiIVClone7 = phi i64 
User in header block to replace Phi:   %15 = add i64 -1064, %niter
Applied self loop transform on for.body.i( stratum_thread() )

stratum_thread(): Transformed Self loop Loop at depth 3 containing: %for.body.i<header>,%selfLoopOptBlock4,%selfLoopOptExitBlock5<latch><exiting>
    Loop at depth 4 containing: %selfLoopOptBlock4<header><latch><exiting>


stratum_thread(): Self loop Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i110.epil( stratum_thread() ). Self Loop cost: 6. Iterations: 666
Self loop is not canonical. Going for generic transformation with 666 iterations.
Attempting to transform self loop for.body.i110.epil of stratum_thread with 666 inner loop iterations --> Loop at depth 2 containing: %for.body.i110.epil<header><latch><exiting>
Found local ind var:   %epil.iter119 = phi i64 [ %epil.iter119.sub, %selfLoopOptExitBlock13 ], [ %xtraiter118, %for.body.i110.epil.preheader ], mapping it to   %phiIVClone15 = phi i64 
User in header block to replace Phi:   %66 = add i64 -666, %epil.iter119
Applied self loop transform on for.body.i110.epil( stratum_thread() )

stratum_thread(): Transformed Self loop Loop at depth 2 containing: %for.body.i110.epil<header>,%selfLoopOptBlock12,%selfLoopOptExitBlock13<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock12<header><latch><exiting>


stratum_thread(): Self loop Loop at depth 2 containing: %for.body.i110<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i110( stratum_thread() ). Self Loop cost: 15. Iterations: 266
Self loop is not canonical. Going for generic transformation with 266 iterations.
Attempting to transform self loop for.body.i110 of stratum_thread with 266 inner loop iterations --> Loop at depth 2 containing: %for.body.i110<header><latch><exiting>
Found local ind var:   %niter122 = phi i64 [ %unroll_iter121, %for.body.lr.ph.i105.new ], [ %niter122.nsub.3, %selfLoopOptExitBlock21 ], mapping it to   %phiIVClone23 = phi i64 
User in header block to replace Phi:   %61 = add i64 -1064, %niter122
Applied self loop transform on for.body.i110( stratum_thread() )

stratum_thread(): Transformed Self loop Loop at depth 2 containing: %for.body.i110<header>,%selfLoopOptBlock20,%selfLoopOptExitBlock21<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock20<header><latch><exiting>


stratum_thread(): Max depth loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy,%if.end8.iDirectSucc,%if.end14.i103DirectSucc,%if.elseDirectSucc,%if.end26DirectSucc,%if.then33DirectSucc,%if.end.i97DirectSucc,%if.end5.iDirectSucc,%if.end9.iDirectSucc,%work_free.exitDirectSucc,%if.end.i102DirectSucc,%if.else62DirectSucc,%if.then48DirectSucc,%land.lhs.true50DirectSucc,%lor.lhs.false39.iDirectSucc,%land.end50.iDirectSucc,%land.lhs.true1.i.iDirectSucc,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock4,%selfLoopOptExitBlock5,%selfLoopOptBlock12,%selfLoopOptExitBlock13,%selfLoopOptBlock20,%selfLoopOptExitBlock21
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy,%if.end8.iDirectSucc,%if.end14.i103DirectSucc,%if.end26DirectSucc,%if.then33DirectSucc,%if.end.i97DirectSucc,%if.end5.iDirectSucc,%if.end9.iDirectSucc,%work_free.exitDirectSucc,%if.end.i102DirectSucc,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock4,%selfLoopOptExitBlock5
        Loop at depth 3 containing: %for.body.i<header>,%selfLoopOptBlock4,%selfLoopOptExitBlock5<latch><exiting>
            Loop at depth 4 containing: %selfLoopOptBlock4<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
            Loop at depth 4 containing: %selfLoopOptBlock<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header>,%selfLoopOptBlock20,%selfLoopOptExitBlock21<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock20<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header>,%selfLoopOptBlock12,%selfLoopOptExitBlock13<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock12<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> while.cond

stratum_thread(): Transformed loop Loop at depth 1 containing: %while.cond<header>,%if.then2,%if.then5,%if.else,%if.then8,%if.end11,%while.body14.preheader,%while.body14,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34,%while.end.loopexit,%while.end,%land.lhs.true36,%lor.lhs.false38,%if.then41,%if.then48,%land.lhs.true50,%if.then52,%if.else57,%if.then54,%if.end61,%for.body.lr.ph.i105,%for.body.lr.ph.i105.new,%for.body.i110,%if.end70.loopexit.unr-lcssa.loopexit,%if.end70.loopexit.unr-lcssa,%for.body.i110.epil.preheader,%for.body.i110.epil,%if.end70.loopexit,%if.else62,%if.then66,%if.end70,%if.end75.thread,%if.end75,%if.end78,%if.then80,%if.end.i,%land.lhs.true.i,%if.end7.i,%if.then9.i,%if.end14.i,%if.then17.i,%land.rhs22.i,%if.end32.i,%if.else.i,%if.end32.thread.i,%cond.true.i,%cond.end.i,%if.else37.i,%lor.lhs.false39.i,%land.end50.i,%cond.true55.i,%cond.end59.i,%land.lhs.true.i.i,%land.lhs.true1.i.i,%if.then.i.i,%out.i,%stratum_handle_response.exit,%if.end82,%if.then77,%while.cond.backedge<latch>,%if.end11_dummy,%if.end11_dummy_dummy,%restart_threads.exit_dummy,%if.end34_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end61_dummy,%if.end61_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy1,%if.end70_dummy_dummy_dummy_dummy,%land.lhs.true.i.i_dummy,%land.lhs.true.i.i_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy,%land.lhs.true.i.i_dummy_dummy_dummy2,%land.lhs.true.i.i_dummy_dummy_dummy2_dummy,%stratum_handle_response.exit_dummy,%stratum_handle_response.exit_dummy_dummy,%if.end8.iDirectSucc,%if.end14.i103DirectSucc,%if.elseDirectSucc,%if.end26DirectSucc,%if.then33DirectSucc,%if.end.i97DirectSucc,%if.end5.iDirectSucc,%if.end9.iDirectSucc,%work_free.exitDirectSucc,%if.end.i102DirectSucc,%if.else62DirectSucc,%if.then48DirectSucc,%land.lhs.true50DirectSucc,%lor.lhs.false39.iDirectSucc,%land.end50.iDirectSucc,%land.lhs.true1.i.iDirectSucc,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock4,%selfLoopOptExitBlock5,%selfLoopOptBlock12,%selfLoopOptExitBlock13,%selfLoopOptBlock20,%selfLoopOptExitBlock21
    Loop at depth 2 containing: %while.body14<header>,%for.body.lr.ph.i,%for.body.lr.ph.i.new,%for.body.i,%restart_threads.exit.loopexit.unr-lcssa.loopexit,%restart_threads.exit.loopexit.unr-lcssa,%for.body.i.epil.preheader,%for.body.i.epil,%restart_threads.exit.loopexit,%restart_threads.exit,%lor.lhs.false,%lor.lhs.false19,%if.then21,%land.lhs.true<exiting>,%if.end26,%if.then28,%if.end29,%if.end31,%if.then33,%if.then.i,%if.end.i97,%if.then3.i,%if.end5.i,%if.then7.i,%if.end9.i,%if.then11.i,%work_free.exit,%if.then.i101,%if.end.i102,%if.then4.i,%if.end8.i,%if.then10.i,%if.end14.i103,%if.then16.i,%if.end34<latch><exiting>,%restart_threads.exit_dummy,%if.end34_dummy,%if.end8.iDirectSucc,%if.end14.i103DirectSucc,%if.end26DirectSucc,%if.then33DirectSucc,%if.end.i97DirectSucc,%if.end5.iDirectSucc,%if.end9.iDirectSucc,%work_free.exitDirectSucc,%if.end.i102DirectSucc,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock4,%selfLoopOptExitBlock5
        Loop at depth 3 containing: %for.body.i<header>,%selfLoopOptBlock4,%selfLoopOptExitBlock5<latch><exiting>
            Loop at depth 4 containing: %selfLoopOptBlock4<header><latch><exiting>
        Loop at depth 3 containing: %for.body.i.epil<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
            Loop at depth 4 containing: %selfLoopOptBlock<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110<header>,%selfLoopOptBlock20,%selfLoopOptExitBlock21<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock20<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i110.epil<header>,%selfLoopOptBlock12,%selfLoopOptExitBlock13<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock12<header><latch><exiting>

work_decode(): Transformed branch between if.end14 and cleanup in the forward direction
work_decode(): Transformed branch between if.end22 and cleanup_dummy in the forward direction
work_decode(): Transformed branch between for.body.i.preheader and for.cond23.preheader.i in the forward direction
work_decode(): Transformed branch between for.body28.i.preheader and for.cond.cleanup27.i in the forward direction
work_decode(): Transformed branch between if.end65 and cleanup_dummy_dummy in the forward direction
work_decode(): Transformed branch between if.then75 and cleanup_dummy_dummy_dummy in the forward direction
work_decode(): Transformed branch between if.then89 and cleanup_dummy_dummy_dummy in the forward direction
work_decode(): Transformed branch between land.lhs.true96 and cleanup_dummy_dummy_dummy_dummy1 in the forward direction
work_decode(): Transformed branch between if.then107 and if.end119 in the forward direction
work_decode(): Transformed branch between if.then130 and cleanup_dummy_dummy_dummy in the forward direction
work_decode(): Transformed branch between for.body140.preheader and cleanup_dummy_dummy_dummy_dummy2 in the forward direction
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
work_decode(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
work_decode(): Checking if simple for Loop Parallel Loop at depth 1 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
work_decode(): Checking if simple for Loop Parallel Loop at depth 1 containing: %vector.body.epil<header><latch><exiting>
. Latch: vector.body.epil, Exiting block: vector.body.epil
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
work_decode(): Checking if simple for Loop Parallel Loop at depth 1 containing: %vector.body231<header><latch><exiting>
. Latch: vector.body231, Exiting block: vector.body231
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
work_decode(): Checking if simple for Loop Parallel Loop at depth 1 containing: %vector.body231.epil<header><latch><exiting>
. Latch: vector.body231.epil, Exiting block: vector.body231.epil
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
work_decode(): Checking if simple for Loop Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
work_decode(): Checking if simple for Loop Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>
. Latch: for.body28.i, Exiting block: for.body28.i
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 4
Succs are:- if.then75 (52)
Succs are:- if.then89 (54)
Succs are:- if.then130 (62)
Succs are:- cleanup_dummy_dummy_dummy (72)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 4
Succs are:- if.then89 (54)
Succs are:- if.then130 (62)
Succs are:- if.then75 (52)
Succs are:- cleanup_dummy_dummy_dummy (72)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 4
Succs are:- if.then89 (54)
Succs are:- if.then130 (62)
Succs are:- if.then75 (52)
Succs are:- cleanup_dummy_dummy_dummy (72)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 4
Succs are:- if.then89 (54)
Succs are:- if.then130 (62)
Succs are:- if.then75 (52)
Succs are:- cleanup_dummy_dummy_dummy (72)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 4
Succs are:- if.then89 (54)
Succs are:- if.then130 (62)
Succs are:- if.then75 (52)
Succs are:- cleanup_dummy_dummy_dummy (72)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 3
Succs are:- if.end11 (3)
Succs are:- if.else8 (2)
Succs are:- if.then7 (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 4
Succs are:- if.then130 (62)
Succs are:- if.then75 (52)
Succs are:- if.then89 (54)
Succs are:- cleanup_dummy_dummy_dummy (72)
manageDanglingLCCs(inverted V shape): Removing cost 3 of if.end11
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.end11 to successor if.then13
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.end11 to successor if.end14
manageDanglingLCCs(inverted V shape): Removing cost 107 of if.end14
manageDanglingLCCs(inverted V shape): Adding pred cost 107 of if.end14 to successor if.then21
manageDanglingLCCs(inverted V shape): Adding pred cost 107 of if.end14 to successor if.end22
manageDanglingLCCs(inverted V shape): Removing cost 4 of if.then130
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then130 to successor for.body140.preheader
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then130 to successor if.then135
Pred cost for if.then145 is 2
Pred cost for cleanup_dummy_dummy_dummy_dummy2_dummy is 1
Pred cost for if.then135 is 6
manageDanglingLCCs(V shape): Removing cost 6 of predecessor if.then135 for merge node cleanup_dummy_dummy_dummy_dummy2
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup_dummy_dummy_dummy_dummy2_dummy for merge node cleanup_dummy_dummy_dummy_dummy2
manageDanglingLCCs(V shape): Settting average cost 3 as initial cost for merge node cleanup_dummy_dummy_dummy_dummy2
Pred cost for cleanup_dummy_dummy_dummy is 1
Pred cost for if.then35 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then35 for merge node cleanup_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup_dummy_dummy_dummy for merge node cleanup_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup_dummy_dummy
Pred cost for cleanup_dummy_dummy is 52
Pred cost for if.then21 is 209
manageDanglingLCCs(V shape): Removing cost 209 of predecessor if.then21 for merge node cleanup_dummy
manageDanglingLCCs(V shape): Removing cost 52 of predecessor cleanup_dummy_dummy for merge node cleanup_dummy
manageDanglingLCCs(V shape): Settting average cost 130 as initial cost for merge node cleanup_dummy
Pred cost for cleanup_dummy is 131
Pred cost for if.then13 is 105
manageDanglingLCCs(V shape): Removing cost 105 of predecessor if.then13 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 131 of predecessor cleanup_dummy for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 118 as initial cost for merge node cleanup
Func cost 3 for work_decode has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 45, preheader cost: 3
Self loop will be transformed, & body cost is 45 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Direct branch from if.then64 needs to be instrumented
Self loop:- #backedges: 0, body cost: 4, preheader cost: 1
Self loop will be transformed, & body cost is 4 for loop Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 11
Self loop will be transformed, & body cost is 7 for loop Parallel Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 13
Self loop will be transformed, & body cost is 7 for loop Parallel Loop at depth 1 containing: %vector.body.epil<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 4, preheader cost: 1
Self loop will be transformed, & body cost is 4 for loop Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 11
Self loop will be transformed, & body cost is 7 for loop Parallel Loop at depth 1 containing: %vector.body231<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 13
Self loop will be transformed, & body cost is 7 for loop Parallel Loop at depth 1 containing: %vector.body231.epil<header><latch><exiting>

Direct branch from for.cond.cleanup27.i needs to be instrumented
Direct branch from if.then75 needs to be instrumented
Direct branch from if.then101 needs to be instrumented
Func cost 119 for work_decode has been optimized for exit cost!
Storing cost of work_decode() : 122

Instrumenting loops (self loop count: 7, sese loop count: 0) for function work_decode

Loops scheduled for transform for work_decode:- 
Self Loop: Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %vector.body.epil<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %vector.body231.epil<header><latch><exiting>

Self Loop: Parallel Loop at depth 1 containing: %vector.body231<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



work_decode(): Self loop Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i( work_decode() ). Self Loop cost: 4. Iterations: 1000
Self loop is not canonical. Going for generic transformation with 1000 iterations.
Attempting to transform self loop for.body.i of work_decode with 1000 inner loop iterations --> Parallel Loop at depth 1 containing: %for.body.i<header><latch><exiting>
Found local ind var:   %m.079.i = phi i32 [ %inc.i, %selfLoopOptExitBlock ], [ %m.079.i.ph, %for.body.i.preheader264 ], mapping it to   %phiIVClone = phi i32 
User in header block to replace Phi:   %156 = add i32 1000, %m.079.i
Applied self loop transform on for.body.i( work_decode() )

work_decode(): Transformed Self loop Parallel Loop at depth 1 containing: %for.body.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


work_decode(): Self loop Parallel Loop at depth 1 containing: %vector.body.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body.epil( work_decode() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop vector.body.epil of work_decode with 571 inner loop iterations --> Parallel Loop at depth 1 containing: %vector.body.epil<header><latch><exiting>
Found local ind var:   %epil.iter277 = phi i32 [ %epil.iter277.sub, %selfLoopOptExitBlock5 ], [ %xtraiter276, %vector.body.epil.preheader ], mapping it to   %phiIVClone10 = phi i32 
User in header block to replace Phi:   %135 = add i32 -571, %epil.iter277
Applied self loop transform on vector.body.epil( work_decode() )

work_decode(): Transformed Self loop Parallel Loop at depth 1 containing: %vector.body.epil<header>,%selfLoopOptBlock4,%selfLoopOptExitBlock5<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock4<header><latch><exiting>


work_decode(): Self loop Parallel Loop at depth 1 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( work_decode() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop vector.body of work_decode with 571 inner loop iterations --> Parallel Loop at depth 1 containing: %vector.body<header><latch><exiting>
Found local ind var:   %niter284 = phi i32 [ %unroll_iter283, %vector.ph.new ], [ %niter284.nsub.3, %selfLoopOptExitBlock17 ], mapping it to   %phiIVClone22 = phi i32 
User in header block to replace Phi:   %131 = add i32 -2284, %niter284
Applied self loop transform on vector.body( work_decode() )

work_decode(): Transformed Self loop Parallel Loop at depth 1 containing: %vector.body<header>,%selfLoopOptBlock16,%selfLoopOptExitBlock17<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock16<header><latch><exiting>


work_decode(): Self loop Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body28.i( work_decode() ). Self Loop cost: 4. Iterations: 1000
Self loop is not canonical. Going for generic transformation with 1000 iterations.
Attempting to transform self loop for.body28.i of work_decode with 1000 inner loop iterations --> Parallel Loop at depth 1 containing: %for.body28.i<header><latch><exiting>
Found local ind var:   %m22.076.i = phi i32 [ %inc31.i, %selfLoopOptExitBlock29 ], [ %m22.076.i.ph, %for.body28.i.preheader263 ], mapping it to   %phiIVClone30 = phi i32 
User in header block to replace Phi:   %163 = add i32 1000, %m22.076.i
Applied self loop transform on for.body28.i( work_decode() )

work_decode(): Transformed Self loop Parallel Loop at depth 1 containing: %for.body28.i<header>,%selfLoopOptBlock28,%selfLoopOptExitBlock29<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock28<header><latch><exiting>


work_decode(): Self loop Parallel Loop at depth 1 containing: %vector.body231.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body231.epil( work_decode() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop vector.body231.epil of work_decode with 571 inner loop iterations --> Parallel Loop at depth 1 containing: %vector.body231.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i32 [ %epil.iter.sub, %selfLoopOptExitBlock38 ], [ %xtraiter, %vector.body231.epil.preheader ], mapping it to   %phiIVClone43 = phi i32 
User in header block to replace Phi:   %155 = add i32 -571, %epil.iter
Applied self loop transform on vector.body231.epil( work_decode() )

work_decode(): Transformed Self loop Parallel Loop at depth 1 containing: %vector.body231.epil<header>,%selfLoopOptBlock37,%selfLoopOptExitBlock38<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock37<header><latch><exiting>


work_decode(): Self loop Parallel Loop at depth 1 containing: %vector.body231<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body231( work_decode() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop vector.body231 of work_decode with 571 inner loop iterations --> Parallel Loop at depth 1 containing: %vector.body231<header><latch><exiting>
Found local ind var:   %niter = phi i32 [ %unroll_iter, %vector.ph236.new ], [ %niter.nsub.3, %selfLoopOptExitBlock50 ], mapping it to   %phiIVClone55 = phi i32 
User in header block to replace Phi:   %151 = add i32 -2284, %niter
Applied self loop transform on vector.body231( work_decode() )

work_decode(): Transformed Self loop Parallel Loop at depth 1 containing: %vector.body231<header>,%selfLoopOptBlock49,%selfLoopOptExitBlock50<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock49<header><latch><exiting>


work_decode(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( work_decode() ). Self Loop cost: 45. Iterations: 88
Self loop is not canonical. Going for generic transformation with 88 iterations.
Attempting to transform self loop for.body of work_decode with 88 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %niter288 = phi i64 [ %unroll_iter287, %for.body.preheader ], [ %niter288.nsub.1, %selfLoopOptExitBlock62 ], mapping it to   %phiIVClone64 = phi i64 
User in header block to replace Phi:   %5 = add i64 -176, %niter288
Applied self loop transform on for.body( work_decode() )

work_decode(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock61,%selfLoopOptExitBlock62<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock61<header><latch><exiting>

workio_thread(): Transformed branch between while.body.lr.ph and while.end in the forward direction
workio_thread(): Transformed branch between sw.bb and if.end.i42 in the forward direction
workio_thread(): Transformed branch between entry.split.i and if.end.i42_dummy in the forward direction
workio_thread(): Transformed branch between while.end.i and if.end.i42_dummy_dummy in the forward direction
workio_thread(): Transformed branch between if.then.i.i and submit_upstream_work.exit.thread.i in the forward direction
workio_thread(): Transformed branch between if.then16.i.i and submit_upstream_work.exit.thread.i in the forward direction
workio_thread(): Transformed branch between land.lhs.true.i624.i.i and json_decref.exit629.i.i in the forward direction
workio_thread(): Transformed branch between land.lhs.true1.i626.i.i and json_decref.exit629.i.i_dummy in the forward direction
workio_thread(): Transformed branch between land.lhs.true1.i635.i.i and cleanup189.thread.i.i in the forward direction
workio_thread(): Transformed branch between if.else246.i.i and land.lhs.true.i530.i.i in the forward direction
workio_thread(): Transformed branch between work_copy.exit.i.i and land.lhs.true.i530.i.i_dummy in the forward direction
workio_thread(): Transformed branch between land.lhs.true.i530.i.i.loopexit.unr-lcssa and land.lhs.true.i530.i.i_dummy_dummy in the forward direction
workio_thread(): Transformed branch between land.lhs.true1.i532.i.i and cleanup354.thread650.i.i in the forward direction
workio_thread(): Transformed branch between for.end305.i.i.loopexit.unr-lcssa and for.end305.i.i in the forward direction
workio_thread(): Transformed branch between land.lhs.true.i.i.i and submit_upstream_work.exit.thread.i in the forward direction
workio_thread(): Transformed branch between land.lhs.true1.i.i.i and submit_upstream_work.exit.thread.i_dummy2 in the forward direction
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
workio_thread(): Checking if simple for Loop Loop at depth 3 containing: %for.body.i.i<header><latch><exiting>
. Latch: for.body.i.i, Exiting block: for.body.i.i
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
workio_thread(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i.i.i<header><latch><exiting>
. Latch: for.body.i.i.i, Exiting block: for.body.i.i.i
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
workio_thread(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i.i.i.epil<header><latch><exiting>
. Latch: for.body.i.i.i.epil, Exiting block: for.body.i.i.i.epil
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
workio_thread(): Checking if simple for Loop Loop at depth 3 containing: %for.body296.i.i<header><latch><exiting>
. Latch: for.body296.i.i, Exiting block: for.body296.i.i
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 7, #successors: 5
Succs are:- sw.bb41.i.i (36)
Succs are:- sw.bb46.i.i (37)
Succs are:- sw.bb51.i.i (38)
Succs are:- sw.bb56.i.i (39)
Succs are:- sw.default61.i.i (40)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 4
Succs are:- land.lhs.true279.i.i (121)
Succs are:- if.end286.fold.split.i.i (122)
Succs are:- if.end286.i.i (123)
Succs are:- for.body296.preheader.i.i (124)
manageDanglingLCCs(inverted V shape): Removing cost 521 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 521 of entry to successor if.then
manageDanglingLCCs(inverted V shape): Adding pred cost 521 of entry to successor if.end
manageDanglingLCCs(inverted V shape): Removing cost 527 of if.end
manageDanglingLCCs(inverted V shape): Adding pred cost 527 of if.end to successor if.end9.thread
manageDanglingLCCs(inverted V shape): Adding pred cost 527 of if.end to successor if.end9
manageDanglingLCCs(inverted V shape): Removing cost 3 of if.end14
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.end14 to successor cleanup.thread
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.end14 to successor sw.bb
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.end14 to successor sw.bb17
manageDanglingLCCs(inverted V shape): Removing cost 3 of while.body.i
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of while.body.i to successor if.then6.i
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of while.body.i to successor if.end7.i
manageDanglingLCCs(inverted V shape): Removing cost 2 of if.end22.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of if.end22.i.i to successor if.then24.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of if.end22.i.i to successor if.else108.i.i
manageDanglingLCCs(inverted V shape): Removing cost 106 of if.end93.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 106 of if.end93.i.i to successor if.then100.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 106 of if.end93.i.i to successor cleanup102.i.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of land.lhs.true161.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of land.lhs.true161.i.i to successor if.then164.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of land.lhs.true161.i.i to successor land.rhs.i.i
manageDanglingLCCs(inverted V shape): Removing cost 104 of for.end305.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 104 of for.end305.i.i to successor cleanup354.thread643.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 104 of for.end305.i.i to successor if.end321.i.i
Pred cost for while.end.i.i.loopexit is 1
Pred cost for land.rhs.i.i is 7
Pred cost for if.end286.fold.split.i.i is 1
Pred cost for land.lhs.true279.i.i is 4
Pred cost for cleanup354.i.i is 304
Pred cost for cleanup354.thread646.i.i is 102
Pred cost for cleanup354.thread643.i.i is 206
Pred cost for cleanup189.i.i is 203
Pred cost for if.then100.i.i is 612
manageDanglingLCCs(V shape): Removing cost 612 of predecessor if.then100.i.i for merge node while.body.i39
manageDanglingLCCs(V shape): Removing cost 203 of predecessor cleanup189.i.i for merge node while.body.i39
manageDanglingLCCs(V shape): Removing cost 206 of predecessor cleanup354.thread643.i.i for merge node while.body.i39
manageDanglingLCCs(V shape): Removing cost 102 of predecessor cleanup354.thread646.i.i for merge node while.body.i39
manageDanglingLCCs(V shape): Removing cost 304 of predecessor cleanup354.i.i for merge node while.body.i39
manageDanglingLCCs(V shape): Settting average cost 285 as initial cost for merge node while.body.i39
Pred cost for while.end.i.i.loopexit is 1
Pred cost for land.rhs.i.i is 7
Pred cost for if.end286.fold.split.i.i is 1
Pred cost for land.lhs.true279.i.i is 4
Pred cost for if.end.i42_dummy_dummy is 1
Pred cost for if.end.i42_dummy is 1
Pred cost for if.then.i is 102
Pred cost for submit_upstream_work.exit.thread.i is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor submit_upstream_work.exit.thread.i for merge node if.end.i42
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then.i for merge node if.end.i42
manageDanglingLCCs(V shape): Removing cost 1 of predecessor if.end.i42_dummy for merge node if.end.i42
manageDanglingLCCs(V shape): Settting average cost 68 as initial cost for merge node if.end.i42
Pred cost for while.end.i.i.loopexit is 1
Pred cost for land.rhs.i.i is 7
Pred cost for if.end286.fold.split.i.i is 1
Pred cost for land.lhs.true279.i.i is 4
Pred cost for while.end_dummy is 1
Pred cost for while.end is 204
Pred cost for if.then is 623
manageDanglingLCCs(V shape): Removing cost 623 of predecessor if.then for merge node cleanup21
manageDanglingLCCs(V shape): Removing cost 204 of predecessor while.end for merge node cleanup21
manageDanglingLCCs(V shape): Settting average cost 413 as initial cost for merge node cleanup21
Pred cost for while.end.i.i.loopexit is 1
Pred cost for land.rhs.i.i is 7
Pred cost for if.end286.fold.split.i.i is 1
Pred cost for land.lhs.true279.i.i is 4
Direct branch from while.end.i needs to be instrumented
Direct branch from if.then.i.i needs to be instrumented
Direct branch from if.then26.i.i needs to be instrumented
Has backedges: 23 (numCost: 23)
Self loop:- #backedges: 24, body cost: 38, preheader cost: 102
Self loop:- loop & preheader cost 1014 will be instrumented in post loop exit
Direct branch from land.lhs.true1.i626.i.i needs to be instrumented
Direct branch from land.lhs.true.i624.i.i needs to be instrumented
Direct branch from if.then123.i.i needs to be instrumented
Direct branch from land.lhs.true1.i635.i.i needs to be instrumented
Direct branch from if.then195.i.i needs to be instrumented
Direct branch from if.end232.i.i needs to be instrumented
Direct branch from if.then255.i.i needs to be instrumented
Direct branch from if.end.i590.i.i needs to be instrumented
Direct branch from if.end5.i.i.i needs to be instrumented
Direct branch from if.end9.i.i.i needs to be instrumented
Direct branch from work_free.exit.i.i needs to be instrumented
Direct branch from if.end.i.i.i needs to be instrumented
Direct branch from if.end8.i.i.i needs to be instrumented
Direct branch from if.end14.i.i.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 15, preheader cost: 12
Self loop will be transformed, & body cost is 15 for loop Loop at depth 2 containing: %for.body.i.i.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 6, preheader cost: 14
Self loop will be transformed, & body cost is 6 for loop Loop at depth 2 containing: %for.body.i.i.i.epil<header><latch><exiting>

Direct branch from if.else246.i.i needs to be instrumented
Direct branch from land.lhs.true1.i532.i.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 39, preheader cost: 4
Self loop will be transformed, & body cost is 39 for loop Loop at depth 3 containing: %for.body296.i.i<header><latch><exiting>

Direct branch from land.end345.i.i needs to be instrumented
Direct branch from land.lhs.true1.i.i.i needs to be instrumented
Direct branch from land.lhs.true.i.i.i needs to be instrumented
Direct branch from if.end.i needs to be instrumented
Direct branch from sw.bb.i needs to be instrumented
Direct branch from if.end.i46 needs to be instrumented
Direct branch from if.end5.i needs to be instrumented
Direct branch from if.end9.i needs to be instrumented

Instrumenting loops (self loop count: 3, sese loop count: 0) for function workio_thread

Loops scheduled for transform for workio_thread:- 
Self Loop: Loop at depth 3 containing: %for.body296.i.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i.i.i.epil<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i.i.i<header><latch><exiting>



workio_thread(): Self loop Loop at depth 3 containing: %for.body296.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body296.i.i( workio_thread() ). Self Loop cost: 39. Iterations: 102
Self loop is not canonical. Going for generic transformation with 102 iterations.
Attempting to transform self loop for.body296.i.i of workio_thread with 102 inner loop iterations --> Loop at depth 3 containing: %for.body296.i.i<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %for.body296.preheader.i.i ], [ %niter.nsub.1, %selfLoopOptExitBlock ], mapping it to   %phiIVClone3 = phi i64 
User in header block to replace Phi:   %108 = add i64 -204, %niter
Applied self loop transform on for.body296.i.i( workio_thread() )

workio_thread(): Transformed Self loop Loop at depth 3 containing: %for.body296.i.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 4 containing: %selfLoopOptBlock<header><latch><exiting>


workio_thread(): Self loop Loop at depth 2 containing: %for.body.i.i.i.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i.i.i.epil( workio_thread() ). Self Loop cost: 6. Iterations: 666
Self loop is not canonical. Going for generic transformation with 666 iterations.
Attempting to transform self loop for.body.i.i.i.epil of workio_thread with 666 inner loop iterations --> Loop at depth 2 containing: %for.body.i.i.i.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i64 [ %epil.iter.sub, %selfLoopOptExitBlock5 ], [ %xtraiter112, %for.body.i.i.i.epil.preheader ], mapping it to   %phiIVClone7 = phi i64 
User in header block to replace Phi:   %104 = add i64 -666, %epil.iter
Applied self loop transform on for.body.i.i.i.epil( workio_thread() )

workio_thread(): Transformed Self loop Loop at depth 2 containing: %for.body.i.i.i.epil<header>,%selfLoopOptBlock4,%selfLoopOptExitBlock5<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock4<header><latch><exiting>


workio_thread(): Self loop Loop at depth 2 containing: %for.body.i.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i.i.i( workio_thread() ). Self Loop cost: 15. Iterations: 266
Self loop is not canonical. Going for generic transformation with 266 iterations.
Attempting to transform self loop for.body.i.i.i of workio_thread with 266 inner loop iterations --> Loop at depth 2 containing: %for.body.i.i.i<header><latch><exiting>
Found local ind var:   %niter115 = phi i64 [ %unroll_iter114, %for.body.lr.ph.i.i.i.new ], [ %niter115.nsub.3, %selfLoopOptExitBlock13 ], mapping it to   %phiIVClone15 = phi i64 
User in header block to replace Phi:   %104 = add i64 -1064, %niter115
Applied self loop transform on for.body.i.i.i( workio_thread() )

workio_thread(): Transformed Self loop Loop at depth 2 containing: %for.body.i.i.i<header>,%selfLoopOptBlock12,%selfLoopOptExitBlock13<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock12<header><latch><exiting>


workio_thread(): Self loop Loop at depth 3 containing: %for.body.i.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body.i.i

workio_thread(): Transformed Self loop Loop at depth 3 containing: %for.body.i.i<header><latch><exiting>

Total functions: 25, uninstrumented functions: 3
Optimized 24 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o cpuminer-cpu-miner.o `test -f 'cpuminer-cpu-miner.ll' || echo './'`cpuminer-cpu-miner.ll
mv -f .deps/cpuminer-cpu-miner.Tpo .deps/cpuminer-cpu-miner.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT llvm_cpuminer-util.ll -MD -MP -MF .deps/cpuminer-util.Tpo -c -o llvm_cpuminer-util.ll `test -f 'util.c' || echo './'`util.c
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from util.c:40:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
util.c:108:4: warning: implicit declaration of function 'syslog' is invalid in C99 [-Wimplicit-function-declaration]
                        syslog(prio, "%s", buf);
                        ^
2 warnings generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < llvm_cpuminer-util.ll > opt_cpuminer-util.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < opt_cpuminer-util.ll > cpuminer-util.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: abin2hex
Function: address_to_script
Function: all_data_cb
Function: applog
Function: applog_compare_hash
Function: applog_hash
Function: applog_hash64
Function: applog_hex
Function: bin2hex
Function: diff_to_target
Function: format_hash
Function: format_hashrate
Function: fulltest
Function: get_defconfig_path
Function: hex2bin
Function: jobj_binary
Function: json_load_url
Function: json_rpc2_call
Function: json_rpc2_call_recur
Function: json_rpc_call
Function: opensocket_grab_cb
Function: print_hash_tests
Function: resp_hdr_cb
Function: rpc2_job_decode
Function: rpc2_login_decode
Function: seek_data_cb
Function: sockopt_keepalive_cb
Function: stratum_authorize
Function: stratum_connect
Function: stratum_disconnect
Function: stratum_handle_method
Function: stratum_parse_extranonce
Function: stratum_recv_line
Function: stratum_send_line
Function: stratum_socket_full
Function: stratum_subscribe
Function: target_to_diff
Function: timeval_subtract
Function: tq_free
Function: tq_freeze
Function: tq_new
Function: tq_pop
Function: tq_push
Function: tq_thaw
Function: upload_data_cb
Function: varint_encode
Function: work_set_target
abin2hex(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
Has backedges: (+ -1 (ARG: 1) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 109, preheader cost: 108
Self loop will be transformed, & body cost is 109 for loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Func cost 109 for abin2hex has been optimized for entry cost!
Storing cost of abin2hex() : 109

Instrumenting loops (self loop count: 1, sese loop count: 0) for function abin2hex

Loops scheduled for transform for abin2hex:- 
Self Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>



abin2hex(): Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i( abin2hex() ). Self Loop cost: 109. Iterations: 36
Self loop is canonical. Going for special transformation with 36 iterations.
Attempting to transform self loop for.body.i of abin2hex with 36 inner loop iterations --> Loop at depth 1 containing: %for.body.i<header><latch><exiting>
Found local ind var:   %i.06.i = phi i64 [ %inc.i, %selfLoopOptExitBlock ], [ 0, %for.body.i.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %0 = add i64 36, %i.06.i
Applied self loop transform on for.body.i( abin2hex() )

abin2hex(): Transformed Self loop Loop at depth 1 containing: %for.body.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

address_to_script(): Transformed branch between if.end and cleanup in the forward direction
address_to_script(): Transformed branch between if.end4 and cleanup_dummy in the forward direction
address_to_script(): Transformed branch between sw.bb and cleanup_dummy_dummy in the forward direction
address_to_script(): Transformed branch between sw.default and cleanup_dummy_dummy in the forward direction
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- sw.bb (21)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- sw.bb (21)
Succs are:- sw.default (23)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 3, #successors: 2
Succs are:- sw.bb (21)
Succs are:- sw.default (23)
manageDanglingLCCs(inverted V shape): Removing cost 2 of for.body10.i
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of for.body10.i to successor for.inc.i
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of for.body10.i to successor cleanup.loopexit
manageDanglingLCCs(inverted V shape): Removing cost 2 of land.rhs.i
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of land.rhs.i to successor for.cond.i43
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of land.rhs.i to successor b58check.exit.thread.loopexit
Pred cost for for.cond13.preheader.i.loopexit is 1
Pred cost for sw.bb44.loopexit.i is 8
Pred cost for lor.lhs.false.i46.loopexit is 1
Pred cost for b58check.exit.thread.loopexit is 3
Pred cost for cleanup_dummy_dummy is 1
Pred cost for b58check.exit.thread is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor b58check.exit.thread for merge node cleanup_dummy
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup_dummy_dummy for merge node cleanup_dummy
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup_dummy
Pred cost for for.cond13.preheader.i.loopexit is 1
Pred cost for sw.bb44.loopexit.i is 8
Pred cost for lor.lhs.false.i46.loopexit is 1
Pred cost for cleanup_dummy is 52
Pred cost for cleanup.loopexit1 is 1
Pred cost for cleanup.loopexit is 3
manageDanglingLCCs(V shape): Removing cost 3 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit1 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 52 of predecessor cleanup_dummy for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 18 as initial cost for merge node cleanup
Pred cost for for.cond13.preheader.i.loopexit is 1
Pred cost for sw.bb44.loopexit.i is 8
Pred cost for lor.lhs.false.i46.loopexit is 1
Func cost 207 for address_to_script has been optimized for entry cost!
Direct branch from sw.bb needs to be instrumented
Direct branch from sw.default needs to be instrumented
Func cost 120 for address_to_script has been optimized for exit cost!
Storing cost of address_to_script() : 327

Instrumenting loops (self loop count: 0, sese loop count: 0) for function address_to_script

Loops scheduled for transform for address_to_script:- 

Direct branch from entry needs to be instrumented
Func cost 1 for all_data_cb has been optimized for entry cost!
Storing cost of all_data_cb() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function all_data_cb

Loops scheduled for transform for all_data_cb:- 

Func cost 203 for applog has been optimized for entry cost!
Storing cost of applog() : 203

Instrumenting loops (self loop count: 0, sese loop count: 0) for function applog

Loops scheduled for transform for applog:- 

Func cost 2275 for applog_compare_hash has been optimized for entry cost!
Storing cost of applog_compare_hash() : 2275

Instrumenting loops (self loop count: 0, sese loop count: 0) for function applog_compare_hash

Loops scheduled for transform for applog_compare_hash:- 

Func cost 511 for applog_hash has been optimized for entry cost!
Storing cost of applog_hash() : 511

Instrumenting loops (self loop count: 0, sese loop count: 0) for function applog_hash

Loops scheduled for transform for applog_hash:- 

Func cost 818 for applog_hash64 has been optimized for entry cost!
Storing cost of applog_hash64() : 818

Instrumenting loops (self loop count: 0, sese loop count: 0) for function applog_hash64

Loops scheduled for transform for applog_hash64:- 

applog_hex(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>
. Latch: for.body.i.i, Exiting block: for.body.i.i
Sign Extend: operand %len, type i64, scev (sext i32 %len to i64)
Sign Extend: operand %len, type i64, scev (sext i32 %len to i64)
Has backedges: (+ -1 (sext (ARG: 1) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 109, preheader cost: 109
Self loop will be transformed, & body cost is 109 for loop Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>

Func cost 415 for applog_hex has been optimized for entry cost!
Storing cost of applog_hex() : 415

Instrumenting loops (self loop count: 1, sese loop count: 0) for function applog_hex

Loops scheduled for transform for applog_hex:- 
Self Loop: Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>



applog_hex(): Self loop Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i.i( applog_hex() ). Self Loop cost: 109. Iterations: 36
Self loop is canonical. Going for special transformation with 36 iterations.
Attempting to transform self loop for.body.i.i of applog_hex with 36 inner loop iterations --> Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>
Found local ind var:   %i.06.i.i = phi i64 [ %inc.i.i, %selfLoopOptExitBlock ], [ 0, %for.body.i.i.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %0 = add i64 36, %i.06.i.i
Applied self loop transform on for.body.i.i( applog_hex() )

applog_hex(): Transformed Self loop Loop at depth 1 containing: %for.body.i.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

bin2hex(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (ARG: 2) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 109, preheader cost: 3
Self loop will be transformed, & body cost is 109 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 4 for bin2hex has been optimized for entry cost!
Storing cost of bin2hex() : 4

Instrumenting loops (self loop count: 1, sese loop count: 0) for function bin2hex

Loops scheduled for transform for bin2hex:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



bin2hex(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( bin2hex() ). Self Loop cost: 109. Iterations: 36
Self loop is canonical. Going for special transformation with 36 iterations.
Attempting to transform self loop for.body of bin2hex with 36 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %i.06 = phi i64 [ %inc, %selfLoopOptExitBlock ], [ 0, %for.body.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %0 = add i64 36, %i.06
Applied self loop transform on for.body( bin2hex() )

bin2hex(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

diff_to_target(): Transformed branch between for.body and for.end in the forward direction
diff_to_target(): Transformed branch between for.body.1 and for.end_dummy in the forward direction
diff_to_target(): Transformed branch between for.body.2 and for.end_dummy_dummy in the forward direction
diff_to_target(): Transformed branch between for.body.3 and for.end_dummy_dummy_dummy in the forward direction
diff_to_target(): Transformed branch between for.body.4 and for.end_dummy_dummy_dummy_dummy in the forward direction
Func cost 120 for diff_to_target has been optimized for entry cost!
Storing cost of diff_to_target() : 120

Instrumenting loops (self loop count: 0, sese loop count: 0) for function diff_to_target

Loops scheduled for transform for diff_to_target:- 

Func cost 924 for format_hash has been optimized for entry cost!
Storing cost of format_hash() : 924

Instrumenting loops (self loop count: 0, sese loop count: 0) for function format_hash

Loops scheduled for transform for format_hash:- 

format_hashrate(): Transformed branch between if.else and if.end15 in the forward direction
format_hashrate(): Transformed branch between if.else3 and if.end15_dummy in the forward direction
format_hashrate(): Transformed branch between if.else7 and if.end15_dummy_dummy in the forward direction
Func cost 107 for format_hashrate has been optimized for entry cost!
Storing cost of format_hashrate() : 107

Instrumenting loops (self loop count: 0, sese loop count: 0) for function format_hashrate

Loops scheduled for transform for format_hashrate:- 

fulltest(): Transformed branch between for.cond and for.end in the forward direction
fulltest(): Transformed branch between if.end and for.end in the forward direction
fulltest(): Transformed branch between if.end.1 and for.end_dummy in the forward direction
fulltest(): Transformed branch between for.cond.1 and for.end_dummy_dummy in the forward direction
fulltest(): Transformed branch between if.end.2 and for.end_dummy_dummy_dummy in the forward direction
fulltest(): Transformed branch between for.cond.2 and for.end_dummy_dummy_dummy_dummy in the forward direction
fulltest(): Transformed branch between if.end.3 and for.end_dummy_dummy_dummy_dummy_dummy in the forward direction
fulltest(): Transformed branch between for.cond.3 and for.end_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
fulltest(): Transformed branch between if.end.4 and for.end_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
fulltest(): Transformed branch between for.cond.4 and for.end_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
fulltest(): Transformed branch between if.end.5 and for.end_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
fulltest(): Transformed branch between for.cond.5 and for.end_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
fulltest(): Transformed branch between if.end.6 and for.end_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
Func cost 71 for fulltest has been optimized for entry cost!
Storing cost of fulltest() : 71

Instrumenting loops (self loop count: 0, sese loop count: 0) for function fulltest

Loops scheduled for transform for fulltest:- 

get_defconfig_path(): Transformed branch between land.lhs.true and if.end in the forward direction
Direct branch from land.lhs.true needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 102 for get_defconfig_path has been optimized for entry cost!
Storing cost of get_defconfig_path() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function get_defconfig_path

Loops scheduled for transform for get_defconfig_path:- 

manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body to successor if.then
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body to successor if.end
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end to successor if.then10
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end to successor if.end12
Pred cost for while.end.loopexit is 1
Pred cost for while.end is 2
Pred cost for if.then10 is 318
Pred cost for if.then is 209
manageDanglingLCCs(V shape): Removing cost 318 of predecessor if.then10 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 2 of predecessor while.end for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 209 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 176 as initial cost for merge node cleanup
Func cost 213 for hex2bin has been optimized for entry cost!
Func cost 379 for hex2bin has been optimized for exit cost!
Storing cost of hex2bin() : 592

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hex2bin

Loops scheduled for transform for hex2bin:- 

manageDanglingLCCs(inverted V shape): Removing cost 105 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 105 of entry to successor if.then
manageDanglingLCCs(inverted V shape): Adding pred cost 105 of entry to successor if.end
manageDanglingLCCs(inverted V shape): Removing cost 208 of if.end
manageDanglingLCCs(inverted V shape): Adding pred cost 208 of if.end to successor if.then15
manageDanglingLCCs(inverted V shape): Adding pred cost 208 of if.end to successor if.end16
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i to successor if.then.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i to successor if.end.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i to successor if.then10.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i to successor if.end12.i
Pred cost for if.then10.i is 318
Pred cost for if.then.i is 209
manageDanglingLCCs(V shape): Removing cost 318 of predecessor if.then10.i for merge node hex2bin.exit.thread
manageDanglingLCCs(V shape): Removing cost 209 of predecessor if.then.i for merge node hex2bin.exit.thread
manageDanglingLCCs(V shape): Settting average cost 263 as initial cost for merge node hex2bin.exit.thread
Pred cost for hex2bin.exit.loopexit is 1
Pred cost for hex2bin.exit.thread is 466
Pred cost for if.then15 is 413
Pred cost for if.then is 310
manageDanglingLCCs(V shape): Removing cost 310 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 466 of predecessor hex2bin.exit.thread for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 413 of predecessor if.then15 for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 396 as initial cost for merge node cleanup
Pred cost for hex2bin.exit.loopexit is 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function jobj_binary

Loops scheduled for transform for jobj_binary:- 

json_load_url(): Transformed branch between if.else and if.end35 in the forward direction
json_load_url(): Transformed branch between if.then18 and if.end35_dummy in the forward direction
json_load_url(): Transformed branch between if.else24 and if.end35_dummy_dummy in the forward direction
json_load_url(): Transformed branch between if.end40 and err_out in the forward direction
Pred cost for if.then43 is 205
Pred cost for if.end44 is 102
manageDanglingLCCs(V shape): Removing cost 205 of predecessor if.then43 for merge node err_out_dummy
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.end44 for merge node err_out_dummy
manageDanglingLCCs(V shape): Settting average cost 153 as initial cost for merge node err_out_dummy
Pred cost for err_out_dummy is 154
Pred cost for if.then38 is 205
manageDanglingLCCs(V shape): Removing cost 205 of predecessor if.then38 for merge node err_out
manageDanglingLCCs(V shape): Removing cost 154 of predecessor err_out_dummy for merge node err_out
manageDanglingLCCs(V shape): Settting average cost 179 as initial cost for merge node err_out
Pred cost for err_out is 281
Pred cost for if.then is 205
manageDanglingLCCs(V shape): Removing cost 205 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 281 of predecessor err_out for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 243 as initial cost for merge node cleanup
Func cost 511 for json_load_url has been optimized for entry cost!
Direct branch from if.else needs to be instrumented
Func cost 446 for json_load_url has been optimized for exit cost!
Storing cost of json_load_url() : 957

Instrumenting loops (self loop count: 0, sese loop count: 0) for function json_load_url

Loops scheduled for transform for json_load_url:- 

json_rpc2_call(): Transformed branch between land.lhs.true.i and json_decref.exit in the forward direction
json_rpc2_call(): Transformed branch between land.lhs.true1.i and json_decref.exit_dummy in the forward direction
Direct branch from land.lhs.true1.i needs to be instrumented
Direct branch from land.lhs.true.i needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 1 for json_rpc2_call has been optimized for entry cost!
Storing cost of json_rpc2_call() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function json_rpc2_call

Loops scheduled for transform for json_rpc2_call:- 

json_rpc2_call_recur(): Transformed branch between if.then and return in the forward direction
json_rpc2_call_recur(): Transformed branch between if.then4 and return in the forward direction
json_rpc2_call_recur(): Transformed branch between if.then11 and if.end17 in the forward direction
json_rpc2_call_recur(): Transformed branch between if.else48 and return in the forward direction
json_rpc2_call_recur(): Transformed branch between if.then60 and return_dummy2 in the forward direction
json_rpc2_call_recur(): Transformed branch between land.lhs.true.i.i and json_object_set.exit in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 204 of if.end38
manageDanglingLCCs(inverted V shape): Adding pred cost 204 of if.end38 to successor if.then42
manageDanglingLCCs(inverted V shape): Adding pred cost 204 of if.end38 to successor if.else48
Func cost 2 for json_rpc2_call_recur has been optimized for entry cost!
Direct branch from if.then needs to be instrumented
Direct branch from if.then4 needs to be instrumented
Direct branch from if.then11 needs to be instrumented
Direct branch from if.end8 needs to be instrumented
Direct branch from if.then60 needs to be instrumented
Func cost 1 for json_rpc2_call_recur has been optimized for exit cost!
Storing cost of json_rpc2_call_recur() : 3

Instrumenting loops (self loop count: 0, sese loop count: 0) for function json_rpc2_call_recur

Loops scheduled for transform for json_rpc2_call_recur:- 

json_rpc_call(): Transformed branch between land.lhs.true66 and if.end74 in the forward direction
json_rpc_call(): Transformed branch between if.end74 and err_out in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true76 and err_out_dummy in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true87 and if.end97 in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true89 and if.end97_dummy in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true102 and if.end118 in the forward direction
json_rpc_call(): Transformed branch between if.else20.i and for.inc.i in the forward direction
json_rpc_call(): Transformed branch between if.else31.i and for.inc.i_dummy in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true34.i and for.inc.i_dummy_dummy in the forward direction
json_rpc_call(): Transformed branch between switch.early.test.i and for.inc.i_dummy_dummy_dummy in the forward direction
json_rpc_call(): Transformed branch between if.then62.i and for.inc.i_dummy_dummy_dummy_dummy in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true69.i and if.end80.i in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true155 and if.end161 in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true1.i and cleanup in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true.i349 and if.end184 in the forward direction
json_rpc_call(): Transformed branch between land.lhs.true1.i351 and if.end184_dummy in the forward direction
json_rpc_call(): Transformed branch between if.end192 and cleanup203 in the forward direction
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- if.then62.i (56)
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- if.then62.i (56)
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- if.then62.i (56)
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 6, #successors: 2
Succs are:- for.inc.i_dummy_dummy_dummy_dummy (63)
Succs are:- if.then62.i (56)
Pred cost for for.inc.i_dummy_dummy_dummy_dummy is 1
Pred cost for for.inc.i_dummy_dummy_dummy is 1
Pred cost for for.inc.i_dummy_dummy is 1
Pred cost for for.inc.i_dummy is 1
Pred cost for hack_json_numbers.exit.loopexit is 1
Direct branch from entry needs to be instrumented
Direct branch from if.end needs to be instrumented
Direct branch from if.end6 needs to be instrumented
Direct branch from if.end22 needs to be instrumented
Direct branch from if.end30 needs to be instrumented
Direct branch from if.end35 needs to be instrumented
Direct branch from if.end40 needs to be instrumented
Func cost 819 for json_rpc_call has been optimized for entry cost!
Direct branch from land.lhs.true66 needs to be instrumented
Direct branch from if.then60 needs to be instrumented
Direct branch from if.then93 needs to be instrumented
Direct branch from land.lhs.true89 needs to be instrumented
Direct branch from if.then111 needs to be instrumented
Direct branch from if.then62.i needs to be instrumented
Direct branch from if.end130 needs to be instrumented
Direct branch from land.lhs.true155 needs to be instrumented
Direct branch from if.then150 needs to be instrumented
Direct branch from land.lhs.true1.i needs to be instrumented
Direct branch from land.lhs.true1.i351 needs to be instrumented
Direct branch from if.end184 needs to be instrumented
Direct branch from if.end192 needs to be instrumented
Func cost 1113 for json_rpc_call has been optimized for exit cost!
Storing cost of json_rpc_call() : 1932

Instrumenting loops (self loop count: 0, sese loop count: 0) for function json_rpc_call

Loops scheduled for transform for json_rpc_call:- 

Func cost 110 for opensocket_grab_cb has been optimized for entry cost!
Storing cost of opensocket_grab_cb() : 110

Instrumenting loops (self loop count: 0, sese loop count: 0) for function opensocket_grab_cb

Loops scheduled for transform for opensocket_grab_cb:- 

Func cost 3887 for print_hash_tests has been optimized for entry cost!
Storing cost of print_hash_tests() : 3887

Instrumenting loops (self loop count: 0, sese loop count: 0) for function print_hash_tests

Loops scheduled for transform for print_hash_tests:- 

resp_hdr_cb(): Transformed branch between if.end and out in the forward direction
resp_hdr_cb(): Transformed branch between if.end7 and out_dummy in the forward direction
resp_hdr_cb(): Transformed branch between if.end46 and out_dummy_dummy in the forward direction
Pred cost for while.end.loopexit is 1
Pred cost for out_dummy_dummy is 1
Pred cost for out_dummy is 1
Func cost 207 for resp_hdr_cb has been optimized for entry cost!
Func cost 203 for resp_hdr_cb has been optimized for exit cost!
Storing cost of resp_hdr_cb() : 410

Instrumenting loops (self loop count: 0, sese loop count: 0) for function resp_hdr_cb

Loops scheduled for transform for resp_hdr_cb:- 

rpc2_job_decode(): Transformed branch between if.end and return in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 6 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 6 of entry to successor if.then
manageDanglingLCCs(inverted V shape): Adding pred cost 6 of entry to successor if.end
manageDanglingLCCs(inverted V shape): Removing cost 109 of if.end
manageDanglingLCCs(inverted V shape): Adding pred cost 109 of if.end to successor if.then2
manageDanglingLCCs(inverted V shape): Adding pred cost 109 of if.end to successor if.end3
manageDanglingLCCs(inverted V shape): Removing cost 313 of if.end3
manageDanglingLCCs(inverted V shape): Adding pred cost 313 of if.end3 to successor if.then7
manageDanglingLCCs(inverted V shape): Adding pred cost 313 of if.end3 to successor if.end8
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i to successor if.then.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i to successor if.end.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i to successor if.then10.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i to successor if.end12.i
Pred cost for if.then10.i is 318
Pred cost for if.then.i is 209
manageDanglingLCCs(V shape): Removing cost 209 of predecessor if.then.i for merge node hex2bin.exit.thread
manageDanglingLCCs(V shape): Removing cost 318 of predecessor if.then10.i for merge node hex2bin.exit.thread
manageDanglingLCCs(V shape): Settting average cost 263 as initial cost for merge node hex2bin.exit.thread
Pred cost for hex2bin.exit.loopexit is 1
Pred cost for if.then34 is 205
Pred cost for if.then25 is 306
manageDanglingLCCs(V shape): Removing cost 306 of predecessor if.then25 for merge node cleanup.thread
manageDanglingLCCs(V shape): Removing cost 205 of predecessor if.then34 for merge node cleanup.thread
manageDanglingLCCs(V shape): Settting average cost 255 as initial cost for merge node cleanup.thread
Pred cost for hex2bin.exit.loopexit is 1
Pred cost for if.then58 is 205
Pred cost for cleanup.thread is 357
Pred cost for if.then16 is 205
Pred cost for if.then7 is 518
Pred cost for if.then2 is 314
manageDanglingLCCs(V shape): Removing cost 314 of predecessor if.then2 for merge node err_out
manageDanglingLCCs(V shape): Removing cost 518 of predecessor if.then7 for merge node err_out
manageDanglingLCCs(V shape): Removing cost 205 of predecessor if.then16 for merge node err_out
manageDanglingLCCs(V shape): Removing cost 357 of predecessor cleanup.thread for merge node err_out
manageDanglingLCCs(V shape): Removing cost 205 of predecessor if.then58 for merge node err_out
manageDanglingLCCs(V shape): Settting average cost 319 as initial cost for merge node err_out
Pred cost for hex2bin.exit.loopexit is 1
Pred cost for return_dummy is 1
Pred cost for if.then is 211
manageDanglingLCCs(V shape): Removing cost 211 of predecessor if.then for merge node return
manageDanglingLCCs(V shape): Removing cost 1 of predecessor return_dummy for merge node return
manageDanglingLCCs(V shape): Settting average cost 106 as initial cost for merge node return
Pred cost for hex2bin.exit.loopexit is 1
Direct branch from if.end27 needs to be instrumented
Direct branch from if.then39 needs to be instrumented
Direct branch from if.end35 needs to be instrumented
Direct branch from if.end47 needs to be instrumented
Direct branch from if.end59 needs to be instrumented
Func cost 107 for rpc2_job_decode has been optimized for exit cost!
Storing cost of rpc2_job_decode() : 107

Instrumenting loops (self loop count: 0, sese loop count: 0) for function rpc2_job_decode

Loops scheduled for transform for rpc2_job_decode:- 

rpc2_login_decode(): Transformed branch between if.end19 and cleanup in the forward direction
Func cost 103 for rpc2_login_decode has been optimized for entry cost!
Direct branch from if.end8 needs to be instrumented
Direct branch from if.end19 needs to be instrumented
Func cost 1 for rpc2_login_decode has been optimized for exit cost!
Storing cost of rpc2_login_decode() : 104

Instrumenting loops (self loop count: 0, sese loop count: 0) for function rpc2_login_decode

Loops scheduled for transform for rpc2_login_decode:- 

Func cost 6 for seek_data_cb has been optimized for entry cost!
Storing cost of seek_data_cb() : 6

Instrumenting loops (self loop count: 0, sese loop count: 0) for function seek_data_cb

Loops scheduled for transform for seek_data_cb:- 

sockopt_keepalive_cb(): Transformed branch between if.end and cleanup in the forward direction
sockopt_keepalive_cb(): Transformed branch between if.end13 and cleanup_dummy in the forward direction
Direct branch from if.end13 needs to be instrumented
Direct branch from if.end needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 405 for sockopt_keepalive_cb has been optimized for entry cost!
Storing cost of sockopt_keepalive_cb() : 405

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sockopt_keepalive_cb

Loops scheduled for transform for sockopt_keepalive_cb:- 

stratum_authorize(): Transformed branch between if.end56 and land.lhs.true.i147 in the forward direction
stratum_authorize(): Transformed branch between if.end59 and land.lhs.true.i147_dummy in the forward direction
stratum_authorize(): Transformed branch between if.end63 and land.lhs.true.i147_dummy_dummy in the forward direction
stratum_authorize(): Transformed branch between if.then65 and land.lhs.true.i147_dummy_dummy_dummy in the forward direction
stratum_authorize(): Transformed branch between if.end69 and land.lhs.true.i147_dummy_dummy_dummy in the forward direction
stratum_authorize(): Transformed branch between if.then84 and land.lhs.true.i in the forward direction
stratum_authorize(): Transformed branch between land.lhs.true.i and if.end89 in the forward direction
stratum_authorize(): Transformed branch between land.lhs.true1.i and if.end89_dummy in the forward direction
stratum_authorize(): Transformed branch between land.lhs.true.i147 and if.end93 in the forward direction
stratum_authorize(): Transformed branch between land.lhs.true1.i149 and if.end93_dummy in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 2 of if.end17
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of if.end17 to successor if.end20
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of if.end17 to successor while.end
manageDanglingLCCs(inverted V shape): Removing cost 206 of while.end
manageDanglingLCCs(inverted V shape): Adding pred cost 206 of while.end to successor if.then23
manageDanglingLCCs(inverted V shape): Adding pred cost 206 of while.end to successor if.end24
Func cost 518 for stratum_authorize has been optimized for entry cost!
Direct branch from if.then46 needs to be instrumented
Direct branch from if.then65 needs to be instrumented
Direct branch from if.then84 needs to be instrumented
Direct branch from if.else79 needs to be instrumented
Direct branch from land.lhs.true1.i needs to be instrumented
Direct branch from if.end69 needs to be instrumented
Direct branch from if.end59 needs to be instrumented
Direct branch from land.lhs.true1.i149 needs to be instrumented
Direct branch from land.lhs.true.i147 needs to be instrumented
Func cost 102 for stratum_authorize has been optimized for exit cost!
Storing cost of stratum_authorize() : 620

Instrumenting loops (self loop count: 0, sese loop count: 0) for function stratum_authorize

Loops scheduled for transform for stratum_authorize:- 

stratum_connect(): Transformed branch between if.end47 and cleanup in the forward direction
Direct branch from entry needs to be instrumented
Direct branch from if.end10 needs to be instrumented
Direct branch from if.end16 needs to be instrumented
Direct branch from if.end25 needs to be instrumented
Direct branch from if.end35 needs to be instrumented
Direct branch from if.end47 needs to be instrumented
Func cost 1 for stratum_connect has been optimized for entry cost!
Storing cost of stratum_connect() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function stratum_connect

Loops scheduled for transform for stratum_connect:- 

Direct branch from entry needs to be instrumented
Func cost 102 for stratum_disconnect has been optimized for entry cost!
Storing cost of stratum_disconnect() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function stratum_disconnect

Loops scheduled for transform for stratum_disconnect:- 

stratum_handle_method(): Transformed branch between if.end5 and land.lhs.true.i304 in the forward direction
stratum_handle_method(): Transformed branch between if.then8 and land.lhs.true.i304_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end14 and land.lhs.true.i304_dummy in the forward direction
stratum_handle_method(): Transformed branch between land.end10.i and land.lhs.true.i304_dummy_dummy1 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i.i and getblocheight.exit.i in the forward direction
stratum_handle_method(): Transformed branch between if.then.i539.i and getblocheight.exit.i_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end21 and land.lhs.true.i304_dummy_dummy1 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i133 and stratum_pong.exit in the forward direction
stratum_handle_method(): Transformed branch between if.end30 and land.lhs.true.i304_dummy_dummy1_dummy3 in the forward direction
stratum_handle_method(): Transformed branch between if.then33 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end36 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end42 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5 in the forward direction
stratum_handle_method(): Transformed branch between if.end.i156 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end9.i and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end48 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i167 and stratum_get_algo.exit in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i.i174 and json_decref.exit.i in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true1.i.i and json_decref.exit.i_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end57 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7 in the forward direction
stratum_handle_method(): Transformed branch between if.then60 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i182 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy_dummy in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i.i207 and json_decref.exit.i211 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true1.i.i209 and json_decref.exit.i211_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end63 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.then66 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy_dummy9 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i217 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy_dummy9_dummy in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i.i234 and json_decref.exit.i238 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true1.i.i236 and json_decref.exit.i238_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end69 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy_dummy9 in the forward direction
stratum_handle_method(): Transformed branch between if.end.i245 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy_dummy9_dummy11 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i248 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy_dummy9_dummy11_dummy in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i.i265 and json_decref.exit.i269 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true1.i.i267 and json_decref.exit.i269_dummy in the forward direction
stratum_handle_method(): Transformed branch between if.end80 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy_dummy9_dummy11 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i275 and land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy_dummy7_dummy_dummy9_dummy11_dummy13 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i.i295 and json_decref.exit.i299 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true1.i.i297 and json_decref.exit.i299_dummy in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true.i304 and if.end86 in the forward direction
stratum_handle_method(): Transformed branch between land.lhs.true1.i and if.end86_dummy in the forward direction
stratum_handle_method(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>
. Latch: while.body.i, Exiting block: while.body.i
stratum_handle_method(): Checking if simple for Loop Loop at depth 1 containing: %while.cond.i.i<header><latch><exiting>
. Latch: while.cond.i.i, Exiting block: while.cond.i.i
stratum_handle_method(): Checking if simple for Loop Loop at depth 1 containing: %while.cond5.while.cond5_crit_edge.i.i<header><latch><exiting>
. Latch: while.cond5.while.cond5_crit_edge.i.i, Exiting block: while.cond5.while.cond5_crit_edge.i.i
stratum_handle_method(): Checking if simple for Loop Loop at depth 1 containing: %for.body208.i<header><latch><exiting>
. Latch: for.body208.i, Exiting block: for.body208.i
manageDanglingLCCs(inverted V shape): Removing cost 223 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 223 of entry to successor out.thread311
manageDanglingLCCs(inverted V shape): Adding pred cost 223 of entry to successor if.end
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i.i to successor if.then.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i.i to successor if.end.i.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i.i to successor if.then10.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i.i to successor if.end12.i.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i404.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i404.i to successor if.then.i405.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i404.i to successor if.end.i409.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i409.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i409.i to successor if.then10.i410.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i409.i to successor if.end12.i416.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i434.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i434.i to successor if.then.i435.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i434.i to successor if.end.i439.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i439.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i439.i to successor if.then10.i440.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i439.i to successor if.end12.i446.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i463.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i463.i to successor if.then.i464.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i463.i to successor if.end.i468.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i468.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i468.i to successor if.then10.i469.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i468.i to successor if.end12.i475.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i492.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i492.i to successor if.then.i493.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i492.i to successor if.end.i497.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i497.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i497.i to successor if.then10.i498.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i497.i to successor if.end12.i504.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i521.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i521.i to successor if.then.i522.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i521.i to successor if.end.i526.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i526.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i526.i to successor if.then10.i527.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i526.i to successor if.end12.i533.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i552.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i552.i to successor if.then.i553.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i552.i to successor if.end.i557.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i557.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i557.i to successor if.then10.i558.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i557.i to successor if.end12.i564.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i581.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i581.i to successor if.then.i582.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i581.i to successor if.end.i586.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i586.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i586.i to successor if.then10.i587.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i586.i to successor if.end12.i593.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i610.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i610.i to successor if.then.i611.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i610.i to successor if.end.i615.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i615.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i615.i to successor if.then10.i616.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i615.i to successor if.end12.i622.i
manageDanglingLCCs(inverted V shape): Removing cost 103 of if.end36
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end36 to successor if.then39
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end36 to successor if.end42
Pred cost for for.inc.i.loopexit is 1
Pred cost for if.then10.i.i is 318
Pred cost for if.then.i.i is 209
Pred cost for for.end.i.loopexit is 1
Pred cost for hex2bin.exit421.i.loopexit is 1
Pred cost for if.then10.i410.i is 318
Pred cost for if.then.i405.i is 209
Pred cost for if.then170.i is 104
Pred cost for hex2bin.exit451.i.loopexit is 1
Pred cost for if.then10.i440.i is 318
Pred cost for if.then.i435.i is 209
Pred cost for hex2bin.exit480.i.loopexit is 1
Pred cost for if.then10.i469.i is 318
Pred cost for if.then.i464.i is 209
Pred cost for hex2bin.exit509.i.loopexit is 1
Pred cost for if.then10.i498.i is 318
Pred cost for if.then.i493.i is 209
Pred cost for hex2bin.exit509.i is 203
Pred cost for hex2bin.exit538.i.loopexit is 1
Pred cost for if.then10.i527.i is 318
Pred cost for if.then.i522.i is 209
Pred cost for hex2bin.exit598.i.loopexit is 1
Pred cost for if.then10.i587.i is 318
Pred cost for if.then.i582.i is 209
Pred cost for hex2bin.exit627.i.loopexit is 1
Pred cost for if.then10.i616.i is 318
Pred cost for if.then.i611.i is 209
Pred cost for if.then114.i is 205
Pred cost for out.thread314 is 102
Pred cost for out is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor out.thread314 for merge node land.lhs.true.i304_dummy_dummy1_dummy
manageDanglingLCCs(V shape): Removing cost 102 of predecessor out for merge node land.lhs.true.i304_dummy_dummy1_dummy
manageDanglingLCCs(V shape): Settting average cost 102 as initial cost for merge node land.lhs.true.i304_dummy_dummy1_dummy
Pred cost for for.inc.i.loopexit is 1
Pred cost for if.then10.i.i is 318
Pred cost for if.then.i.i is 209
Pred cost for for.end.i.loopexit is 1
Pred cost for hex2bin.exit421.i.loopexit is 1
Pred cost for if.then10.i410.i is 318
Pred cost for if.then.i405.i is 209
Pred cost for if.then170.i is 104
Pred cost for hex2bin.exit451.i.loopexit is 1
Pred cost for if.then10.i440.i is 318
Pred cost for if.then.i435.i is 209
Pred cost for hex2bin.exit480.i.loopexit is 1
Pred cost for if.then10.i469.i is 318
Pred cost for if.then.i464.i is 209
Pred cost for hex2bin.exit509.i.loopexit is 1
Pred cost for if.then10.i498.i is 318
Pred cost for if.then.i493.i is 209
Pred cost for hex2bin.exit509.i is 203
Pred cost for hex2bin.exit538.i.loopexit is 1
Pred cost for if.then10.i527.i is 318
Pred cost for if.then.i522.i is 209
Pred cost for hex2bin.exit598.i.loopexit is 1
Pred cost for if.then10.i587.i is 318
Pred cost for if.then.i582.i is 209
Pred cost for hex2bin.exit627.i.loopexit is 1
Pred cost for if.then10.i616.i is 318
Pred cost for if.then.i611.i is 209
Pred cost for land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy is 1
Pred cost for if.then39 is 105
manageDanglingLCCs(V shape): Removing cost 105 of predecessor if.then39 for merge node land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5
manageDanglingLCCs(V shape): Removing cost 1 of predecessor land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5_dummy for merge node land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5
manageDanglingLCCs(V shape): Settting average cost 53 as initial cost for merge node land.lhs.true.i304_dummy_dummy1_dummy3_dummy_dummy5
Pred cost for for.inc.i.loopexit is 1
Pred cost for if.then10.i.i is 318
Pred cost for if.then.i.i is 209
Pred cost for for.end.i.loopexit is 1
Pred cost for hex2bin.exit421.i.loopexit is 1
Pred cost for if.then10.i410.i is 318
Pred cost for if.then.i405.i is 209
Pred cost for if.then170.i is 104
Pred cost for hex2bin.exit451.i.loopexit is 1
Pred cost for if.then10.i440.i is 318
Pred cost for if.then.i435.i is 209
Pred cost for hex2bin.exit480.i.loopexit is 1
Pred cost for if.then10.i469.i is 318
Pred cost for if.then.i464.i is 209
Pred cost for hex2bin.exit509.i.loopexit is 1
Pred cost for if.then10.i498.i is 318
Pred cost for if.then.i493.i is 209
Pred cost for hex2bin.exit509.i is 203
Pred cost for hex2bin.exit538.i.loopexit is 1
Pred cost for if.then10.i527.i is 318
Pred cost for if.then.i522.i is 209
Pred cost for hex2bin.exit598.i.loopexit is 1
Pred cost for if.then10.i587.i is 318
Pred cost for if.then.i582.i is 209
Pred cost for hex2bin.exit627.i.loopexit is 1
Pred cost for if.then10.i616.i is 318
Pred cost for if.then.i611.i is 209
Pred cost for land.lhs.true.i304_dummy_dummy1_dummy3 is 1
Pred cost for land.lhs.true.i304_dummy_dummy1_dummy is 103
manageDanglingLCCs(V shape): Removing cost 1 of predecessor land.lhs.true.i304_dummy_dummy1_dummy3 for merge node land.lhs.true.i304_dummy_dummy1
manageDanglingLCCs(V shape): Removing cost 103 of predecessor land.lhs.true.i304_dummy_dummy1_dummy for merge node land.lhs.true.i304_dummy_dummy1
manageDanglingLCCs(V shape): Settting average cost 52 as initial cost for merge node land.lhs.true.i304_dummy_dummy1
Pred cost for for.inc.i.loopexit is 1
Pred cost for if.then10.i.i is 318
Pred cost for if.then.i.i is 209
Pred cost for for.end.i.loopexit is 1
Pred cost for hex2bin.exit421.i.loopexit is 1
Pred cost for if.then10.i410.i is 318
Pred cost for if.then.i405.i is 209
Pred cost for if.then170.i is 104
Pred cost for hex2bin.exit451.i.loopexit is 1
Pred cost for if.then10.i440.i is 318
Pred cost for if.then.i435.i is 209
Pred cost for hex2bin.exit480.i.loopexit is 1
Pred cost for if.then10.i469.i is 318
Pred cost for if.then.i464.i is 209
Pred cost for hex2bin.exit509.i.loopexit is 1
Pred cost for if.then10.i498.i is 318
Pred cost for if.then.i493.i is 209
Pred cost for hex2bin.exit509.i is 203
Pred cost for hex2bin.exit538.i.loopexit is 1
Pred cost for if.then10.i527.i is 318
Pred cost for if.then.i522.i is 209
Pred cost for hex2bin.exit598.i.loopexit is 1
Pred cost for if.then10.i587.i is 318
Pred cost for if.then.i582.i is 209
Pred cost for hex2bin.exit627.i.loopexit is 1
Pred cost for if.then10.i616.i is 318
Pred cost for if.then.i611.i is 209
Direct branch from if.then8 needs to be instrumented
Direct branch from if.then18 needs to be instrumented
Direct branch from land.end.i needs to be instrumented
Direct branch from if.end59.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 106, preheader cost: 5
Self loop will be transformed, & body cost is 106 for loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 2
Self loop will be transformed, & body cost is 7 for loop Loop at depth 1 containing: %while.cond.i.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 6
Self loop will be transformed, & body cost is 7 for loop Loop at depth 1 containing: %while.cond5.while.cond5_crit_edge.i.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 109, preheader cost: 24
Self loop will be transformed, & body cost is 109 for loop Loop at depth 1 containing: %for.body208.i<header><latch><exiting>

Direct branch from if.then24 needs to be instrumented
Direct branch from land.lhs.true.i133 needs to be instrumented
Direct branch from if.end27 needs to be instrumented
Direct branch from if.then33 needs to be instrumented
Direct branch from if.end15.i needs to be instrumented
Direct branch from if.then51 needs to be instrumented
Direct branch from land.lhs.true1.i.i needs to be instrumented
Direct branch from land.lhs.true.i.i174 needs to be instrumented
Direct branch from json_object_set.exit.i needs to be instrumented
Direct branch from land.lhs.true.i167 needs to be instrumented
Direct branch from if.end54 needs to be instrumented
Direct branch from if.end.i.i192 needs to be instrumented
Direct branch from if.end12.i.i193 needs to be instrumented
Direct branch from land.lhs.true1.i.i209 needs to be instrumented
Direct branch from land.lhs.true.i.i207 needs to be instrumented
Direct branch from if.end9.i204 needs to be instrumented
Direct branch from land.lhs.true.i182 needs to be instrumented
Direct branch from if.then60 needs to be instrumented
Direct branch from land.lhs.true1.i.i236 needs to be instrumented
Direct branch from land.lhs.true.i.i234 needs to be instrumented
Direct branch from json_object_set.exit.i231 needs to be instrumented
Direct branch from land.lhs.true.i217 needs to be instrumented
Direct branch from if.then66 needs to be instrumented
Direct branch from if.then72 needs to be instrumented
Direct branch from land.lhs.true1.i.i267 needs to be instrumented
Direct branch from land.lhs.true.i.i265 needs to be instrumented
Direct branch from json_object_set.exit.i262 needs to be instrumented
Direct branch from if.then77 needs to be instrumented
Direct branch from land.lhs.true1.i.i297 needs to be instrumented
Direct branch from land.lhs.true.i.i295 needs to be instrumented
Direct branch from json_object_set.exit.i292 needs to be instrumented
Direct branch from land.lhs.true1.i needs to be instrumented
Func cost 102 for stratum_handle_method has been optimized for exit cost!
Storing cost of stratum_handle_method() : 102

Instrumenting loops (self loop count: 4, sese loop count: 0) for function stratum_handle_method

Loops scheduled for transform for stratum_handle_method:- 
Self Loop: Loop at depth 1 containing: %while.body.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.cond5.while.cond5_crit_edge.i.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body208.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.cond.i.i<header><latch><exiting>



stratum_handle_method(): Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i( stratum_handle_method() ). Self Loop cost: 106. Iterations: 37
Self loop is not canonical. Going for generic transformation with 37 iterations.
Attempting to transform self loop while.body.i of stratum_handle_method with 37 inner loop iterations --> Loop at depth 1 containing: %while.body.i<header><latch><exiting>
Found local ind var:   %indvars.iv.i = phi i64 [ %13, %while.body.preheader.i ], [ %indvars.iv.next.i, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %14 = add i64 -37, %indvars.iv.i
Applied self loop transform on while.body.i( stratum_handle_method() )

stratum_handle_method(): Transformed Self loop Loop at depth 1 containing: %while.body.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


stratum_handle_method(): Self loop Loop at depth 1 containing: %while.cond5.while.cond5_crit_edge.i.i<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.cond5.while.cond5_crit_edge.i.i( stratum_handle_method() )

stratum_handle_method(): Transformed Self loop Loop at depth 1 containing: %while.cond5.while.cond5_crit_edge.i.i<header><latch><exiting>


stratum_handle_method(): Self loop Loop at depth 1 containing: %for.body208.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body208.i( stratum_handle_method() ). Self Loop cost: 109. Iterations: 36
Self loop is canonical. Going for special transformation with 36 iterations.
Attempting to transform self loop for.body208.i of stratum_handle_method with 36 inner loop iterations --> Loop at depth 1 containing: %for.body208.i<header><latch><exiting>
Found local ind var:   %indvars.iv653.i = phi i64 [ %indvars.iv.next654.i, %selfLoopOptExitBlock16 ], [ 0, %for.body208.i.preheader ], mapping it to   %phiIVClone17 = phi i64 
User in header block to replace Phi:   %89 = add i64 36, %indvars.iv653.i
Applied self loop transform on for.body208.i( stratum_handle_method() )

stratum_handle_method(): Transformed Self loop Loop at depth 1 containing: %for.body208.i<header>,%selfLoopOptBlock15,%selfLoopOptExitBlock16<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock15<header><latch><exiting>


stratum_handle_method(): Self loop Loop at depth 1 containing: %while.cond.i.i<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.cond.i.i( stratum_handle_method() )

stratum_handle_method(): Transformed Self loop Loop at depth 1 containing: %while.cond.i.i<header><latch><exiting>

stratum_parse_extranonce(): Transformed branch between if.end and cleanup in the forward direction
stratum_parse_extranonce(): Transformed branch between if.end8 and cleanup_dummy in the forward direction
stratum_parse_extranonce(): Transformed branch between if.end19 and cleanup_dummy_dummy in the forward direction
stratum_parse_extranonce(): Transformed branch between hex2bin.exit and cleanup_dummy_dummy_dummy in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 207 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 207 of entry to successor if.then
manageDanglingLCCs(inverted V shape): Adding pred cost 207 of entry to successor if.end
manageDanglingLCCs(inverted V shape): Removing cost 414 of if.end
manageDanglingLCCs(inverted V shape): Adding pred cost 414 of if.end to successor if.end8
manageDanglingLCCs(inverted V shape): Adding pred cost 414 of if.end to successor if.then7
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i to successor if.then.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i to successor if.end.i
manageDanglingLCCs(inverted V shape): Removing cost 113 of if.end.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i to successor if.then10.i
manageDanglingLCCs(inverted V shape): Adding pred cost 113 of if.end.i to successor if.end12.i
Pred cost for cleanup_dummy_dummy_dummy is 1
Pred cost for if.then12 is 205
manageDanglingLCCs(V shape): Removing cost 205 of predecessor if.then12 for merge node cleanup_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup_dummy_dummy_dummy for merge node cleanup_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 103 as initial cost for merge node cleanup_dummy_dummy
Pred cost for cleanup_dummy_dummy is 104
Pred cost for if.then7 is 619
manageDanglingLCCs(V shape): Removing cost 619 of predecessor if.then7 for merge node cleanup_dummy
manageDanglingLCCs(V shape): Removing cost 104 of predecessor cleanup_dummy_dummy for merge node cleanup_dummy
manageDanglingLCCs(V shape): Settting average cost 361 as initial cost for merge node cleanup_dummy
Pred cost for cleanup_dummy is 362
Pred cost for if.then is 412
manageDanglingLCCs(V shape): Removing cost 362 of predecessor cleanup_dummy for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 412 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 387 as initial cost for merge node cleanup
Direct branch from if.end13 needs to be instrumented
Direct branch from hex2bin.exit needs to be instrumented
Func cost 388 for stratum_parse_extranonce has been optimized for exit cost!
Storing cost of stratum_parse_extranonce() : 388

Instrumenting loops (self loop count: 0, sese loop count: 0) for function stratum_parse_extranonce

Loops scheduled for transform for stratum_parse_extranonce:- 

stratum_recv_line(): Transformed branch between if.end35 and cleanup59 in the forward direction
stratum_recv_line(): Transformed branch between out and cleanup59_dummy in the forward direction
Pred cost for do.end.thread is 102
Func cost 112 for stratum_recv_line has been optimized for entry cost!
Direct branch from if.else needs to be instrumented
Direct branch from out needs to be instrumented
Func cost 1 for stratum_recv_line has been optimized for exit cost!
Storing cost of stratum_recv_line() : 113

Instrumenting loops (self loop count: 0, sese loop count: 0) for function stratum_recv_line

Loops scheduled for transform for stratum_recv_line:- 

Direct branch from entry needs to be instrumented
Func cost 212 for stratum_send_line has been optimized for entry cost!
Func cost 102 for stratum_send_line has been optimized for exit cost!
Storing cost of stratum_send_line() : 314

Instrumenting loops (self loop count: 0, sese loop count: 0) for function stratum_send_line

Loops scheduled for transform for stratum_send_line:- 

Direct branch from entry needs to be instrumented
Func cost 1 for stratum_socket_full has been optimized for entry cost!
Storing cost of stratum_socket_full() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function stratum_socket_full

Loops scheduled for transform for stratum_socket_full:- 

stratum_subscribe(): Transformed branch between if.else and if.end15 in the forward direction
stratum_subscribe(): Transformed branch between land.lhs.true.i and if.end59 in the forward direction
stratum_subscribe(): Transformed branch between if.end.i and if.end59_dummy in the forward direction
stratum_subscribe(): Transformed branch between get_stratum_session_id.exit and if.end59_dummy_dummy in the forward direction
stratum_subscribe(): Transformed branch between land.lhs.true.i151 and if.end80 in the forward direction
stratum_subscribe(): Transformed branch between land.lhs.true1.i and if.end80_dummy in the forward direction
stratum_subscribe(): Checking if simple for Loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>
. Latch: if.end80, Exiting block: if.end80
stratum_subscribe(): Checking if simple for Loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>
. Latch: if.end80, Exiting block: if.end80
stratum_subscribe(): Checking if simple for Loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>
. Latch: if.end80, Exiting block: if.end80
stratum_subscribe(): Checking if simple for Loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>
. Latch: if.end80, Exiting block: if.end80
stratum_subscribe(): Checking if simple for Loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>
. Latch: if.end80, Exiting block: if.end80
stratum_subscribe(): Checking if simple for Loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>
. Latch: if.end80, Exiting block: if.end80
stratum_subscribe(): Checking if simple for Loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>
. Latch: if.end80, Exiting block: if.end80
stratum_subscribe(): Checking if simple for Loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>
. Latch: if.end80, Exiting block: if.end80
stratum_subscribe(): Checking if simple for Loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>
. Latch: if.end80, Exiting block: if.end80
manageDanglingLCCs(inverted V shape): Removing cost 519 of if.end18
manageDanglingLCCs(inverted V shape): Adding pred cost 519 of if.end18 to successor if.then20
manageDanglingLCCs(inverted V shape): Adding pred cost 519 of if.end18 to successor if.end21
manageDanglingLCCs(inverted V shape): Removing cost 204 of if.end25
manageDanglingLCCs(inverted V shape): Adding pred cost 204 of if.end25 to successor out.thread170
manageDanglingLCCs(inverted V shape): Adding pred cost 204 of if.end25 to successor if.end29
Pred cost for if.end59_dummy_dummy is 1
Pred cost for cleanup.loopexit is 1
Func cost 109 for stratum_subscribe has been optimized for entry cost!
Direct branch from start needs to be instrumented
Direct branch from if.then41 needs to be instrumented
Direct branch from get_stratum_session_id.exit needs to be instrumented
Direct branch from if.end59 needs to be instrumented
Direct branch from if.end65 needs to be instrumented
Direct branch from land.lhs.true1.i needs to be instrumented
Func cost 102 for stratum_subscribe has been optimized for exit cost!
Storing cost of stratum_subscribe() : 211

Instrumenting loops (self loop count: 0, sese loop count: 0) for function stratum_subscribe

Loops scheduled for transform for stratum_subscribe:- 


stratum_subscribe(): Max depth loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy,%startDirectSucc,%if.then41DirectSucc,%if.end59DirectSucc,%get_stratum_session_id.exitDirectSucc,%if.end65DirectSucc,%land.lhs.true1.iDirectSucc
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> start

stratum_subscribe(): Transformed loop Loop at depth 1 containing: %start<header>,%cond.true,%cond.end,%if.else,%if.then9,%if.else12,%if.then5,%if.end15,%if.then17,%if.end18,%if.then20,%if.end21,%if.end25,%if.end29,%land.lhs.true,%lor.lhs.false34,%land.lhs.true38,%if.end53,%land.lhs.true.i,%if.end.i,%for.body.preheader.i,%for.body.i,%land.lhs.true10.i,%if.end15.i,%if.end20.i,%get_stratum_session_id.exit,%if.then58,%for.inc.i,%if.end59.loopexit,%if.end59,%if.then63,%if.end65,%cond.true67,%cond.end70,%if.then41,%if.then45,%if.then47,%if.else49,%if.end51,%out.thread,%out.thread170,%out,%land.lhs.true.i151,%land.lhs.true1.i,%if.then.i,%if.end80<latch><exiting>,%if.end15_dummy,%if.end59_dummy,%if.end59_dummy_dummy,%if.end59_dummy_dummy_dummy,%if.end80_dummy,%if.end80_dummy_dummy,%startDirectSucc,%if.then41DirectSucc,%if.end59DirectSucc,%get_stratum_session_id.exitDirectSucc,%if.end65DirectSucc,%land.lhs.true1.iDirectSucc
    Loop at depth 2 containing: %for.body.i<header><exiting>,%land.lhs.true10.i<exiting>,%if.end15.i,%if.end20.i<exiting>,%for.inc.i<latch><exiting>

Func cost 45 for target_to_diff has been optimized for entry cost!
Storing cost of target_to_diff() : 45

Instrumenting loops (self loop count: 0, sese loop count: 0) for function target_to_diff

Loops scheduled for transform for target_to_diff:- 

Func cost 37 for timeval_subtract has been optimized for entry cost!
Storing cost of timeval_subtract() : 37

Instrumenting loops (self loop count: 0, sese loop count: 0) for function timeval_subtract

Loops scheduled for transform for timeval_subtract:- 

tq_free(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Self loop:- #backedges: 0, body cost: 216, preheader cost: 9
Self loop will be transformed, & body cost is 216 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Direct branch from entry needs to be instrumented
Func cost 1 for tq_free has been optimized for entry cost!
Storing cost of tq_free() : 1

Instrumenting loops (self loop count: 1, sese loop count: 0) for function tq_free

Loops scheduled for transform for tq_free:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



tq_free(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> for.body( tq_free() )

tq_free(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 308 for tq_freeze has been optimized for entry cost!
Storing cost of tq_freeze() : 308

Instrumenting loops (self loop count: 0, sese loop count: 0) for function tq_freeze

Loops scheduled for transform for tq_freeze:- 

Direct branch from entry needs to be instrumented
Func cost 1 for tq_new has been optimized for entry cost!
Storing cost of tq_new() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function tq_new

Loops scheduled for transform for tq_new:- 

Func cost 107 for tq_pop has been optimized for entry cost!
Func cost 102 for tq_pop has been optimized for exit cost!
Storing cost of tq_pop() : 209

Instrumenting loops (self loop count: 0, sese loop count: 0) for function tq_pop

Loops scheduled for transform for tq_pop:- 

Direct branch from entry needs to be instrumented
Func cost 1 for tq_push has been optimized for entry cost!
Storing cost of tq_push() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function tq_push

Loops scheduled for transform for tq_push:- 

Func cost 308 for tq_thaw has been optimized for entry cost!
Storing cost of tq_thaw() : 308

Instrumenting loops (self loop count: 0, sese loop count: 0) for function tq_thaw

Loops scheduled for transform for tq_thaw:- 

Direct branch from entry needs to be instrumented
Func cost 1 for upload_data_cb has been optimized for entry cost!
Storing cost of upload_data_cb() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function upload_data_cb

Loops scheduled for transform for upload_data_cb:- 

varint_encode(): Transformed branch between if.end and cleanup in the forward direction
varint_encode(): Transformed branch between if.end9 and cleanup_dummy in the forward direction
Func cost 15 for varint_encode has been optimized for entry cost!
Storing cost of varint_encode() : 15

Instrumenting loops (self loop count: 0, sese loop count: 0) for function varint_encode

Loops scheduled for transform for varint_encode:- 

work_set_target(): Transformed branch between for.body.i and for.end.i in the forward direction
work_set_target(): Transformed branch between for.body.i.1 and for.end.i_dummy in the forward direction
work_set_target(): Transformed branch between for.body.i.2 and for.end.i_dummy_dummy in the forward direction
work_set_target(): Transformed branch between for.body.i.3 and for.end.i_dummy_dummy_dummy in the forward direction
work_set_target(): Transformed branch between for.body.i.4 and for.end.i_dummy_dummy_dummy_dummy in the forward direction
Func cost 123 for work_set_target has been optimized for entry cost!
Storing cost of work_set_target() : 123

Instrumenting loops (self loop count: 0, sese loop count: 0) for function work_set_target

Loops scheduled for transform for work_set_target:- 

Total functions: 47, uninstrumented functions: 14
Optimized 58 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o cpuminer-util.o `test -f 'cpuminer-util.ll' || echo './'`cpuminer-util.ll
mv -f .deps/cpuminer-util.Tpo .deps/cpuminer-util.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT llvm_cpuminer-api.ll -MD -MP -MF .deps/cpuminer-api.Tpo -c -o llvm_cpuminer-api.ll `test -f 'api.c' || echo './'`api.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from api.c:34:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < llvm_cpuminer-api.ll > opt_cpuminer-api.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < opt_cpuminer-api.ll > cpuminer-api.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: api_thread
Function: gethelp
Function: getsummary
Function: getthreads
Function: remote_quit
Function: remote_seturl
api_thread(): Transformed branch between land.lhs.true.i.i and if.end126.i.i in the forward direction
api_thread(): Transformed branch between if.end126.i.i and while.cond25.backedge.i.i in the forward direction
api_thread(): Transformed branch between setup_ipaccess.exit.i and if.end8.i in the forward direction
api_thread(): Transformed branch between if.end8.i and api.exit in the forward direction
api_thread(): Transformed branch between if.end17.i and api.exit_dummy in the forward direction
api_thread(): Transformed branch between if.end70.i and cleanup.i in the forward direction
api_thread(): Transformed branch between if.end80.i and cleanup.i_dummy in the forward direction
api_thread(): Transformed branch between if.end.i361.i and check_connect.exit.i in the forward direction
api_thread(): Transformed branch between if.then107.i and if.end254.i in the forward direction
api_thread(): Transformed branch between land.lhs.true119.i and if.then152.i in the forward direction
api_thread(): Transformed branch between if.then125.i and if.then152.i_dummy in the forward direction
api_thread(): Transformed branch between land.lhs.true131.i and if.then152.i_dummy_dummy in the forward direction
api_thread(): Transformed branch between land.lhs.true155.i and if.end194.i in the forward direction
api_thread(): Transformed branch between land.lhs.true204.i and if.end212.i in the forward direction
api_thread(): Transformed branch between land.lhs.true224.i and if.end239.i in the forward direction
api_thread(): Transformed branch between if.then227.i and if.end239.i_dummy in the forward direction
api_thread(): Transformed branch between if.end239.i and for.end.i in the forward direction
api_thread(): Transformed branch between for.inc.1.i.i.i and sw.epilog.i.i.i in the forward direction
api_thread(): Transformed branch between if.end247.i and for.end.i_dummy in the forward direction
api_thread(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>
. Latch: while.body.i.i, Exiting block: while.body.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Parallel Loop at depth 2 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Parallel Loop at depth 2 containing: %while.body161.i.i<header><latch><exiting>
. Latch: while.body161.i.i, Exiting block: while.body161.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond183.i<header><latch><exiting>
. Latch: while.cond183.i, Exiting block: while.cond183.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
api_thread(): Checking if simple for Loop Loop at depth 2 containing: %while.cond30.i.i<header><exiting>,%while.body37.i.i<latch>
. Latch: while.body37.i.i, Exiting block: while.cond30.i.i
manageDanglingLCCs(inverted V shape): Removing cost 631 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 631 of entry to successor if.then.i
manageDanglingLCCs(inverted V shape): Adding pred cost 631 of entry to successor if.end.i
manageDanglingLCCs(inverted V shape): Removing cost 108 of if.end126.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 108 of if.end126.i.i to successor if.then133.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 108 of if.end126.i.i to successor if.else.i.i
manageDanglingLCCs(inverted V shape): Removing cost 211 of if.else.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 211 of if.else.i.i to successor if.end168.thread.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 211 of if.else.i.i to successor if.else145.i.i
manageDanglingLCCs(inverted V shape): Removing cost 308 of if.end8.i
manageDanglingLCCs(inverted V shape): Adding pred cost 308 of if.end8.i to successor if.then14.i
manageDanglingLCCs(inverted V shape): Adding pred cost 308 of if.end8.i to successor if.end17.i
manageDanglingLCCs(inverted V shape): Removing cost 103 of if.end70.i
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end70.i to successor if.then75.i
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end70.i to successor if.end80.i
manageDanglingLCCs(inverted V shape): Removing cost 105 of while.body85.i
manageDanglingLCCs(inverted V shape): Adding pred cost 105 of while.body85.i to successor if.then90.i
manageDanglingLCCs(inverted V shape): Adding pred cost 105 of while.body85.i to successor if.end95.i
Pred cost for while.cond25.backedge.i.i.loopexit is 1
Pred cost for while.cond25.backedge.i.i_dummy is 1
Pred cost for if.then43.i.i is 2
manageDanglingLCCs(V shape): Removing cost 2 of predecessor if.then43.i.i for merge node while.cond25.backedge.i.i
manageDanglingLCCs(V shape): Removing cost 1 of predecessor while.cond25.backedge.i.i_dummy for merge node while.cond25.backedge.i.i
manageDanglingLCCs(V shape): Settting average cost 1 as initial cost for merge node while.cond25.backedge.i.i
Pred cost for if.then116.i.i is 2
Pred cost for for.end.i.loopexit.i is 4
Pred cost for for.end.i.i is 4
Pred cost for if.then133.i.i is 113
manageDanglingLCCs(V shape): Removing cost 113 of predecessor if.then133.i.i for merge node if.end205.i.i
manageDanglingLCCs(V shape): Removing cost 4 of predecessor for.end.i.i for merge node if.end205.i.i
manageDanglingLCCs(V shape): Settting average cost 58 as initial cost for merge node if.end205.i.i
Pred cost for if.then116.i.i is 2
Pred cost for for.end.i_dummy is 1
Pred cost for if.end150.thread.i is 2
Pred cost for for.end.i is 103
manageDanglingLCCs(V shape): Removing cost 2 of predecessor if.end150.thread.i for merge node if.end254.i_dummy
manageDanglingLCCs(V shape): Removing cost 103 of predecessor for.end.i for merge node if.end254.i_dummy
manageDanglingLCCs(V shape): Settting average cost 52 as initial cost for merge node if.end254.i_dummy
Pred cost for if.then116.i.i is 2
Pred cost for while.end255.i.loopexit is 1
Pred cost for while.end255.i is 205
Pred cost for if.then90.i is 614
manageDanglingLCCs(V shape): Removing cost 614 of predecessor if.then90.i for merge node cleanup.i_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 205 of predecessor while.end255.i for merge node cleanup.i_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 409 as initial cost for merge node cleanup.i_dummy_dummy
Pred cost for if.then116.i.i is 2
Pred cost for cleanup.i_dummy_dummy is 410
Pred cost for if.then75.i is 509
manageDanglingLCCs(V shape): Removing cost 509 of predecessor if.then75.i for merge node cleanup.i_dummy
manageDanglingLCCs(V shape): Removing cost 410 of predecessor cleanup.i_dummy_dummy for merge node cleanup.i_dummy
manageDanglingLCCs(V shape): Settting average cost 459 as initial cost for merge node cleanup.i_dummy
Pred cost for if.then116.i.i is 2
Pred cost for cleanup.i_dummy is 460
Pred cost for if.then68.i is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then68.i for merge node cleanup.i
manageDanglingLCCs(V shape): Removing cost 460 of predecessor cleanup.i_dummy for merge node cleanup.i
manageDanglingLCCs(V shape): Settting average cost 281 as initial cost for merge node cleanup.i
Pred cost for if.then116.i.i is 2
Pred cost for cleanup.i is 484
Pred cost for if.then23.i is 305
manageDanglingLCCs(V shape): Removing cost 305 of predecessor if.then23.i for merge node api.exit_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 484 of predecessor cleanup.i for merge node api.exit_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 394 as initial cost for merge node api.exit_dummy_dummy
Pred cost for if.then116.i.i is 2
Pred cost for api.exit_dummy_dummy is 395
Pred cost for if.then14.i is 613
manageDanglingLCCs(V shape): Removing cost 613 of predecessor if.then14.i for merge node api.exit_dummy
manageDanglingLCCs(V shape): Removing cost 395 of predecessor api.exit_dummy_dummy for merge node api.exit_dummy
manageDanglingLCCs(V shape): Settting average cost 504 as initial cost for merge node api.exit_dummy
Pred cost for if.then116.i.i is 2
Direct branch from if.then4.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 7, preheader cost: 105
Self loop will be transformed, & body cost is 7 for loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>

Direct branch from while.end.i.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 32, preheader cost: 5
Self loop will be transformed, & body cost is 32 for loop Parallel Loop at depth 2 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 9, preheader cost: 1
Self loop will be transformed, & body cost is 9 for loop Parallel Loop at depth 2 containing: %while.body161.i.i<header><latch><exiting>

Direct branch from setup_ipaccess.exit.i needs to be instrumented
Direct branch from if.end32.i needs to be instrumented
Direct branch from if.else55.i needs to be instrumented
Direct branch from check_connect.exit.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 4, preheader cost: 1040
Self loop will be transformed, & body cost is 4 for loop Loop at depth 2 containing: %while.cond183.i<header><latch><exiting>

Direct branch from if.end173.i needs to be instrumented
Direct branch from if.then152.i needs to be instrumented
Direct branch from land.lhs.true204.i needs to be instrumented
Direct branch from if.end201.i needs to be instrumented
Direct branch from if.then222.i needs to be instrumented
Direct branch from if.then244.i needs to be instrumented
Direct branch from while.end.i.i.i needs to be instrumented
Direct branch from if.end51.i.i needs to be instrumented
Direct branch from api.exit needs to be instrumented
Func cost 1 for api_thread has been optimized for exit cost!
Storing cost of api_thread() : 1

Instrumenting loops (self loop count: 4, sese loop count: 0) for function api_thread

Loops scheduled for transform for api_thread:- 
Self Loop: Loop at depth 2 containing: %while.cond183.i<header><latch><exiting>

Self Loop: Parallel Loop at depth 2 containing: %while.body161.i.i<header><latch><exiting>

Self Loop: Parallel Loop at depth 2 containing: %vector.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>



api_thread(): Self loop Loop at depth 2 containing: %while.cond183.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.cond183.i( api_thread() ). Self Loop cost: 4. Iterations: 1000
Self loop is not canonical. Going for generic transformation with 1000 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

api_thread(): Transformed Self loop Loop at depth 2 containing: %while.cond183.i<header><latch><exiting>


api_thread(): Self loop Parallel Loop at depth 2 containing: %while.body161.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body161.i.i( api_thread() ). Self Loop cost: 9. Iterations: 444
Self loop is not canonical. Going for generic transformation with 444 iterations.
Attempting to transform self loop while.body161.i.i of api_thread with 444 inner loop iterations --> Parallel Loop at depth 2 containing: %while.body161.i.i<header><latch><exiting>
Found local ind var:   %dec284.in.i.i = phi i32 [ %dec284.i.i, %selfLoopOptExitBlock ], [ %dec284.in.i.i.ph, %while.body161.i.i.preheader ], mapping it to   %phiIVClone2 = phi i32 
User in header block to replace Phi:   %62 = add i32 -444, %dec284.in.i.i
Applied self loop transform on while.body161.i.i( api_thread() )

api_thread(): Transformed Self loop Parallel Loop at depth 2 containing: %while.body161.i.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>


api_thread(): Self loop Parallel Loop at depth 2 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( api_thread() ). Self Loop cost: 32. Iterations: 125
Self loop is not canonical. Going for generic transformation with 125 iterations.
Attempting to transform self loop vector.body of api_thread with 125 inner loop iterations --> Parallel Loop at depth 2 containing: %vector.body<header><latch><exiting>
Found local ind var:   %index = phi i32 [ 0, %vector.ph ], [ %index.next, %selfLoopOptExitBlock4 ], mapping it to   %phiIVClone5 = phi i32 
User in header block to replace Phi:   %32 = add i32 2000, %index
Applied self loop transform on vector.body( api_thread() )

api_thread(): Transformed Self loop Parallel Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock3,%selfLoopOptExitBlock4<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock3<header><latch><exiting>


api_thread(): Self loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i.i( api_thread() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

api_thread(): Transformed Self loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>

Func cost 422 for gethelp has been optimized for entry cost!
Storing cost of gethelp() : 422

Instrumenting loops (self loop count: 0, sese loop count: 0) for function gethelp

Loops scheduled for transform for gethelp:- 

Func cost 936 for getsummary has been optimized for entry cost!
Storing cost of getsummary() : 936

Instrumenting loops (self loop count: 0, sese loop count: 0) for function getsummary

Loops scheduled for transform for getsummary:- 

getthreads(): Checking if simple for Loop Loop at depth 1 containing: %if.then.i<header><latch><exiting>
. Latch: if.then.i, Exiting block: if.then.i
Self loop:- #backedges: 0, body cost: 421, preheader cost: 8
Self loop will be transformed, & body cost is 421 for loop Loop at depth 1 containing: %if.then.i<header><latch><exiting>

Func cost 9 for getthreads has been optimized for entry cost!
Storing cost of getthreads() : 9

Instrumenting loops (self loop count: 1, sese loop count: 0) for function getthreads

Loops scheduled for transform for getthreads:- 
Self Loop: Loop at depth 1 containing: %if.then.i<header><latch><exiting>



getthreads(): Self loop Loop at depth 1 containing: %if.then.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> if.then.i( getthreads() ). Self Loop cost: 421. Iterations: 9

getthreads(): Transformed Self loop Loop at depth 1 containing: %if.then.i<header><latch><exiting>

Direct branch from entry needs to be instrumented
Func cost 1 for remote_quit has been optimized for entry cost!
Storing cost of remote_quit() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function remote_quit

Loops scheduled for transform for remote_quit:- 

Direct branch from entry needs to be instrumented
Func cost 1 for remote_seturl has been optimized for entry cost!
Storing cost of remote_seturl() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function remote_seturl

Loops scheduled for transform for remote_seturl:- 

Total functions: 6, uninstrumented functions: 2
Optimized 6 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o cpuminer-api.o `test -f 'cpuminer-api.ll' || echo './'`cpuminer-api.ll
mv -f .deps/cpuminer-api.Tpo .deps/cpuminer-api.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT llvm_cpuminer-sysinfos.ll -MD -MP -MF .deps/cpuminer-sysinfos.Tpo -c -o llvm_cpuminer-sysinfos.ll `test -f 'sysinfos.c' || echo './'`sysinfos.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sysinfos.c:12:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < llvm_cpuminer-sysinfos.ll > opt_cpuminer-sysinfos.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < opt_cpuminer-sysinfos.ll > cpuminer-sysinfos.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: cpu_bestfeature
Function: cpu_clock
Function: cpu_fanpercent
Function: cpu_getmodelid
Function: cpu_getname
Function: cpu_temp
Function: has_aes_ni
cpu_bestfeature(): Transformed branch between land.lhs.true and if.end46 in the forward direction
cpu_bestfeature(): Transformed branch between if.else10 and if.end46 in the forward direction
cpu_bestfeature(): Transformed branch between if.else16 and if.end46_dummy1 in the forward direction
cpu_bestfeature(): Transformed branch between if.else22 and if.end46_dummy1_dummy in the forward direction
cpu_bestfeature(): Transformed branch between if.else28 and if.end46_dummy1_dummy_dummy in the forward direction
cpu_bestfeature(): Transformed branch between if.else34 and if.end46_dummy1_dummy_dummy_dummy in the forward direction
Func cost 73 for cpu_bestfeature has been optimized for entry cost!
Storing cost of cpu_bestfeature() : 73

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cpu_bestfeature

Loops scheduled for transform for cpu_bestfeature:- 

cpu_clock(): Transformed branch between if.end.i and linux_cpufreq.exit in the forward direction
Direct branch from entry needs to be instrumented
Func cost 102 for cpu_clock has been optimized for entry cost!
Storing cost of cpu_clock() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cpu_clock

Loops scheduled for transform for cpu_clock:- 

Func cost 1 for cpu_fanpercent has been optimized for entry cost!
Storing cost of cpu_fanpercent() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cpu_fanpercent

Loops scheduled for transform for cpu_fanpercent:- 

cpu_getmodelid(): Transformed branch between land.lhs.true and if.end44 in the forward direction
cpu_getmodelid(): Transformed branch between land.lhs.true16 and if.end44_dummy in the forward direction
cpu_getmodelid(): Transformed branch between land.lhs.true31 and if.end44_dummy_dummy in the forward direction
cpu_getmodelid(): Transformed branch between land.lhs.true34 and if.end44_dummy_dummy_dummy in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 103 of while.cond
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of while.cond to successor while.body
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of while.cond to successor while.end.loopexit
Pred cost for if.end44_dummy_dummy is 1
Pred cost for if.end44_dummy is 1
Pred cost for while.end.loopexit is 104
Pred cost for if.then50 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor if.then50 for merge node while.end
manageDanglingLCCs(V shape): Removing cost 104 of predecessor while.end.loopexit for merge node while.end
manageDanglingLCCs(V shape): Settting average cost 105 as initial cost for merge node while.end
Pred cost for if.end44_dummy_dummy is 1
Pred cost for if.end44_dummy is 1
Pred cost for while.end is 309
Func cost 412 for cpu_getmodelid has been optimized for entry cost!
Direct branch from land.lhs.true34 needs to be instrumented
Direct branch from land.lhs.true31 needs to be instrumented
Func cost 203 for cpu_getmodelid has been optimized for exit cost!
Storing cost of cpu_getmodelid() : 615

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cpu_getmodelid

Loops scheduled for transform for cpu_getmodelid:- 

Pred cost for while.end is 204
Func cost 412 for cpu_getname has been optimized for entry cost!
Func cost 203 for cpu_getname has been optimized for exit cost!
Storing cost of cpu_getname() : 615

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cpu_getname

Loops scheduled for transform for cpu_getname:- 

Func cost 207 for cpu_temp has been optimized for entry cost!
Func cost 102 for cpu_temp has been optimized for exit cost!
Storing cost of cpu_temp() : 309

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cpu_temp

Loops scheduled for transform for cpu_temp:- 

Func cost 4 for has_aes_ni has been optimized for entry cost!
Storing cost of has_aes_ni() : 4

Instrumenting loops (self loop count: 0, sese loop count: 0) for function has_aes_ni

Loops scheduled for transform for has_aes_ni:- 

Total functions: 7, uninstrumented functions: 3
Optimized 10 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o cpuminer-sysinfos.o `test -f 'cpuminer-sysinfos.ll' || echo './'`cpuminer-sysinfos.ll
mv -f .deps/cpuminer-sysinfos.Tpo .deps/cpuminer-sysinfos.Po
g++ -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include  -g -O3 -MT cpuminer-uint256.o -MD -MP -MF .deps/cpuminer-uint256.Tpo -c -o cpuminer-uint256.o `test -f 'uint256.cpp' || echo './'`uint256.cpp
mv -f .deps/cpuminer-uint256.Tpo .deps/cpuminer-uint256.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_keccak.ll -MD -MP -MF sha3/.deps/cpuminer-sph_keccak.Tpo -c -o sha3/llvm_cpuminer-sph_keccak.ll `test -f 'sha3/sph_keccak.c' || echo './'`sha3/sph_keccak.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_keccak.c:36:
In file included from sha3/sph_keccak.h:44:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_keccak.ll > sha3/opt_cpuminer-sph_keccak.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_keccak.ll > sha3/cpuminer-sph_keccak.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: keccak_core
Function: sph_keccak224
Function: sph_keccak224_addbits_and_close
Function: sph_keccak224_close
Function: sph_keccak224_init
Function: sph_keccak256
Function: sph_keccak256_addbits_and_close
Function: sph_keccak256_close
Function: sph_keccak256_init
Function: sph_keccak384
Function: sph_keccak384_addbits_and_close
Function: sph_keccak384_close
Function: sph_keccak384_init
Function: sph_keccak512
Function: sph_keccak512_addbits_and_close
Function: sph_keccak512_close
Function: sph_keccak512_init
keccak_core(): Transformed branch between while.cond.preheader and cleanup in the forward direction
keccak_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%for.cond.preheader,%for.body.preheader,%for.body,%for.cond20.preheader.loopexit,%for.cond20.preheader,%do.body24,%if.end9650.loopexit,%if.end9650<latch><exiting>
    Loop at depth 2 containing: %for.body<header><latch><exiting>
    Loop at depth 2 containing: %do.body24<header><latch><exiting>
. Latch: if.end9650, Exiting block: if.end9650
keccak_core(): Checking if simple for Loop Loop at depth 2 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
keccak_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%for.cond.preheader,%for.body.preheader,%for.body,%for.cond20.preheader.loopexit,%for.cond20.preheader,%do.body24,%if.end9650.loopexit,%if.end9650<latch><exiting>
    Loop at depth 2 containing: %for.body<header><latch><exiting>
    Loop at depth 2 containing: %do.body24<header><latch><exiting>
. Latch: if.end9650, Exiting block: if.end9650
keccak_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%for.cond.preheader,%for.body.preheader,%for.body,%for.cond20.preheader.loopexit,%for.cond20.preheader,%do.body24,%if.end9650.loopexit,%if.end9650<latch><exiting>
    Loop at depth 2 containing: %for.body<header><latch><exiting>
    Loop at depth 2 containing: %do.body24<header><latch><exiting>
. Latch: if.end9650, Exiting block: if.end9650
keccak_core(): Checking if simple for Loop Loop at depth 2 containing: %do.body24<header><latch><exiting>
. Latch: do.body24, Exiting block: do.body24
keccak_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%for.cond.preheader,%for.body.preheader,%for.body,%for.cond20.preheader.loopexit,%for.cond20.preheader,%do.body24,%if.end9650.loopexit,%if.end9650<latch><exiting>
    Loop at depth 2 containing: %for.body<header><latch><exiting>
    Loop at depth 2 containing: %do.body24<header><latch><exiting>
. Latch: if.end9650, Exiting block: if.end9650
Has backedges: 2 (numCost: 2)
Self loop:- #backedges: 0, body cost: 11, preheader cost: 112
Self loop will be transformed, & body cost is 11 for loop Loop at depth 2 containing: %for.body<header><latch><exiting>

Self loop:- #backedges: 3, body cost: 1577, preheader cost: 138
Self loop will be transformed, & body cost is 1577 for loop Loop at depth 2 containing: %do.body24<header><latch><exiting>

Instrumenting loop with body cost: 139
Non-header-colocated-exit loop will be transformed, & body cost is 139 for loop with header while.body
Func cost 69 for keccak_core has been optimized for entry cost!
Storing cost of keccak_core() : 69

Instrumenting loops (self loop count: 2, sese loop count: 1) for function keccak_core

Loops scheduled for transform for keccak_core:- 
Self Loop: Loop at depth 2 containing: %do.body24<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body<header>,%for.cond.preheader,%for.body.preheader,%for.body,%for.cond20.preheader.loopexit,%for.cond20.preheader,%do.body24,%if.end9650.loopexit,%if.end9650<latch><exiting>
    Loop at depth 2 containing: %for.body<header><latch><exiting>
    Loop at depth 2 containing: %do.body24<header><latch><exiting>



keccak_core(): Self loop Loop at depth 2 containing: %do.body24<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body24( keccak_core() ). Self Loop cost: 1577. Iterations: 2

keccak_core(): Transformed Self loop Loop at depth 2 containing: %do.body24<header><latch><exiting>


keccak_core(): Self loop Loop at depth 2 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( keccak_core() ). Self Loop cost: 11. Iterations: 363
Self loop is not canonical. Going for generic transformation with 363 iterations.
Attempting to transform self loop for.body of keccak_core with 363 inner loop iterations --> Loop at depth 2 containing: %for.body<header><latch><exiting>
Found local ind var:   %j.012987 = phi i64 [ %add17, %selfLoopOptExitBlock ], [ 0, %for.body.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %1 = add i64 2904, %j.012987
Applied self loop transform on for.body( keccak_core() )

keccak_core(): Transformed Self loop Loop at depth 2 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>


keccak_core(): Max depth loop Loop at depth 1 containing: %while.body<header>,%for.cond.preheader,%for.body.preheader,%for.body,%for.cond20.preheader.loopexit,%for.cond20.preheader,%do.body24,%if.end9650.loopexit,%if.end9650<latch><exiting>,%selfLoopOptBlock,%selfLoopOptExitBlock
    Loop at depth 2 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>
    Loop at depth 2 containing: %do.body24<header><latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body( keccak_core() )

keccak_core(): Transformed loop Loop at depth 1 containing: %while.body<header>,%for.cond.preheader,%for.body.preheader,%for.body,%for.cond20.preheader.loopexit,%for.cond20.preheader,%do.body24,%if.end9650.loopexit,%if.end9650<latch><exiting>,%selfLoopOptBlock,%selfLoopOptExitBlock
    Loop at depth 2 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>
    Loop at depth 2 containing: %do.body24<header><latch><exiting>

Func cost 72 for sph_keccak224 has been optimized for entry cost!
Storing cost of sph_keccak224() : 72

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak224

Loops scheduled for transform for sph_keccak224:- 

sph_keccak224_addbits_and_close(): Transformed branch between if.then.i and keccak_close28.exit in the forward direction
Func cost 508 for sph_keccak224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_keccak224_addbits_and_close() : 508

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak224_addbits_and_close

Loops scheduled for transform for sph_keccak224_addbits_and_close:- 

Func cost 508 for sph_keccak224_close has been optimized for entry cost!
Storing cost of sph_keccak224_close() : 508

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak224_close

Loops scheduled for transform for sph_keccak224_close:- 

Func cost 220 for sph_keccak224_init has been optimized for entry cost!
Storing cost of sph_keccak224_init() : 220

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak224_init

Loops scheduled for transform for sph_keccak224_init:- 

Func cost 72 for sph_keccak256 has been optimized for entry cost!
Storing cost of sph_keccak256() : 72

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak256

Loops scheduled for transform for sph_keccak256:- 

sph_keccak256_addbits_and_close(): Transformed branch between if.then.i and keccak_close32.exit in the forward direction
Func cost 508 for sph_keccak256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_keccak256_addbits_and_close() : 508

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak256_addbits_and_close

Loops scheduled for transform for sph_keccak256_addbits_and_close:- 

Func cost 508 for sph_keccak256_close has been optimized for entry cost!
Storing cost of sph_keccak256_close() : 508

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak256_close

Loops scheduled for transform for sph_keccak256_close:- 

Func cost 220 for sph_keccak256_init has been optimized for entry cost!
Storing cost of sph_keccak256_init() : 220

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak256_init

Loops scheduled for transform for sph_keccak256_init:- 

Func cost 72 for sph_keccak384 has been optimized for entry cost!
Storing cost of sph_keccak384() : 72

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak384

Loops scheduled for transform for sph_keccak384:- 

sph_keccak384_addbits_and_close(): Transformed branch between if.then.i and keccak_close48.exit in the forward direction
Func cost 508 for sph_keccak384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_keccak384_addbits_and_close() : 508

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak384_addbits_and_close

Loops scheduled for transform for sph_keccak384_addbits_and_close:- 

Func cost 508 for sph_keccak384_close has been optimized for entry cost!
Storing cost of sph_keccak384_close() : 508

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak384_close

Loops scheduled for transform for sph_keccak384_close:- 

Func cost 220 for sph_keccak384_init has been optimized for entry cost!
Storing cost of sph_keccak384_init() : 220

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak384_init

Loops scheduled for transform for sph_keccak384_init:- 

Func cost 72 for sph_keccak512 has been optimized for entry cost!
Storing cost of sph_keccak512() : 72

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak512

Loops scheduled for transform for sph_keccak512:- 

sph_keccak512_addbits_and_close(): Transformed branch between if.then.i and keccak_close64.exit in the forward direction
Func cost 508 for sph_keccak512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_keccak512_addbits_and_close() : 508

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak512_addbits_and_close

Loops scheduled for transform for sph_keccak512_addbits_and_close:- 

Func cost 508 for sph_keccak512_close has been optimized for entry cost!
Storing cost of sph_keccak512_close() : 508

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak512_close

Loops scheduled for transform for sph_keccak512_close:- 

Func cost 220 for sph_keccak512_init has been optimized for entry cost!
Storing cost of sph_keccak512_init() : 220

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_keccak512_init

Loops scheduled for transform for sph_keccak512_init:- 

Total functions: 17, uninstrumented functions: 8
Optimized 17 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_keccak.o `test -f 'sha3/cpuminer-sph_keccak.ll' || echo './'`sha3/cpuminer-sph_keccak.ll
mv -f sha3/.deps/cpuminer-sph_keccak.Tpo sha3/.deps/cpuminer-sph_keccak.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_hefty1.ll -MD -MP -MF sha3/.deps/cpuminer-sph_hefty1.Tpo -c -o sha3/llvm_cpuminer-sph_hefty1.ll `test -f 'sha3/sph_hefty1.c' || echo './'`sha3/sph_hefty1.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_hefty1.c:39:
In file included from sha3/sph_hefty1.h:44:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_hefty1.ll > sha3/opt_cpuminer-sph_hefty1.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_hefty1.ll > sha3/cpuminer-sph_hefty1.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: HEFTY1
Function: HEFTY1_Final
Function: HEFTY1_Init
Function: HEFTY1_Update
Function: HashBlock
Function: Mangle
HEFTY1(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then.i,%if.end.i<exiting>,%if.end.i.while.body.i_crit_edge<latch>
. Latch: if.end.i.while.body.i_crit_edge, Exiting block: if.end.i
Pred cost for HEFTY1_Update.exit.loopexit is 1
Func cost 310 for HEFTY1 has been optimized for entry cost!
Func cost 103 for HEFTY1 has been optimized for exit cost!
Storing cost of HEFTY1() : 413

Instrumenting loops (self loop count: 0, sese loop count: 0) for function HEFTY1

Loops scheduled for transform for HEFTY1:- 


HEFTY1(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then.i,%if.end.i<exiting>,%if.end.i.while.body.i_crit_edge<latch>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> while.body.i

HEFTY1(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then.i,%if.end.i<exiting>,%if.end.i.while.body.i_crit_edge<latch>

Direct branch from entry needs to be instrumented
Func cost 627 for HEFTY1_Final has been optimized for entry cost!
Storing cost of HEFTY1_Final() : 627

Instrumenting loops (self loop count: 0, sese loop count: 0) for function HEFTY1_Final

Loops scheduled for transform for HEFTY1_Final:- 

Func cost 205 for HEFTY1_Init has been optimized for entry cost!
Storing cost of HEFTY1_Init() : 205

Instrumenting loops (self loop count: 0, sese loop count: 0) for function HEFTY1_Init

Loops scheduled for transform for HEFTY1_Init:- 

HEFTY1_Update(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%if.then,%if.end<latch><exiting>
. Latch: if.end, Exiting block: if.end
Instrumenting loop with body cost: 118
Non-header-colocated-exit loop will be transformed, & body cost is 118 for loop with header while.body
Func cost 4 for HEFTY1_Update has been optimized for entry cost!
Storing cost of HEFTY1_Update() : 4

Instrumenting loops (self loop count: 0, sese loop count: 1) for function HEFTY1_Update

Loops scheduled for transform for HEFTY1_Update:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%if.then,%if.end<latch><exiting>



HEFTY1_Update(): Max depth loop Loop at depth 1 containing: %while.body<header>,%if.then,%if.end<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body( HEFTY1_Update() )

HEFTY1_Update(): Transformed loop Loop at depth 1 containing: %while.body<header>,%if.then,%if.end<latch><exiting>

HashBlock(): Checking if simple for Loop Loop at depth 1 containing: %for.body25<header>,%sw.bb6.i261,%sw.bb.i259,%sw.bb7.i263,%Br.exit265,%sw.bb6.i275,%sw.bb.i273,%sw.bb7.i277,%Br.exit279,%sw.bb6.i306,%sw.bb.i304,%sw.bb7.i308,%Br.exit310,%sw.bb6.i347,%sw.bb.i345,%sw.bb7.i349,%Br.exit351,%sw.bb6.i361,%sw.bb.i359,%sw.bb7.i363,%Br.exit365,%sw.bb6.i375,%sw.bb.i373,%sw.bb7.i377,%Br.exit379,%sw.bb6.i407,%sw.bb.i405,%sw.bb7.i409,%Br.exit411,%sw.bb6.i446,%sw.bb.i444,%sw.bb7.i448,%Br.exit450<latch><exiting>
. Latch: Br.exit450, Exiting block: Br.exit450
HashBlock(): Checking if simple for Loop Loop at depth 1 containing: %for.body56<header>,%sw.bb6.i518,%sw.bb.i516,%sw.bb7.i520,%Br.exit522,%sw.bb6.i504,%sw.bb.i502,%sw.bb7.i506,%Br.exit508,%sw.bb6.i477,%sw.bb.i475,%sw.bb7.i479,%Br.exit481,%sw.bb6.i432,%sw.bb.i430,%sw.bb7.i434,%Br.exit436,%sw.bb6.i393,%sw.bb.i391,%sw.bb7.i395,%Br.exit397,%sw.bb6.i333,%sw.bb.i331,%sw.bb7.i335,%Br.exit337,%sw.bb6.i292,%sw.bb.i290,%sw.bb7.i294,%Br.exit296,%sw.bb6.i,%sw.bb.i,%sw.bb7.i,%Br.exit<latch><exiting>
. Latch: Br.exit, Exiting block: Br.exit
Has backedges: 47 (numCost: 47)
Has backedges: 15 (numCost: 15)
Non-header-colocated-exit loop:- loop & preheader cost 3705 will be instrumented in post loop exit
Instrumenting loop with body cost: 146
Non-header-colocated-exit loop will be transformed, & body cost is 146 for loop with header for.body56
Func cost 3821 for HashBlock has been optimized for entry cost!
Storing cost of HashBlock() : 3821

Instrumenting loops (self loop count: 0, sese loop count: 1) for function HashBlock

Loops scheduled for transform for HashBlock:- 
Sese Loop: Loop at depth 1 containing: %for.body56<header>,%sw.bb6.i518,%sw.bb.i516,%sw.bb7.i520,%Br.exit522,%sw.bb6.i504,%sw.bb.i502,%sw.bb7.i506,%Br.exit508,%sw.bb6.i477,%sw.bb.i475,%sw.bb7.i479,%Br.exit481,%sw.bb6.i432,%sw.bb.i430,%sw.bb7.i434,%Br.exit436,%sw.bb6.i393,%sw.bb.i391,%sw.bb7.i395,%Br.exit397,%sw.bb6.i333,%sw.bb.i331,%sw.bb7.i335,%Br.exit337,%sw.bb6.i292,%sw.bb.i290,%sw.bb7.i294,%Br.exit296,%sw.bb6.i,%sw.bb.i,%sw.bb7.i,%Br.exit<latch><exiting>



HashBlock(): Max depth loop Loop at depth 1 containing: %for.body25<header>,%sw.bb6.i261,%sw.bb.i259,%sw.bb7.i263,%Br.exit265,%sw.bb6.i275,%sw.bb.i273,%sw.bb7.i277,%Br.exit279,%sw.bb6.i306,%sw.bb.i304,%sw.bb7.i308,%Br.exit310,%sw.bb6.i347,%sw.bb.i345,%sw.bb7.i349,%Br.exit351,%sw.bb6.i361,%sw.bb.i359,%sw.bb7.i363,%Br.exit365,%sw.bb6.i375,%sw.bb.i373,%sw.bb7.i377,%Br.exit379,%sw.bb6.i407,%sw.bb.i405,%sw.bb7.i409,%Br.exit411,%sw.bb6.i446,%sw.bb.i444,%sw.bb7.i448,%Br.exit450<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body25

HashBlock(): Transformed loop Loop at depth 1 containing: %for.body25<header>,%sw.bb6.i261,%sw.bb.i259,%sw.bb7.i263,%Br.exit265,%sw.bb6.i275,%sw.bb.i273,%sw.bb7.i277,%Br.exit279,%sw.bb6.i306,%sw.bb.i304,%sw.bb7.i308,%Br.exit310,%sw.bb6.i347,%sw.bb.i345,%sw.bb7.i349,%Br.exit351,%sw.bb6.i361,%sw.bb.i359,%sw.bb7.i363,%Br.exit365,%sw.bb6.i375,%sw.bb.i373,%sw.bb7.i377,%Br.exit379,%sw.bb6.i407,%sw.bb.i405,%sw.bb7.i409,%Br.exit411,%sw.bb6.i446,%sw.bb.i444,%sw.bb7.i448,%Br.exit450<latch><exiting>


HashBlock(): Max depth loop Loop at depth 1 containing: %for.body56<header>,%sw.bb6.i518,%sw.bb.i516,%sw.bb7.i520,%Br.exit522,%sw.bb6.i504,%sw.bb.i502,%sw.bb7.i506,%Br.exit508,%sw.bb6.i477,%sw.bb.i475,%sw.bb7.i479,%Br.exit481,%sw.bb6.i432,%sw.bb.i430,%sw.bb7.i434,%Br.exit436,%sw.bb6.i393,%sw.bb.i391,%sw.bb7.i395,%Br.exit397,%sw.bb6.i333,%sw.bb.i331,%sw.bb7.i335,%Br.exit337,%sw.bb6.i292,%sw.bb.i290,%sw.bb7.i294,%Br.exit296,%sw.bb6.i,%sw.bb.i,%sw.bb7.i,%Br.exit<latch><exiting>


This seseloop will be transformed & instrumented --> for.body56( HashBlock() ). SESE Loop cost: 146. Iterations: 27
Found local ind var:   %indvars.iv = phi i64 [ %indvars.iv.next, %seseLoopOptHNCExitBlock ], [ 16, %for.body56.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %68 = add i64 27, %indvars.iv
User in header block to replace Phi:   %B.1534 = phi i32 [ %A.1536, %seseLoopOptHNCExitBlock ], [ %A.0551.lcssa, %for.body56.preheader ]
User in header block to replace Phi:   %C.1532 = phi i32 [ %B.1534, %seseLoopOptHNCExitBlock ], [ %B.0549.lcssa, %for.body56.preheader ]
User in header block to replace Phi:   %D.1531 = phi i32 [ %C.1532, %seseLoopOptHNCExitBlock ], [ %C.0547.lcssa, %for.body56.preheader ]
User in header block to replace Phi:   %F.1527 = phi i32 [ %E.1529, %seseLoopOptHNCExitBlock ], [ %E.0544.lcssa, %for.body56.preheader ]
User in header block to replace Phi:   %G.1525 = phi i32 [ %F.1527, %seseLoopOptHNCExitBlock ], [ %F.0542.lcssa, %for.body56.preheader ]
User in header block to replace Phi:   %H.1524 = phi i32 [ %G.1525, %seseLoopOptHNCExitBlock ], [ %G.0540.lcssa, %for.body56.preheader ]
Applied sese loop transform on for.body56( HashBlock() )

HashBlock(): Transformed loop Loop at depth 1 containing: %for.body56<header>,%sw.bb6.i518,%sw.bb.i516,%sw.bb7.i520,%Br.exit522,%sw.bb6.i504,%sw.bb.i502,%sw.bb7.i506,%Br.exit508,%sw.bb6.i477,%sw.bb.i475,%sw.bb7.i479,%Br.exit481,%sw.bb6.i432,%sw.bb.i430,%sw.bb7.i434,%Br.exit436,%sw.bb6.i393,%sw.bb.i391,%sw.bb7.i395,%Br.exit397,%sw.bb6.i333,%sw.bb.i331,%sw.bb7.i335,%Br.exit337,%sw.bb6.i292,%sw.bb.i290,%sw.bb7.i294,%Br.exit296,%sw.bb6.i,%sw.bb.i,%sw.bb7.i,%Br.exit,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%sw.bb.i516,%sw.bb7.i520,%Br.exit522,%sw.bb6.i504,%sw.bb.i502,%sw.bb7.i506,%Br.exit508,%sw.bb6.i477,%sw.bb.i475,%sw.bb7.i479,%Br.exit481,%sw.bb6.i432,%sw.bb.i430,%sw.bb7.i434,%Br.exit436,%sw.bb6.i393,%sw.bb.i391,%sw.bb7.i395,%Br.exit397,%sw.bb6.i333,%sw.bb.i331,%sw.bb7.i335,%Br.exit337,%sw.bb6.i292,%sw.bb.i290,%sw.bb7.i294,%Br.exit296,%sw.bb6.i,%sw.bb.i,%sw.bb7.i,%Br.exit<latch><exiting>,%sw.bb6.i518

Skipping unreachable block sw.epilog124
Pred cost for sw.bb.1 is 10
Pred cost for sw.bb21.1 is 10
Pred cost for sw.bb30.1 is 10
Pred cost for sw.bb40.1 is 11
manageDanglingLCCs(V shape): Removing cost 10 of predecessor sw.bb21.1 for merge node sw.epilog.1
manageDanglingLCCs(V shape): Removing cost 10 of predecessor sw.bb.1 for merge node sw.epilog.1
manageDanglingLCCs(V shape): Removing cost 11 of predecessor sw.bb40.1 for merge node sw.epilog.1
manageDanglingLCCs(V shape): Removing cost 10 of predecessor sw.bb30.1 for merge node sw.epilog.1
manageDanglingLCCs(V shape): Settting average cost 10 as initial cost for merge node sw.epilog.1
Pred cost for sw.bb.2 is 10
Pred cost for sw.bb21.2 is 10
Pred cost for sw.bb30.2 is 10
Pred cost for sw.bb40.2 is 11
manageDanglingLCCs(V shape): Removing cost 10 of predecessor sw.bb30.2 for merge node sw.epilog.2
manageDanglingLCCs(V shape): Removing cost 10 of predecessor sw.bb21.2 for merge node sw.epilog.2
manageDanglingLCCs(V shape): Removing cost 11 of predecessor sw.bb40.2 for merge node sw.epilog.2
manageDanglingLCCs(V shape): Removing cost 10 of predecessor sw.bb.2 for merge node sw.epilog.2
manageDanglingLCCs(V shape): Settting average cost 10 as initial cost for merge node sw.epilog.2
Func cost 39 for Mangle has been optimized for entry cost!
Storing cost of Mangle() : 39

Instrumenting loops (self loop count: 0, sese loop count: 0) for function Mangle

Loops scheduled for transform for Mangle:- 

Total functions: 6, uninstrumented functions: 1
Optimized 7 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_hefty1.o `test -f 'sha3/cpuminer-sph_hefty1.ll' || echo './'`sha3/cpuminer-sph_hefty1.ll
mv -f sha3/.deps/cpuminer-sph_hefty1.Tpo sha3/.deps/cpuminer-sph_hefty1.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_groestl.ll -MD -MP -MF sha3/.deps/cpuminer-sph_groestl.Tpo -c -o sha3/llvm_cpuminer-sph_groestl.ll `test -f 'sha3/sph_groestl.c' || echo './'`sha3/sph_groestl.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_groestl.c:36:
In file included from sha3/sph_groestl.h:43:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_groestl.ll > sha3/opt_cpuminer-sph_groestl.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_groestl.ll > sha3/cpuminer-sph_groestl.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: groestl_big_close
Function: groestl_big_core
Function: groestl_small_close
Function: groestl_small_core
Function: sph_groestl224
Function: sph_groestl224_addbits_and_close
Function: sph_groestl224_close
Function: sph_groestl224_init
Function: sph_groestl256
Function: sph_groestl256_addbits_and_close
Function: sph_groestl256_close
Function: sph_groestl256_init
Function: sph_groestl384
Function: sph_groestl384_addbits_and_close
Function: sph_groestl384_close
Function: sph_groestl384_init
Function: sph_groestl512
Function: sph_groestl512_addbits_and_close
Function: sph_groestl512_close
Function: sph_groestl512_init
groestl_big_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header><latch><exiting>
. Latch: do.body23, Exiting block: do.body23
Has backedges: 6 (numCost: 6)
Self loop:- #backedges: 7, body cost: 1298, preheader cost: 669
Self loop will be transformed, & body cost is 1298 for loop Loop at depth 1 containing: %do.body23<header><latch><exiting>

Func cost 1357 for groestl_big_close has been optimized for entry cost!
Storing cost of groestl_big_close() : 1357

Instrumenting loops (self loop count: 1, sese loop count: 0) for function groestl_big_close

Loops scheduled for transform for groestl_big_close:- 
Self Loop: Loop at depth 1 containing: %do.body23<header><latch><exiting>



groestl_big_close(): Self loop Loop at depth 1 containing: %do.body23<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body23( groestl_big_close() ). Self Loop cost: 1298. Iterations: 3

groestl_big_close(): Transformed Self loop Loop at depth 1 containing: %do.body23<header><latch><exiting>

groestl_big_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%do.body1578.preheader,%do.body1578,%for.body3162.preheader,%if.end3174<latch><exiting>
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body1578<header><latch><exiting>
. Latch: if.end3174, Exiting block: if.end3174
groestl_big_core(): Checking if simple for Loop Loop at depth 2 containing: %do.body27<header><latch><exiting>
. Latch: do.body27, Exiting block: do.body27
groestl_big_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%do.body1578.preheader,%do.body1578,%for.body3162.preheader,%if.end3174<latch><exiting>
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body1578<header><latch><exiting>
. Latch: if.end3174, Exiting block: if.end3174
groestl_big_core(): Checking if simple for Loop Loop at depth 2 containing: %do.body1578<header><latch><exiting>
. Latch: do.body1578, Exiting block: do.body1578
groestl_big_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%do.body1578.preheader,%do.body1578,%for.body3162.preheader,%if.end3174<latch><exiting>
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body1578<header><latch><exiting>
. Latch: if.end3174, Exiting block: if.end3174
Has backedges: 6 (numCost: 6)
Has backedges: 6 (numCost: 6)
Self loop:- #backedges: 7, body cost: 1298, preheader cost: 446
Self loop will be transformed, & body cost is 1298 for loop Loop at depth 2 containing: %do.body27<header><latch><exiting>

Self loop:- #backedges: 7, body cost: 1301, preheader cost: 463
Self loop will be transformed, & body cost is 1301 for loop Loop at depth 2 containing: %do.body1578<header><latch><exiting>

Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body
Func cost 103 for groestl_big_core has been optimized for entry cost!
Storing cost of groestl_big_core() : 103

Instrumenting loops (self loop count: 2, sese loop count: 1) for function groestl_big_core

Loops scheduled for transform for groestl_big_core:- 
Self Loop: Loop at depth 2 containing: %do.body1578<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %do.body27<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%do.body1578.preheader,%do.body1578,%for.body3162.preheader,%if.end3174<latch><exiting>,%while.bodyDirectSucc
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body1578<header><latch><exiting>



groestl_big_core(): Self loop Loop at depth 2 containing: %do.body1578<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body1578( groestl_big_core() ). Self Loop cost: 1301. Iterations: 3

groestl_big_core(): Transformed Self loop Loop at depth 2 containing: %do.body1578<header><latch><exiting>


groestl_big_core(): Self loop Loop at depth 2 containing: %do.body27<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body27( groestl_big_core() ). Self Loop cost: 1298. Iterations: 3

groestl_big_core(): Transformed Self loop Loop at depth 2 containing: %do.body27<header><latch><exiting>


groestl_big_core(): Max depth loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%do.body1578.preheader,%do.body1578,%for.body3162.preheader,%if.end3174<latch><exiting>,%while.bodyDirectSucc
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body1578<header><latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body( groestl_big_core() )

groestl_big_core(): Transformed loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%do.body1578.preheader,%do.body1578,%for.body3162.preheader,%if.end3174<latch><exiting>,%while.bodyDirectSucc
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body1578<header><latch><exiting>

groestl_small_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header><latch><exiting>
. Latch: do.body23, Exiting block: do.body23
Has backedges: 4 (numCost: 4)
Self loop:- #backedges: 5, body cost: 626, preheader cost: 653
Self loop:- loop & preheader cost 3783 will be instrumented in post loop exit
Func cost 521 for groestl_small_close has been optimized for entry cost!
Storing cost of groestl_small_close() : 521

Instrumenting loops (self loop count: 0, sese loop count: 0) for function groestl_small_close

Loops scheduled for transform for groestl_small_close:- 


groestl_small_close(): Self loop Loop at depth 1 containing: %do.body23<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body23

groestl_small_close(): Transformed Self loop Loop at depth 1 containing: %do.body23<header><latch><exiting>

groestl_small_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%for.cond806.preheader,%do.body810,%for.cond1607.preheader,%if.end1622<latch><exiting>
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body810<header><latch><exiting>
. Latch: if.end1622, Exiting block: if.end1622
groestl_small_core(): Checking if simple for Loop Loop at depth 2 containing: %do.body27<header><latch><exiting>
. Latch: do.body27, Exiting block: do.body27
groestl_small_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%for.cond806.preheader,%do.body810,%for.cond1607.preheader,%if.end1622<latch><exiting>
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body810<header><latch><exiting>
. Latch: if.end1622, Exiting block: if.end1622
groestl_small_core(): Checking if simple for Loop Loop at depth 2 containing: %do.body810<header><latch><exiting>
. Latch: do.body810, Exiting block: do.body810
groestl_small_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%for.cond806.preheader,%do.body810,%for.cond1607.preheader,%if.end1622<latch><exiting>
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body810<header><latch><exiting>
. Latch: if.end1622, Exiting block: if.end1622
Has backedges: 4 (numCost: 4)
Has backedges: 4 (numCost: 4)
Self loop:- #backedges: 5, body cost: 626, preheader cost: 430
Self loop:- loop & preheader cost 3560 will be instrumented in post loop exit
Self loop:- #backedges: 5, body cost: 629, preheader cost: 3577
Self loop:- loop cost 3145 will be instrumented in post loop exit
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body
Func cost 103 for groestl_small_core has been optimized for entry cost!
Storing cost of groestl_small_core() : 103

Instrumenting loops (self loop count: 0, sese loop count: 1) for function groestl_small_core

Loops scheduled for transform for groestl_small_core:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%for.cond806.preheader,%do.body810,%for.cond1607.preheader,%if.end1622<latch><exiting>,%while.bodyDirectSucc
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body810<header><latch><exiting>



groestl_small_core(): Self loop Loop at depth 2 containing: %do.body810<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body810

groestl_small_core(): Transformed Self loop Loop at depth 2 containing: %do.body810<header><latch><exiting>


groestl_small_core(): Self loop Loop at depth 2 containing: %do.body27<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body27

groestl_small_core(): Transformed Self loop Loop at depth 2 containing: %do.body27<header><latch><exiting>


groestl_small_core(): Max depth loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%for.cond806.preheader,%do.body810,%for.cond1607.preheader,%if.end1622<latch><exiting>,%while.bodyDirectSucc
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body810<header><latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body( groestl_small_core() )

groestl_small_core(): Transformed loop Loop at depth 1 containing: %while.body<header>,%do.body17,%do.body27,%for.cond806.preheader,%do.body810,%for.cond1607.preheader,%if.end1622<latch><exiting>,%while.bodyDirectSucc
    Loop at depth 2 containing: %do.body27<header><latch><exiting>
    Loop at depth 2 containing: %do.body810<header><latch><exiting>

Func cost 106 for sph_groestl224 has been optimized for entry cost!
Storing cost of sph_groestl224() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl224

Loops scheduled for transform for sph_groestl224:- 

Func cost 524 for sph_groestl224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_groestl224_addbits_and_close() : 524

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl224_addbits_and_close

Loops scheduled for transform for sph_groestl224_addbits_and_close:- 

Func cost 524 for sph_groestl224_close has been optimized for entry cost!
Storing cost of sph_groestl224_close() : 524

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl224_close

Loops scheduled for transform for sph_groestl224_close:- 

Func cost 106 for sph_groestl224_init has been optimized for entry cost!
Storing cost of sph_groestl224_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl224_init

Loops scheduled for transform for sph_groestl224_init:- 

Func cost 106 for sph_groestl256 has been optimized for entry cost!
Storing cost of sph_groestl256() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl256

Loops scheduled for transform for sph_groestl256:- 

Func cost 524 for sph_groestl256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_groestl256_addbits_and_close() : 524

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl256_addbits_and_close

Loops scheduled for transform for sph_groestl256_addbits_and_close:- 

Func cost 524 for sph_groestl256_close has been optimized for entry cost!
Storing cost of sph_groestl256_close() : 524

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl256_close

Loops scheduled for transform for sph_groestl256_close:- 

Func cost 106 for sph_groestl256_init has been optimized for entry cost!
Storing cost of sph_groestl256_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl256_init

Loops scheduled for transform for sph_groestl256_init:- 

Func cost 106 for sph_groestl384 has been optimized for entry cost!
Storing cost of sph_groestl384() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl384

Loops scheduled for transform for sph_groestl384:- 

Func cost 1360 for sph_groestl384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_groestl384_addbits_and_close() : 1360

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl384_addbits_and_close

Loops scheduled for transform for sph_groestl384_addbits_and_close:- 

Func cost 1360 for sph_groestl384_close has been optimized for entry cost!
Storing cost of sph_groestl384_close() : 1360

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl384_close

Loops scheduled for transform for sph_groestl384_close:- 

Func cost 106 for sph_groestl384_init has been optimized for entry cost!
Storing cost of sph_groestl384_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl384_init

Loops scheduled for transform for sph_groestl384_init:- 

Func cost 106 for sph_groestl512 has been optimized for entry cost!
Storing cost of sph_groestl512() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl512

Loops scheduled for transform for sph_groestl512:- 

Func cost 1360 for sph_groestl512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_groestl512_addbits_and_close() : 1360

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl512_addbits_and_close

Loops scheduled for transform for sph_groestl512_addbits_and_close:- 

Func cost 1360 for sph_groestl512_close has been optimized for entry cost!
Storing cost of sph_groestl512_close() : 1360

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl512_close

Loops scheduled for transform for sph_groestl512_close:- 

Func cost 106 for sph_groestl512_init has been optimized for entry cost!
Storing cost of sph_groestl512_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_groestl512_init

Loops scheduled for transform for sph_groestl512_init:- 

Total functions: 20, uninstrumented functions: 16
Optimized 20 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_groestl.o `test -f 'sha3/cpuminer-sph_groestl.ll' || echo './'`sha3/cpuminer-sph_groestl.ll
mv -f sha3/.deps/cpuminer-sph_groestl.Tpo sha3/.deps/cpuminer-sph_groestl.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_skein.ll -MD -MP -MF sha3/.deps/cpuminer-sph_skein.Tpo -c -o sha3/llvm_cpuminer-sph_skein.ll `test -f 'sha3/sph_skein.c' || echo './'`sha3/sph_skein.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_skein.c:36:
In file included from sha3/sph_skein.h:49:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_skein.ll > sha3/opt_cpuminer-sph_skein.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_skein.ll > sha3/cpuminer-sph_skein.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: skein_big_close
Function: skein_big_core
Function: sph_skein224
Function: sph_skein224_addbits_and_close
Function: sph_skein224_close
Function: sph_skein224_init
Function: sph_skein256
Function: sph_skein256_addbits_and_close
Function: sph_skein256_close
Function: sph_skein256_init
Function: sph_skein384
Function: sph_skein384_addbits_and_close
Function: sph_skein384_close
Function: sph_skein384_init
Function: sph_skein512
Function: sph_skein512_addbits_and_close
Function: sph_skein512_close
Function: sph_skein512_init
skein_big_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body21<header>,%if.then2906,%for.inc<latch><exiting>
. Latch: for.inc, Exiting block: for.inc
Has backedges: 1 (numCost: 1)
Direct branch from entry needs to be instrumented
Direct branch from do.body21 needs to be instrumented
Non-header-colocated-exit loop:- loop & preheader cost 152 will be instrumented in post loop exit
Func cost 262 for skein_big_close has been optimized for entry cost!
Storing cost of skein_big_close() : 262

Instrumenting loops (self loop count: 0, sese loop count: 0) for function skein_big_close

Loops scheduled for transform for skein_big_close:- 


skein_big_close(): Max depth loop Loop at depth 1 containing: %do.body21<header>,%if.then2906,%for.inc<latch><exiting>,%do.body21DirectSucc

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> do.body21

skein_big_close(): Transformed loop Loop at depth 1 containing: %do.body21<header>,%if.then2906,%for.inc<latch><exiting>,%do.body21DirectSucc

skein_big_core(): Checking if simple for Loop Loop at depth 1 containing: %do.body14<header>,%if.then17,%if.end2900<latch><exiting>
. Latch: if.end2900, Exiting block: if.end2900
Direct branch from do.body14 needs to be instrumented
Instrumenting loop with body cost: 110
Non-header-colocated-exit loop will be transformed, & body cost is 110 for loop with header do.body14
Func cost 82 for skein_big_core has been optimized for entry cost!
Storing cost of skein_big_core() : 82

Instrumenting loops (self loop count: 0, sese loop count: 1) for function skein_big_core

Loops scheduled for transform for skein_big_core:- 
Sese Loop: Loop at depth 1 containing: %do.body14<header>,%if.then17,%if.end2900<latch><exiting>,%do.body14DirectSucc



skein_big_core(): Max depth loop Loop at depth 1 containing: %do.body14<header>,%if.then17,%if.end2900<latch><exiting>,%do.body14DirectSucc


This seseloop will not be transformed since it has no induction variable --> do.body14( skein_big_core() )

skein_big_core(): Transformed loop Loop at depth 1 containing: %do.body14<header>,%if.then17,%if.end2900<latch><exiting>,%do.body14DirectSucc

Func cost 85 for sph_skein224 has been optimized for entry cost!
Storing cost of sph_skein224() : 85

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein224

Loops scheduled for transform for sph_skein224:- 

Func cost 277 for sph_skein224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_skein224_addbits_and_close() : 277

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein224_addbits_and_close

Loops scheduled for transform for sph_skein224_addbits_and_close:- 

Func cost 277 for sph_skein224_close has been optimized for entry cost!
Storing cost of sph_skein224_close() : 277

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein224_close

Loops scheduled for transform for sph_skein224_close:- 

Func cost 13 for sph_skein224_init has been optimized for entry cost!
Storing cost of sph_skein224_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein224_init

Loops scheduled for transform for sph_skein224_init:- 

Func cost 85 for sph_skein256 has been optimized for entry cost!
Storing cost of sph_skein256() : 85

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein256

Loops scheduled for transform for sph_skein256:- 

Func cost 277 for sph_skein256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_skein256_addbits_and_close() : 277

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein256_addbits_and_close

Loops scheduled for transform for sph_skein256_addbits_and_close:- 

Func cost 277 for sph_skein256_close has been optimized for entry cost!
Storing cost of sph_skein256_close() : 277

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein256_close

Loops scheduled for transform for sph_skein256_close:- 

Func cost 13 for sph_skein256_init has been optimized for entry cost!
Storing cost of sph_skein256_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein256_init

Loops scheduled for transform for sph_skein256_init:- 

Func cost 85 for sph_skein384 has been optimized for entry cost!
Storing cost of sph_skein384() : 85

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein384

Loops scheduled for transform for sph_skein384:- 

Func cost 277 for sph_skein384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_skein384_addbits_and_close() : 277

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein384_addbits_and_close

Loops scheduled for transform for sph_skein384_addbits_and_close:- 

Func cost 277 for sph_skein384_close has been optimized for entry cost!
Storing cost of sph_skein384_close() : 277

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein384_close

Loops scheduled for transform for sph_skein384_close:- 

Func cost 13 for sph_skein384_init has been optimized for entry cost!
Storing cost of sph_skein384_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein384_init

Loops scheduled for transform for sph_skein384_init:- 

Func cost 85 for sph_skein512 has been optimized for entry cost!
Storing cost of sph_skein512() : 85

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein512

Loops scheduled for transform for sph_skein512:- 

Func cost 277 for sph_skein512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_skein512_addbits_and_close() : 277

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein512_addbits_and_close

Loops scheduled for transform for sph_skein512_addbits_and_close:- 

Func cost 277 for sph_skein512_close has been optimized for entry cost!
Storing cost of sph_skein512_close() : 277

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein512_close

Loops scheduled for transform for sph_skein512_close:- 

Func cost 13 for sph_skein512_init has been optimized for entry cost!
Storing cost of sph_skein512_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_skein512_init

Loops scheduled for transform for sph_skein512_init:- 

Total functions: 18, uninstrumented functions: 16
Optimized 18 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_skein.o `test -f 'sha3/cpuminer-sph_skein.ll' || echo './'`sha3/cpuminer-sph_skein.ll
mv -f sha3/.deps/cpuminer-sph_skein.Tpo sha3/.deps/cpuminer-sph_skein.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_bmw.ll -MD -MP -MF sha3/.deps/cpuminer-sph_bmw.Tpo -c -o sha3/llvm_cpuminer-sph_bmw.ll `test -f 'sha3/sph_bmw.c' || echo './'`sha3/sph_bmw.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_bmw.c:41:
In file included from sha3/sph_bmw.h:44:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_bmw.ll > sha3/opt_cpuminer-sph_bmw.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_bmw.ll > sha3/cpuminer-sph_bmw.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: compress_big
Function: compress_small
Function: sph_bmw224
Function: sph_bmw224_addbits_and_close
Function: sph_bmw224_close
Function: sph_bmw224_init
Function: sph_bmw256
Function: sph_bmw256_addbits_and_close
Function: sph_bmw256_close
Function: sph_bmw256_init
Function: sph_bmw384
Function: sph_bmw384_addbits_and_close
Function: sph_bmw384_close
Function: sph_bmw384_init
Function: sph_bmw512
Function: sph_bmw512_addbits_and_close
Function: sph_bmw512_close
Function: sph_bmw512_init
Func cost 1564 for compress_big has been optimized for entry cost!
Storing cost of compress_big() : 1564

Instrumenting loops (self loop count: 0, sese loop count: 0) for function compress_big

Loops scheduled for transform for compress_big:- 

Func cost 1555 for compress_small has been optimized for entry cost!
Storing cost of compress_small() : 1555

Instrumenting loops (self loop count: 0, sese loop count: 0) for function compress_small

Loops scheduled for transform for compress_small:- 

sph_bmw224(): Transformed branch between while.end.i and bmw32.exit in the forward direction
sph_bmw224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>
. Latch: if.end11.i, Exiting block: if.end11.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Direct branch from while.end.i needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 102 for sph_bmw224 has been optimized for entry cost!
Storing cost of sph_bmw224() : 102

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_bmw224

Loops scheduled for transform for sph_bmw224:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc



sph_bmw224(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_bmw224() )

sph_bmw224(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc

Direct branch from entry needs to be instrumented
Func cost 3735 for sph_bmw224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_bmw224_addbits_and_close() : 3735

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw224_addbits_and_close

Loops scheduled for transform for sph_bmw224_addbits_and_close:- 

Direct branch from entry needs to be instrumented
Func cost 3733 for sph_bmw224_close has been optimized for entry cost!
Storing cost of sph_bmw224_close() : 3733

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw224_close

Loops scheduled for transform for sph_bmw224_close:- 

Func cost 109 for sph_bmw224_init has been optimized for entry cost!
Storing cost of sph_bmw224_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw224_init

Loops scheduled for transform for sph_bmw224_init:- 

sph_bmw256(): Transformed branch between while.end.i and bmw32.exit in the forward direction
sph_bmw256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>
. Latch: if.end11.i, Exiting block: if.end11.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Direct branch from while.end.i needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 102 for sph_bmw256 has been optimized for entry cost!
Storing cost of sph_bmw256() : 102

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_bmw256

Loops scheduled for transform for sph_bmw256:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc



sph_bmw256(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_bmw256() )

sph_bmw256(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc

Direct branch from entry needs to be instrumented
Func cost 3735 for sph_bmw256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_bmw256_addbits_and_close() : 3735

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw256_addbits_and_close

Loops scheduled for transform for sph_bmw256_addbits_and_close:- 

Direct branch from entry needs to be instrumented
Func cost 3733 for sph_bmw256_close has been optimized for entry cost!
Storing cost of sph_bmw256_close() : 3733

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw256_close

Loops scheduled for transform for sph_bmw256_close:- 

Func cost 109 for sph_bmw256_init has been optimized for entry cost!
Storing cost of sph_bmw256_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw256_init

Loops scheduled for transform for sph_bmw256_init:- 

sph_bmw384(): Transformed branch between while.end.i and bmw64.exit in the forward direction
sph_bmw384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>
. Latch: if.end11.i, Exiting block: if.end11.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Direct branch from while.end.i needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 102 for sph_bmw384 has been optimized for entry cost!
Storing cost of sph_bmw384() : 102

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_bmw384

Loops scheduled for transform for sph_bmw384:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc



sph_bmw384(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_bmw384() )

sph_bmw384(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc

Direct branch from entry needs to be instrumented
Func cost 3753 for sph_bmw384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_bmw384_addbits_and_close() : 3753

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw384_addbits_and_close

Loops scheduled for transform for sph_bmw384_addbits_and_close:- 

Direct branch from entry needs to be instrumented
Func cost 3751 for sph_bmw384_close has been optimized for entry cost!
Storing cost of sph_bmw384_close() : 3751

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw384_close

Loops scheduled for transform for sph_bmw384_close:- 

Func cost 109 for sph_bmw384_init has been optimized for entry cost!
Storing cost of sph_bmw384_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw384_init

Loops scheduled for transform for sph_bmw384_init:- 

sph_bmw512(): Transformed branch between while.end.i and bmw64.exit in the forward direction
sph_bmw512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>
. Latch: if.end11.i, Exiting block: if.end11.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Direct branch from while.end.i needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 102 for sph_bmw512 has been optimized for entry cost!
Storing cost of sph_bmw512() : 102

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_bmw512

Loops scheduled for transform for sph_bmw512:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc



sph_bmw512(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_bmw512() )

sph_bmw512(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then10.i,%if.end11.i<latch><exiting>,%while.body.iDirectSucc

Direct branch from entry needs to be instrumented
Func cost 3753 for sph_bmw512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_bmw512_addbits_and_close() : 3753

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw512_addbits_and_close

Loops scheduled for transform for sph_bmw512_addbits_and_close:- 

Direct branch from entry needs to be instrumented
Func cost 3751 for sph_bmw512_close has been optimized for entry cost!
Storing cost of sph_bmw512_close() : 3751

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw512_close

Loops scheduled for transform for sph_bmw512_close:- 

Func cost 109 for sph_bmw512_init has been optimized for entry cost!
Storing cost of sph_bmw512_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_bmw512_init

Loops scheduled for transform for sph_bmw512_init:- 

Total functions: 18, uninstrumented functions: 6
Optimized 18 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_bmw.o `test -f 'sha3/cpuminer-sph_bmw.ll' || echo './'`sha3/cpuminer-sph_bmw.ll
mv -f sha3/.deps/cpuminer-sph_bmw.Tpo sha3/.deps/cpuminer-sph_bmw.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_jh.ll -MD -MP -MF sha3/.deps/cpuminer-sph_jh.Tpo -c -o sha3/llvm_cpuminer-sph_jh.ll `test -f 'sha3/sph_jh.c' || echo './'`sha3/sph_jh.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_jh.c:36:
In file included from sha3/sph_jh.h:44:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_jh.ll > sha3/opt_cpuminer-sph_jh.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_jh.ll > sha3/cpuminer-sph_jh.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: jh_core
Function: sph_jh224
Function: sph_jh224_addbits_and_close
Function: sph_jh224_close
Function: sph_jh224_init
Function: sph_jh256
Function: sph_jh256_addbits_and_close
Function: sph_jh256_close
Function: sph_jh256_init
Function: sph_jh384
Function: sph_jh384_addbits_and_close
Function: sph_jh384_close
Function: sph_jh384_init
Function: sph_jh512
Function: sph_jh512_addbits_and_close
Function: sph_jh512_close
Function: sph_jh512_init
jh_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%if.then59,%if.end8163<latch><exiting>
. Latch: if.end8163, Exiting block: if.end8163
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body
Func cost 90 for jh_core has been optimized for entry cost!
Storing cost of jh_core() : 90

Instrumenting loops (self loop count: 0, sese loop count: 1) for function jh_core

Loops scheduled for transform for jh_core:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%if.then59,%if.end8163<latch><exiting>,%while.bodyDirectSucc



jh_core(): Max depth loop Loop at depth 1 containing: %while.body<header>,%if.then59,%if.end8163<latch><exiting>,%while.bodyDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body( jh_core() )

jh_core(): Transformed loop Loop at depth 1 containing: %while.body<header>,%if.then59,%if.end8163<latch><exiting>,%while.bodyDirectSucc

Func cost 93 for sph_jh224 has been optimized for entry cost!
Storing cost of sph_jh224() : 93

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh224

Loops scheduled for transform for sph_jh224:- 

Func cost 738 for sph_jh224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_jh224_addbits_and_close() : 738

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh224_addbits_and_close

Loops scheduled for transform for sph_jh224_addbits_and_close:- 

Func cost 729 for sph_jh224_close has been optimized for entry cost!
Storing cost of sph_jh224_close() : 729

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh224_close

Loops scheduled for transform for sph_jh224_close:- 

Func cost 109 for sph_jh224_init has been optimized for entry cost!
Storing cost of sph_jh224_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh224_init

Loops scheduled for transform for sph_jh224_init:- 

Func cost 93 for sph_jh256 has been optimized for entry cost!
Storing cost of sph_jh256() : 93

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh256

Loops scheduled for transform for sph_jh256:- 

Func cost 738 for sph_jh256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_jh256_addbits_and_close() : 738

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh256_addbits_and_close

Loops scheduled for transform for sph_jh256_addbits_and_close:- 

Func cost 729 for sph_jh256_close has been optimized for entry cost!
Storing cost of sph_jh256_close() : 729

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh256_close

Loops scheduled for transform for sph_jh256_close:- 

Func cost 109 for sph_jh256_init has been optimized for entry cost!
Storing cost of sph_jh256_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh256_init

Loops scheduled for transform for sph_jh256_init:- 

Func cost 93 for sph_jh384 has been optimized for entry cost!
Storing cost of sph_jh384() : 93

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh384

Loops scheduled for transform for sph_jh384:- 

Func cost 738 for sph_jh384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_jh384_addbits_and_close() : 738

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh384_addbits_and_close

Loops scheduled for transform for sph_jh384_addbits_and_close:- 

Func cost 729 for sph_jh384_close has been optimized for entry cost!
Storing cost of sph_jh384_close() : 729

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh384_close

Loops scheduled for transform for sph_jh384_close:- 

Func cost 109 for sph_jh384_init has been optimized for entry cost!
Storing cost of sph_jh384_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh384_init

Loops scheduled for transform for sph_jh384_init:- 

Func cost 93 for sph_jh512 has been optimized for entry cost!
Storing cost of sph_jh512() : 93

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh512

Loops scheduled for transform for sph_jh512:- 

Func cost 636 for sph_jh512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_jh512_addbits_and_close() : 636

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh512_addbits_and_close

Loops scheduled for transform for sph_jh512_addbits_and_close:- 

Func cost 627 for sph_jh512_close has been optimized for entry cost!
Storing cost of sph_jh512_close() : 627

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh512_close

Loops scheduled for transform for sph_jh512_close:- 

Func cost 109 for sph_jh512_init has been optimized for entry cost!
Storing cost of sph_jh512_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_jh512_init

Loops scheduled for transform for sph_jh512_init:- 

Total functions: 17, uninstrumented functions: 16
Optimized 17 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_jh.o `test -f 'sha3/cpuminer-sph_jh.ll' || echo './'`sha3/cpuminer-sph_jh.ll
mv -f sha3/.deps/cpuminer-sph_jh.Tpo sha3/.deps/cpuminer-sph_jh.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_shavite.ll -MD -MP -MF sha3/.deps/cpuminer-sph_shavite.Tpo -c -o sha3/llvm_cpuminer-sph_shavite.ll `test -f 'sha3/sph_shavite.c' || echo './'`sha3/sph_shavite.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_shavite.c:36:
In file included from sha3/sph_shavite.h:42:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_shavite.ll > sha3/opt_cpuminer-sph_shavite.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_shavite.ll > sha3/cpuminer-sph_shavite.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: c256
Function: c512
Function: sph_shavite224
Function: sph_shavite224_addbits_and_close
Function: sph_shavite224_close
Function: sph_shavite224_init
Function: sph_shavite256
Function: sph_shavite256_addbits_and_close
Function: sph_shavite256_close
Function: sph_shavite256_init
Function: sph_shavite384
Function: sph_shavite384_addbits_and_close
Function: sph_shavite384_close
Function: sph_shavite384_init
Function: sph_shavite512
Function: sph_shavite512_addbits_and_close
Function: sph_shavite512_close
Function: sph_shavite512_init
Func cost 782 for c256 has been optimized for entry cost!
Storing cost of c256() : 782

Instrumenting loops (self loop count: 0, sese loop count: 0) for function c256

Loops scheduled for transform for c256:- 

c512(): Checking if simple for Loop Loop at depth 1 containing: %for.cond<header><exiting>,%if.then,%if.end,%if.then1093,%if.end1103,%if.then2213,%if.end2223<latch>
. Latch: if.end2223, Exiting block: for.cond
c512(): Checking if simple for Loop Loop at depth 1 containing: %for.cond<header><exiting>,%if.then,%if.end,%if.then1093,%if.end1103,%if.then2213,%if.end2223<latch>
. Latch: if.end2223, Exiting block: for.cond
c512(): Checking if simple for Loop Loop at depth 1 containing: %for.cond<header><exiting>,%if.then,%if.end,%if.then1093,%if.end1103,%if.then2213,%if.end2223<latch>
. Latch: if.end2223, Exiting block: for.cond
Func cost 844 for c512 has been optimized for entry cost!
Func cost 1370 for c512 has been optimized for exit cost!
Storing cost of c512() : 2214

Instrumenting loops (self loop count: 0, sese loop count: 0) for function c512

Loops scheduled for transform for c512:- 


c512(): Max depth loop Loop at depth 1 containing: %for.cond<header><exiting>,%if.then,%if.end,%if.then1093,%if.end1103,%if.then2213,%if.end2223<latch>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.cond

c512(): Transformed loop Loop at depth 1 containing: %for.cond<header><exiting>,%if.then,%if.end,%if.then1093,%if.end1103,%if.then2213,%if.end2223<latch>

sph_shavite224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>
. Latch: if.end15.i, Exiting block: if.end15.i
sph_shavite224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>
. Latch: if.end15.i, Exiting block: if.end15.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 11 for sph_shavite224 has been optimized for entry cost!
Storing cost of sph_shavite224() : 11

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_shavite224

Loops scheduled for transform for sph_shavite224:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>,%while.body.iDirectSucc



sph_shavite224(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_shavite224() )

sph_shavite224(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>,%while.body.iDirectSucc

sph_shavite224_addbits_and_close(): Transformed branch between if.else.i and if.end30.i in the forward direction
Func cost 940 for sph_shavite224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_shavite224_addbits_and_close() : 940

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite224_addbits_and_close

Loops scheduled for transform for sph_shavite224_addbits_and_close:- 

sph_shavite224_close(): Transformed branch between if.else.i and if.end30.i in the forward direction
Func cost 940 for sph_shavite224_close has been optimized for entry cost!
Storing cost of sph_shavite224_close() : 940

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite224_close

Loops scheduled for transform for sph_shavite224_close:- 

Func cost 112 for sph_shavite224_init has been optimized for entry cost!
Storing cost of sph_shavite224_init() : 112

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite224_init

Loops scheduled for transform for sph_shavite224_init:- 

sph_shavite256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>
. Latch: if.end15.i, Exiting block: if.end15.i
sph_shavite256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>
. Latch: if.end15.i, Exiting block: if.end15.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 11 for sph_shavite256 has been optimized for entry cost!
Storing cost of sph_shavite256() : 11

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_shavite256

Loops scheduled for transform for sph_shavite256:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>,%while.body.iDirectSucc



sph_shavite256(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_shavite256() )

sph_shavite256(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.end14.i,%if.end15.i<latch><exiting>,%while.body.iDirectSucc

sph_shavite256_addbits_and_close(): Transformed branch between if.else.i and if.end30.i in the forward direction
Func cost 946 for sph_shavite256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_shavite256_addbits_and_close() : 946

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite256_addbits_and_close

Loops scheduled for transform for sph_shavite256_addbits_and_close:- 

sph_shavite256_close(): Transformed branch between if.else.i and if.end30.i in the forward direction
Func cost 946 for sph_shavite256_close has been optimized for entry cost!
Storing cost of sph_shavite256_close() : 946

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite256_close

Loops scheduled for transform for sph_shavite256_close:- 

Func cost 112 for sph_shavite256_init has been optimized for entry cost!
Storing cost of sph_shavite256_init() : 112

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite256_init

Loops scheduled for transform for sph_shavite256_init:- 

sph_shavite384(): Transformed branch between if.then11.i and if.end26.i in the forward direction
sph_shavite384(): Transformed branch between if.then16.i and if.end26.i_dummy in the forward direction
sph_shavite384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy
. Latch: if.end27.i, Exiting block: if.end27.i
sph_shavite384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy
. Latch: if.end27.i, Exiting block: if.end27.i
sph_shavite384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy
. Latch: if.end27.i, Exiting block: if.end27.i
sph_shavite384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy
. Latch: if.end27.i, Exiting block: if.end27.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 14 for sph_shavite384 has been optimized for entry cost!
Storing cost of sph_shavite384() : 14

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_shavite384

Loops scheduled for transform for sph_shavite384:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy,%while.body.iDirectSucc



sph_shavite384(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_shavite384() )

sph_shavite384(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy,%while.body.iDirectSucc

sph_shavite384_addbits_and_close(): Transformed branch between if.else.i and if.end36.i in the forward direction
Func cost 2507 for sph_shavite384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_shavite384_addbits_and_close() : 2507

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite384_addbits_and_close

Loops scheduled for transform for sph_shavite384_addbits_and_close:- 

sph_shavite384_close(): Transformed branch between if.else.i and if.end36.i in the forward direction
Func cost 2507 for sph_shavite384_close has been optimized for entry cost!
Storing cost of sph_shavite384_close() : 2507

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite384_close

Loops scheduled for transform for sph_shavite384_close:- 

Func cost 208 for sph_shavite384_init has been optimized for entry cost!
Storing cost of sph_shavite384_init() : 208

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite384_init

Loops scheduled for transform for sph_shavite384_init:- 

sph_shavite512(): Transformed branch between if.then11.i and if.end26.i in the forward direction
sph_shavite512(): Transformed branch between if.then16.i and if.end26.i_dummy in the forward direction
sph_shavite512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy
. Latch: if.end27.i, Exiting block: if.end27.i
sph_shavite512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy
. Latch: if.end27.i, Exiting block: if.end27.i
sph_shavite512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy
. Latch: if.end27.i, Exiting block: if.end27.i
sph_shavite512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy
. Latch: if.end27.i, Exiting block: if.end27.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 14 for sph_shavite512 has been optimized for entry cost!
Storing cost of sph_shavite512() : 14

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_shavite512

Loops scheduled for transform for sph_shavite512:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy,%while.body.iDirectSucc



sph_shavite512(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_shavite512() )

sph_shavite512(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then11.i,%if.then16.i,%if.then21.i,%if.end26.i,%if.end27.i<latch><exiting>,%if.end26.i_dummy,%if.end26.i_dummy_dummy,%while.body.iDirectSucc

sph_shavite512_addbits_and_close(): Transformed branch between if.else.i and if.end36.i in the forward direction
Func cost 2531 for sph_shavite512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_shavite512_addbits_and_close() : 2531

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite512_addbits_and_close

Loops scheduled for transform for sph_shavite512_addbits_and_close:- 

sph_shavite512_close(): Transformed branch between if.else.i and if.end36.i in the forward direction
Func cost 2531 for sph_shavite512_close has been optimized for entry cost!
Storing cost of sph_shavite512_close() : 2531

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite512_close

Loops scheduled for transform for sph_shavite512_close:- 

Func cost 208 for sph_shavite512_init has been optimized for entry cost!
Storing cost of sph_shavite512_init() : 208

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shavite512_init

Loops scheduled for transform for sph_shavite512_init:- 

Total functions: 18, uninstrumented functions: 4
Optimized 19 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_shavite.o `test -f 'sha3/cpuminer-sph_shavite.ll' || echo './'`sha3/cpuminer-sph_shavite.ll
mv -f sha3/.deps/cpuminer-sph_shavite.Tpo sha3/.deps/cpuminer-sph_shavite.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_blake.ll -MD -MP -MF sha3/.deps/cpuminer-sph_blake.Tpo -c -o sha3/llvm_cpuminer-sph_blake.ll `test -f 'sha3/sph_blake.c' || echo './'`sha3/sph_blake.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_blake.c:37:
In file included from sha3/sph_blake.h:45:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_blake.ll > sha3/opt_cpuminer-sph_blake.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_blake.ll > sha3/cpuminer-sph_blake.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blake32
Function: blake32_close
Function: blake64
Function: blake64_close
Function: sph_blake224
Function: sph_blake224_addbits_and_close
Function: sph_blake224_close
Function: sph_blake224_init
Function: sph_blake256
Function: sph_blake256_addbits_and_close
Function: sph_blake256_close
Function: sph_blake256_init
Function: sph_blake384
Function: sph_blake384_addbits_and_close
Function: sph_blake384_close
Function: sph_blake384_init
Function: sph_blake512
Function: sph_blake512_addbits_and_close
Function: sph_blake512_close
Function: sph_blake512_init
blake32(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end3609<latch><exiting>
. Latch: if.end3609, Exiting block: if.end3609
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body
Func cost 84 for blake32 has been optimized for entry cost!
Storing cost of blake32() : 84

Instrumenting loops (self loop count: 0, sese loop count: 1) for function blake32

Loops scheduled for transform for blake32:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end3609<latch><exiting>,%while.bodyDirectSucc



blake32(): Max depth loop Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end3609<latch><exiting>,%while.bodyDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body( blake32() )

blake32(): Transformed loop Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end3609<latch><exiting>,%while.bodyDirectSucc

blake32_close(): Transformed branch between if.else and if.end23 in the forward direction
blake32_close(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (ARG: 4) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 9, preheader cost: 3
Self loop will be transformed, & body cost is 9 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 105 for blake32_close has been optimized for entry cost!
Storing cost of blake32_close() : 105

Instrumenting loops (self loop count: 1, sese loop count: 0) for function blake32_close

Loops scheduled for transform for blake32_close:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



blake32_close(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( blake32_close() ). Self Loop cost: 9. Iterations: 444
Self loop is canonical. Going for special transformation with 444 iterations.
Attempting to transform self loop for.body of blake32_close with 444 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %k.0126 = phi i64 [ %inc, %selfLoopOptExitBlock ], [ 0, %for.body.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %20 = add i64 444, %k.0126
Applied self loop transform on for.body( blake32_close() )

blake32_close(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

blake64(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end4109<latch><exiting>
. Latch: if.end4109, Exiting block: if.end4109
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body
Func cost 93 for blake64 has been optimized for entry cost!
Storing cost of blake64() : 93

Instrumenting loops (self loop count: 0, sese loop count: 1) for function blake64

Loops scheduled for transform for blake64:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end4109<latch><exiting>,%while.bodyDirectSucc



blake64(): Max depth loop Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end4109<latch><exiting>,%while.bodyDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body( blake64() )

blake64(): Transformed loop Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end4109<latch><exiting>,%while.bodyDirectSucc

blake64_close(): Transformed branch between if.else and if.end26 in the forward direction
blake64_close(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (ARG: 4) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 9, preheader cost: 3
Self loop will be transformed, & body cost is 9 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 105 for blake64_close has been optimized for entry cost!
Storing cost of blake64_close() : 105

Instrumenting loops (self loop count: 1, sese loop count: 0) for function blake64_close

Loops scheduled for transform for blake64_close:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



blake64_close(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( blake64_close() ). Self Loop cost: 9. Iterations: 444
Self loop is canonical. Going for special transformation with 444 iterations.
Attempting to transform self loop for.body of blake64_close with 444 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %k.0128 = phi i64 [ %inc, %selfLoopOptExitBlock ], [ 0, %for.body.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %22 = add i64 444, %k.0128
Applied self loop transform on for.body( blake64_close() )

blake64_close(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

Func cost 87 for sph_blake224 has been optimized for entry cost!
Storing cost of sph_blake224() : 87

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake224

Loops scheduled for transform for sph_blake224:- 

Func cost 315 for sph_blake224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_blake224_addbits_and_close() : 315

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake224_addbits_and_close

Loops scheduled for transform for sph_blake224_addbits_and_close:- 

Func cost 315 for sph_blake224_close has been optimized for entry cost!
Storing cost of sph_blake224_close() : 315

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake224_close

Loops scheduled for transform for sph_blake224_close:- 

Func cost 208 for sph_blake224_init has been optimized for entry cost!
Storing cost of sph_blake224_init() : 208

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake224_init

Loops scheduled for transform for sph_blake224_init:- 

Func cost 87 for sph_blake256 has been optimized for entry cost!
Storing cost of sph_blake256() : 87

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake256

Loops scheduled for transform for sph_blake256:- 

Func cost 315 for sph_blake256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_blake256_addbits_and_close() : 315

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake256_addbits_and_close

Loops scheduled for transform for sph_blake256_addbits_and_close:- 

Func cost 315 for sph_blake256_close has been optimized for entry cost!
Storing cost of sph_blake256_close() : 315

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake256_close

Loops scheduled for transform for sph_blake256_close:- 

Func cost 208 for sph_blake256_init has been optimized for entry cost!
Storing cost of sph_blake256_init() : 208

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake256_init

Loops scheduled for transform for sph_blake256_init:- 

Func cost 96 for sph_blake384 has been optimized for entry cost!
Storing cost of sph_blake384() : 96

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake384

Loops scheduled for transform for sph_blake384:- 

Func cost 315 for sph_blake384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_blake384_addbits_and_close() : 315

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake384_addbits_and_close

Loops scheduled for transform for sph_blake384_addbits_and_close:- 

Func cost 315 for sph_blake384_close has been optimized for entry cost!
Storing cost of sph_blake384_close() : 315

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake384_close

Loops scheduled for transform for sph_blake384_close:- 

Func cost 208 for sph_blake384_init has been optimized for entry cost!
Storing cost of sph_blake384_init() : 208

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake384_init

Loops scheduled for transform for sph_blake384_init:- 

Func cost 96 for sph_blake512 has been optimized for entry cost!
Storing cost of sph_blake512() : 96

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake512

Loops scheduled for transform for sph_blake512:- 

Func cost 315 for sph_blake512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_blake512_addbits_and_close() : 315

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake512_addbits_and_close

Loops scheduled for transform for sph_blake512_addbits_and_close:- 

Func cost 315 for sph_blake512_close has been optimized for entry cost!
Storing cost of sph_blake512_close() : 315

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake512_close

Loops scheduled for transform for sph_blake512_close:- 

Func cost 208 for sph_blake512_init has been optimized for entry cost!
Storing cost of sph_blake512_init() : 208

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_blake512_init

Loops scheduled for transform for sph_blake512_init:- 

Total functions: 20, uninstrumented functions: 16
Optimized 20 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_blake.o `test -f 'sha3/cpuminer-sph_blake.ll' || echo './'`sha3/cpuminer-sph_blake.ll
mv -f sha3/.deps/cpuminer-sph_blake.Tpo sha3/.deps/cpuminer-sph_blake.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-mod_blakecoin.ll -MD -MP -MF sha3/.deps/cpuminer-mod_blakecoin.Tpo -c -o sha3/llvm_cpuminer-mod_blakecoin.ll `test -f 'sha3/mod_blakecoin.c' || echo './'`sha3/mod_blakecoin.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/mod_blakecoin.c:38:
In file included from sha3/sph_blake.h:45:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-mod_blakecoin.ll > sha3/opt_cpuminer-mod_blakecoin.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-mod_blakecoin.ll > sha3/cpuminer-mod_blakecoin.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blake32
Function: blakecoin
Function: blakecoin_close
Function: blakecoin_init
blake32(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end2109<latch><exiting>
. Latch: if.end2109, Exiting block: if.end2109
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body
Func cost 84 for blake32 has been optimized for entry cost!
Storing cost of blake32() : 84

Instrumenting loops (self loop count: 0, sese loop count: 1) for function blake32

Loops scheduled for transform for blake32:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end2109<latch><exiting>,%while.bodyDirectSucc



blake32(): Max depth loop Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end2109<latch><exiting>,%while.bodyDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body( blake32() )

blake32(): Transformed loop Loop at depth 1 containing: %while.body<header>,%if.then41,%if.end2109<latch><exiting>,%while.bodyDirectSucc

Func cost 87 for blakecoin has been optimized for entry cost!
Storing cost of blakecoin() : 87

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blakecoin

Loops scheduled for transform for blakecoin:- 

blakecoin_close(): Transformed branch between if.else.i.i and if.end23.i.i in the forward direction
Func cost 353 for blakecoin_close has been optimized for entry cost!
Storing cost of blakecoin_close() : 353

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blakecoin_close

Loops scheduled for transform for blakecoin_close:- 

Func cost 208 for blakecoin_init has been optimized for entry cost!
Storing cost of blakecoin_init() : 208

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blakecoin_init

Loops scheduled for transform for blakecoin_init:- 

Total functions: 4, uninstrumented functions: 2
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-mod_blakecoin.o `test -f 'sha3/cpuminer-mod_blakecoin.ll' || echo './'`sha3/cpuminer-mod_blakecoin.ll
mv -f sha3/.deps/cpuminer-mod_blakecoin.Tpo sha3/.deps/cpuminer-mod_blakecoin.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_luffa.ll -MD -MP -MF sha3/.deps/cpuminer-sph_luffa.Tpo -c -o sha3/llvm_cpuminer-sph_luffa.ll `test -f 'sha3/sph_luffa.c' || echo './'`sha3/sph_luffa.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_luffa.c:37:
In file included from sha3/sph_luffa.h:44:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_luffa.ll > sha3/opt_cpuminer-sph_luffa.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_luffa.ll > sha3/cpuminer-sph_luffa.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: luffa3
Function: luffa3_close
Function: sph_luffa224
Function: sph_luffa224_addbits_and_close
Function: sph_luffa224_close
Function: sph_luffa224_init
Function: sph_luffa256
Function: sph_luffa256_addbits_and_close
Function: sph_luffa256_close
Function: sph_luffa256_init
Function: sph_luffa384
Function: sph_luffa384_addbits_and_close
Function: sph_luffa384_close
Function: sph_luffa384_init
Function: sph_luffa512
Function: sph_luffa512_addbits_and_close
Function: sph_luffa512_close
Function: sph_luffa512_init
luffa3(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body99,%do.body282,%for.end,%do.body555,%if.end680.loopexit,%if.end680<latch><exiting>
    Loop at depth 2 containing: %do.body282<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>
. Latch: if.end680, Exiting block: if.end680
luffa3(): Checking if simple for Loop Loop at depth 2 containing: %do.body282<header><latch><exiting>
. Latch: do.body282, Exiting block: do.body282
luffa3(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body99,%do.body282,%for.end,%do.body555,%if.end680.loopexit,%if.end680<latch><exiting>
    Loop at depth 2 containing: %do.body282<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>
. Latch: if.end680, Exiting block: if.end680
luffa3(): Checking if simple for Loop Loop at depth 2 containing: %do.body555<header><latch><exiting>
. Latch: do.body555, Exiting block: do.body555
luffa3(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body99,%do.body282,%for.end,%do.body555,%if.end680.loopexit,%if.end680<latch><exiting>
    Loop at depth 2 containing: %do.body282<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>
. Latch: if.end680, Exiting block: if.end680
Has backedges: 7 (numCost: 7)
Has backedges: 7 (numCost: 7)
Self loop:- #backedges: 8, body cost: 219, preheader cost: 231
Self loop:- loop & preheader cost 1983 will be instrumented in post loop exit
Self loop:- #backedges: 8, body cost: 103, preheader cost: 2002
Self loop:- loop & preheader cost 2826 will be instrumented in post loop exit
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body
Func cost 101 for luffa3 has been optimized for entry cost!
Storing cost of luffa3() : 101

Instrumenting loops (self loop count: 0, sese loop count: 1) for function luffa3

Loops scheduled for transform for luffa3:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%do.body99,%do.body282,%for.end,%do.body555,%if.end680.loopexit,%if.end680<latch><exiting>,%while.bodyDirectSucc
    Loop at depth 2 containing: %do.body282<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>



luffa3(): Self loop Loop at depth 2 containing: %do.body555<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body555

luffa3(): Transformed Self loop Loop at depth 2 containing: %do.body555<header><latch><exiting>


luffa3(): Self loop Loop at depth 2 containing: %do.body282<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body282

luffa3(): Transformed Self loop Loop at depth 2 containing: %do.body282<header><latch><exiting>


luffa3(): Max depth loop Loop at depth 1 containing: %while.body<header>,%do.body99,%do.body282,%for.end,%do.body555,%if.end680.loopexit,%if.end680<latch><exiting>,%while.bodyDirectSucc
    Loop at depth 2 containing: %do.body282<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body( luffa3() )

luffa3(): Transformed loop Loop at depth 1 containing: %while.body<header>,%do.body99,%do.body282,%for.end,%do.body555,%if.end680.loopexit,%if.end680<latch><exiting>,%while.bodyDirectSucc
    Loop at depth 2 containing: %do.body282<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>

luffa3_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body92<header>,%do.body280,%for.end,%do.body555,%for.end677<latch><exiting>
    Loop at depth 2 containing: %do.body280<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>
. Latch: for.end677, Exiting block: for.end677
luffa3_close(): Checking if simple for Loop Loop at depth 2 containing: %do.body280<header><latch><exiting>
. Latch: do.body280, Exiting block: do.body280
luffa3_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body92<header>,%do.body280,%for.end,%do.body555,%for.end677<latch><exiting>
    Loop at depth 2 containing: %do.body280<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>
. Latch: for.end677, Exiting block: for.end677
luffa3_close(): Checking if simple for Loop Loop at depth 2 containing: %do.body555<header><latch><exiting>
. Latch: do.body555, Exiting block: do.body555
luffa3_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body92<header>,%do.body280,%for.end,%do.body555,%for.end677<latch><exiting>
    Loop at depth 2 containing: %do.body280<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>
. Latch: for.end677, Exiting block: for.end677
Has backedges: 1 (numCost: 1)
Has backedges: 7 (numCost: 7)
Has backedges: 7 (numCost: 7)
Self loop:- #backedges: 8, body cost: 219, preheader cost: 121
Self loop:- loop & preheader cost 1873 will be instrumented in post loop exit
Self loop:- #backedges: 8, body cost: 103, preheader cost: 1892
Self loop:- loop & preheader cost 2716 will be instrumented in post loop exit
Instrumenting loop with body cost: 2824
Non-header-colocated-exit loop will be transformed, & body cost is 2824 for loop with header do.body92
Func cost 223 for luffa3_close has been optimized for entry cost!
Storing cost of luffa3_close() : 223

Instrumenting loops (self loop count: 0, sese loop count: 1) for function luffa3_close

Loops scheduled for transform for luffa3_close:- 
Sese Loop: Loop at depth 1 containing: %do.body92<header>,%do.body280,%for.end,%do.body555,%for.end677<latch><exiting>
    Loop at depth 2 containing: %do.body280<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>



luffa3_close(): Self loop Loop at depth 2 containing: %do.body555<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body555

luffa3_close(): Transformed Self loop Loop at depth 2 containing: %do.body555<header><latch><exiting>


luffa3_close(): Self loop Loop at depth 2 containing: %do.body280<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body280

luffa3_close(): Transformed Self loop Loop at depth 2 containing: %do.body280<header><latch><exiting>


luffa3_close(): Max depth loop Loop at depth 1 containing: %do.body92<header>,%do.body280,%for.end,%do.body555,%for.end677<latch><exiting>
    Loop at depth 2 containing: %do.body280<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>


This seseloop will not be transformed because of too low iteration count --> do.body92( luffa3_close() ). SESE Loop cost: 2824. Iterations: 1

luffa3_close(): Transformed loop Loop at depth 1 containing: %do.body92<header>,%do.body280,%for.end,%do.body555,%for.end677<latch><exiting>
    Loop at depth 2 containing: %do.body280<header><latch><exiting>
    Loop at depth 2 containing: %do.body555<header><latch><exiting>

Func cost 104 for sph_luffa224 has been optimized for entry cost!
Storing cost of sph_luffa224() : 104

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa224

Loops scheduled for transform for sph_luffa224:- 

Func cost 331 for sph_luffa224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_luffa224_addbits_and_close() : 331

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa224_addbits_and_close

Loops scheduled for transform for sph_luffa224_addbits_and_close:- 

Func cost 331 for sph_luffa224_close has been optimized for entry cost!
Storing cost of sph_luffa224_close() : 331

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa224_close

Loops scheduled for transform for sph_luffa224_close:- 

Func cost 106 for sph_luffa224_init has been optimized for entry cost!
Storing cost of sph_luffa224_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa224_init

Loops scheduled for transform for sph_luffa224_init:- 

Func cost 104 for sph_luffa256 has been optimized for entry cost!
Storing cost of sph_luffa256() : 104

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa256

Loops scheduled for transform for sph_luffa256:- 

Func cost 331 for sph_luffa256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_luffa256_addbits_and_close() : 331

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa256_addbits_and_close

Loops scheduled for transform for sph_luffa256_addbits_and_close:- 

Func cost 331 for sph_luffa256_close has been optimized for entry cost!
Storing cost of sph_luffa256_close() : 331

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa256_close

Loops scheduled for transform for sph_luffa256_close:- 

Func cost 106 for sph_luffa256_init has been optimized for entry cost!
Storing cost of sph_luffa256_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa256_init

Loops scheduled for transform for sph_luffa256_init:- 

sph_luffa384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body130.i,%do.body437.i,%for.end.i,%do.body742.i,%for.end996.i,%if.end1023.i<latch><exiting>
    Loop at depth 2 containing: %do.body437.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>
. Latch: if.end1023.i, Exiting block: if.end1023.i
sph_luffa384(): Checking if simple for Loop Loop at depth 2 containing: %do.body437.i<header><latch><exiting>
. Latch: do.body437.i, Exiting block: do.body437.i
sph_luffa384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body130.i,%do.body437.i,%for.end.i,%do.body742.i,%for.end996.i,%if.end1023.i<latch><exiting>
    Loop at depth 2 containing: %do.body437.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>
. Latch: if.end1023.i, Exiting block: if.end1023.i
sph_luffa384(): Checking if simple for Loop Loop at depth 2 containing: %do.body742.i<header><latch><exiting>
. Latch: do.body742.i, Exiting block: do.body742.i
sph_luffa384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body130.i,%do.body437.i,%for.end.i,%do.body742.i,%for.end996.i,%if.end1023.i<latch><exiting>
    Loop at depth 2 containing: %do.body437.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>
. Latch: if.end1023.i, Exiting block: if.end1023.i
Has backedges: 7 (numCost: 7)
Has backedges: 7 (numCost: 7)
Self loop:- #backedges: 8, body cost: 219, preheader cost: 283
Self loop:- loop & preheader cost 2035 will be instrumented in post loop exit
Self loop:- #backedges: 8, body cost: 183, preheader cost: 2116
Self loop:- loop & preheader cost 3580 will be instrumented in post loop exit
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 131 for sph_luffa384 has been optimized for entry cost!
Storing cost of sph_luffa384() : 131

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_luffa384

Loops scheduled for transform for sph_luffa384:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%do.body130.i,%do.body437.i,%for.end.i,%do.body742.i,%for.end996.i,%if.end1023.i<latch><exiting>,%while.body.iDirectSucc
    Loop at depth 2 containing: %do.body437.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>



sph_luffa384(): Self loop Loop at depth 2 containing: %do.body742.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body742.i

sph_luffa384(): Transformed Self loop Loop at depth 2 containing: %do.body742.i<header><latch><exiting>


sph_luffa384(): Self loop Loop at depth 2 containing: %do.body437.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body437.i

sph_luffa384(): Transformed Self loop Loop at depth 2 containing: %do.body437.i<header><latch><exiting>


sph_luffa384(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%do.body130.i,%do.body437.i,%for.end.i,%do.body742.i,%for.end996.i,%if.end1023.i<latch><exiting>,%while.body.iDirectSucc
    Loop at depth 2 containing: %do.body437.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_luffa384() )

sph_luffa384(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%do.body130.i,%do.body437.i,%for.end.i,%do.body742.i,%for.end996.i,%if.end1023.i<latch><exiting>,%while.body.iDirectSucc
    Loop at depth 2 containing: %do.body437.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>

sph_luffa384_addbits_and_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body123.i<header>,%do.body435.i,%for.end.i,%do.body742.i,%for.end996.i<exiting>,%sw.bb1023.i,%sw.bb.i,%for.inc1073.i<latch>
    Loop at depth 2 containing: %do.body435.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>
. Latch: for.inc1073.i, Exiting block: for.end996.i
sph_luffa384_addbits_and_close(): Checking if simple for Loop Loop at depth 2 containing: %do.body435.i<header><latch><exiting>
. Latch: do.body435.i, Exiting block: do.body435.i
sph_luffa384_addbits_and_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body123.i<header>,%do.body435.i,%for.end.i,%do.body742.i,%for.end996.i<exiting>,%sw.bb1023.i,%sw.bb.i,%for.inc1073.i<latch>
    Loop at depth 2 containing: %do.body435.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>
. Latch: for.inc1073.i, Exiting block: for.end996.i
sph_luffa384_addbits_and_close(): Checking if simple for Loop Loop at depth 2 containing: %do.body742.i<header><latch><exiting>
. Latch: do.body742.i, Exiting block: do.body742.i
sph_luffa384_addbits_and_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body123.i<header>,%do.body435.i,%for.end.i,%do.body742.i,%for.end996.i<exiting>,%sw.bb1023.i,%sw.bb.i,%for.inc1073.i<latch>
    Loop at depth 2 containing: %do.body435.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>
. Latch: for.inc1073.i, Exiting block: for.end996.i
Func cost 244 for sph_luffa384_addbits_and_close has been optimized for entry cost!
Has backedges: 7 (numCost: 7)
Has backedges: 7 (numCost: 7)
Self loop:- #backedges: 8, body cost: 219, preheader cost: 173
Self loop:- loop & preheader cost 1925 will be instrumented in post loop exit
Self loop:- #backedges: 8, body cost: 183, preheader cost: 2006
Self loop:- loop & preheader cost 3470 will be instrumented in post loop exit
Func cost 130 for sph_luffa384_addbits_and_close has been optimized for exit cost!
Storing cost of sph_luffa384_addbits_and_close() : 374

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa384_addbits_and_close

Loops scheduled for transform for sph_luffa384_addbits_and_close:- 


sph_luffa384_addbits_and_close(): Self loop Loop at depth 2 containing: %do.body742.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body742.i

sph_luffa384_addbits_and_close(): Transformed Self loop Loop at depth 2 containing: %do.body742.i<header><latch><exiting>


sph_luffa384_addbits_and_close(): Self loop Loop at depth 2 containing: %do.body435.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body435.i

sph_luffa384_addbits_and_close(): Transformed Self loop Loop at depth 2 containing: %do.body435.i<header><latch><exiting>


sph_luffa384_addbits_and_close(): Max depth loop Loop at depth 1 containing: %do.body123.i<header>,%do.body435.i,%for.end.i,%do.body742.i,%for.end996.i<exiting>,%sw.bb1023.i,%sw.bb.i,%for.inc1073.i<latch>
    Loop at depth 2 containing: %do.body435.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> do.body123.i

sph_luffa384_addbits_and_close(): Transformed loop Loop at depth 1 containing: %do.body123.i<header>,%do.body435.i,%for.end.i,%do.body742.i,%for.end996.i<exiting>,%sw.bb1023.i,%sw.bb.i,%for.inc1073.i<latch>
    Loop at depth 2 containing: %do.body435.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body742.i<header><latch><exiting>

Func cost 376 for sph_luffa384_close has been optimized for entry cost!
Storing cost of sph_luffa384_close() : 376

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa384_close

Loops scheduled for transform for sph_luffa384_close:- 

Func cost 106 for sph_luffa384_init has been optimized for entry cost!
Storing cost of sph_luffa384_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa384_init

Loops scheduled for transform for sph_luffa384_init:- 

sph_luffa512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body161.i,%do.body628.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%if.end1341.loopexit.i,%if.end1341.i<latch><exiting>
    Loop at depth 2 containing: %do.body628.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: if.end1341.i, Exiting block: if.end1341.i
sph_luffa512(): Checking if simple for Loop Loop at depth 2 containing: %do.body628.i<header><latch><exiting>
. Latch: do.body628.i, Exiting block: do.body628.i
sph_luffa512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body161.i,%do.body628.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%if.end1341.loopexit.i,%if.end1341.i<latch><exiting>
    Loop at depth 2 containing: %do.body628.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: if.end1341.i, Exiting block: if.end1341.i
sph_luffa512(): Checking if simple for Loop Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
. Latch: do.body933.i, Exiting block: do.body933.i
sph_luffa512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body161.i,%do.body628.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%if.end1341.loopexit.i,%if.end1341.i<latch><exiting>
    Loop at depth 2 containing: %do.body628.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: if.end1341.i, Exiting block: if.end1341.i
sph_luffa512(): Checking if simple for Loop Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: do.body1216.i, Exiting block: do.body1216.i
sph_luffa512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body161.i,%do.body628.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%if.end1341.loopexit.i,%if.end1341.i<latch><exiting>
    Loop at depth 2 containing: %do.body628.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: if.end1341.i, Exiting block: if.end1341.i
Has backedges: 7 (numCost: 7)
Has backedges: 7 (numCost: 7)
Has backedges: 7 (numCost: 7)
Self loop:- #backedges: 8, body cost: 219, preheader cost: 362
Self loop:- loop & preheader cost 2114 will be instrumented in post loop exit
Self loop:- #backedges: 8, body cost: 202, preheader cost: 2201
Self loop:- loop & preheader cost 3817 will be instrumented in post loop exit
Self loop:- #backedges: 8, body cost: 103, preheader cost: 3836
Self loop:- loop cost 824 will be instrumented in post loop exit
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 147 for sph_luffa512 has been optimized for entry cost!
Storing cost of sph_luffa512() : 147

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_luffa512

Loops scheduled for transform for sph_luffa512:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%do.body161.i,%do.body628.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%if.end1341.loopexit.i,%if.end1341.i<latch><exiting>,%while.body.iDirectSucc
    Loop at depth 2 containing: %do.body628.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>



sph_luffa512(): Self loop Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body1216.i

sph_luffa512(): Transformed Self loop Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>


sph_luffa512(): Self loop Loop at depth 2 containing: %do.body933.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body933.i

sph_luffa512(): Transformed Self loop Loop at depth 2 containing: %do.body933.i<header><latch><exiting>


sph_luffa512(): Self loop Loop at depth 2 containing: %do.body628.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body628.i

sph_luffa512(): Transformed Self loop Loop at depth 2 containing: %do.body628.i<header><latch><exiting>


sph_luffa512(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%do.body161.i,%do.body628.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%if.end1341.loopexit.i,%if.end1341.i<latch><exiting>,%while.body.iDirectSucc
    Loop at depth 2 containing: %do.body628.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_luffa512() )

sph_luffa512(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%do.body161.i,%do.body628.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%if.end1341.loopexit.i,%if.end1341.i<latch><exiting>,%while.body.iDirectSucc
    Loop at depth 2 containing: %do.body628.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>

sph_luffa512_addbits_and_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body154.i<header>,%do.body626.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%for.end1338.i<exiting>,%sw.bb1341.i,%sw.bb.i,%for.inc1423.i<latch>
    Loop at depth 2 containing: %do.body626.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: for.inc1423.i, Exiting block: for.end1338.i
sph_luffa512_addbits_and_close(): Checking if simple for Loop Loop at depth 2 containing: %do.body626.i<header><latch><exiting>
. Latch: do.body626.i, Exiting block: do.body626.i
sph_luffa512_addbits_and_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body154.i<header>,%do.body626.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%for.end1338.i<exiting>,%sw.bb1341.i,%sw.bb.i,%for.inc1423.i<latch>
    Loop at depth 2 containing: %do.body626.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: for.inc1423.i, Exiting block: for.end1338.i
sph_luffa512_addbits_and_close(): Checking if simple for Loop Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
. Latch: do.body933.i, Exiting block: do.body933.i
sph_luffa512_addbits_and_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body154.i<header>,%do.body626.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%for.end1338.i<exiting>,%sw.bb1341.i,%sw.bb.i,%for.inc1423.i<latch>
    Loop at depth 2 containing: %do.body626.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: for.inc1423.i, Exiting block: for.end1338.i
sph_luffa512_addbits_and_close(): Checking if simple for Loop Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: do.body1216.i, Exiting block: do.body1216.i
sph_luffa512_addbits_and_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body154.i<header>,%do.body626.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%for.end1338.i<exiting>,%sw.bb1341.i,%sw.bb.i,%for.inc1423.i<latch>
    Loop at depth 2 containing: %do.body626.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>
. Latch: for.inc1423.i, Exiting block: for.end1338.i
Func cost 270 for sph_luffa512_addbits_and_close has been optimized for entry cost!
Has backedges: 7 (numCost: 7)
Has backedges: 7 (numCost: 7)
Has backedges: 7 (numCost: 7)
Self loop:- #backedges: 8, body cost: 219, preheader cost: 253
Self loop:- loop & preheader cost 2005 will be instrumented in post loop exit
Self loop:- #backedges: 8, body cost: 202, preheader cost: 2092
Self loop:- loop & preheader cost 3708 will be instrumented in post loop exit
Self loop:- #backedges: 8, body cost: 103, preheader cost: 3726
Self loop:- loop cost 824 will be instrumented in post loop exit
Func cost 161 for sph_luffa512_addbits_and_close has been optimized for exit cost!
Storing cost of sph_luffa512_addbits_and_close() : 431

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa512_addbits_and_close

Loops scheduled for transform for sph_luffa512_addbits_and_close:- 


sph_luffa512_addbits_and_close(): Self loop Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body1216.i

sph_luffa512_addbits_and_close(): Transformed Self loop Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>


sph_luffa512_addbits_and_close(): Self loop Loop at depth 2 containing: %do.body933.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body933.i

sph_luffa512_addbits_and_close(): Transformed Self loop Loop at depth 2 containing: %do.body933.i<header><latch><exiting>


sph_luffa512_addbits_and_close(): Self loop Loop at depth 2 containing: %do.body626.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body626.i

sph_luffa512_addbits_and_close(): Transformed Self loop Loop at depth 2 containing: %do.body626.i<header><latch><exiting>


sph_luffa512_addbits_and_close(): Max depth loop Loop at depth 1 containing: %do.body154.i<header>,%do.body626.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%for.end1338.i<exiting>,%sw.bb1341.i,%sw.bb.i,%for.inc1423.i<latch>
    Loop at depth 2 containing: %do.body626.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> do.body154.i

sph_luffa512_addbits_and_close(): Transformed loop Loop at depth 1 containing: %do.body154.i<header>,%do.body626.i,%for.end.i,%do.body933.i,%for.end1187.i,%do.body1216.i,%for.end1338.i<exiting>,%sw.bb1341.i,%sw.bb.i,%for.inc1423.i<latch>
    Loop at depth 2 containing: %do.body626.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body933.i<header><latch><exiting>
    Loop at depth 2 containing: %do.body1216.i<header><latch><exiting>

Func cost 433 for sph_luffa512_close has been optimized for entry cost!
Storing cost of sph_luffa512_close() : 433

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa512_close

Loops scheduled for transform for sph_luffa512_close:- 

Func cost 106 for sph_luffa512_init has been optimized for entry cost!
Storing cost of sph_luffa512_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_luffa512_init

Loops scheduled for transform for sph_luffa512_init:- 

Total functions: 18, uninstrumented functions: 12
Optimized 20 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_luffa.o `test -f 'sha3/cpuminer-sph_luffa.ll' || echo './'`sha3/cpuminer-sph_luffa.ll
mv -f sha3/.deps/cpuminer-sph_luffa.Tpo sha3/.deps/cpuminer-sph_luffa.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_cubehash.ll -MD -MP -MF sha3/.deps/cpuminer-sph_cubehash.Tpo -c -o sha3/llvm_cpuminer-sph_cubehash.ll `test -f 'sha3/sph_cubehash.c' || echo './'`sha3/sph_cubehash.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_cubehash.c:37:
In file included from sha3/sph_cubehash.h:45:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_cubehash.ll > sha3/opt_cpuminer-sph_cubehash.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_cubehash.ll > sha3/cpuminer-sph_cubehash.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: cubehash_close
Function: cubehash_core
Function: sph_cubehash224
Function: sph_cubehash224_addbits_and_close
Function: sph_cubehash224_close
Function: sph_cubehash224_init
Function: sph_cubehash256
Function: sph_cubehash256_addbits_and_close
Function: sph_cubehash256_close
Function: sph_cubehash256_init
Function: sph_cubehash384
Function: sph_cubehash384_addbits_and_close
Function: sph_cubehash384_close
Function: sph_cubehash384_init
Function: sph_cubehash512
Function: sph_cubehash512_addbits_and_close
Function: sph_cubehash512_close
Function: sph_cubehash512_init
cubehash_close(): Transformed branch between for.body2778.preheader and for.end2785 in the forward direction
cubehash_close(): Transformed branch between for.body2778.for.body2778_crit_edge.lr.ph and for.end2785_dummy in the forward direction
cubehash_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body95<header><latch><exiting>
. Latch: do.body95, Exiting block: do.body95
cubehash_close(): Checking if simple for Loop Loop at depth 1 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
cubehash_close(): Checking if simple for Loop Loop at depth 1 containing: %for.body2778.for.body2778_crit_edge<header><latch><exiting>
. Latch: for.body2778.for.body2778_crit_edge, Exiting block: for.body2778.for.body2778_crit_edge
Pred cost for for.end2785_dummy_dummy is 1
Has backedges: 10 (numCost: 10)
Self loop:- #backedges: 11, body cost: 444, preheader cost: 136
Self loop will be transformed, & body cost is 444 for loop Loop at depth 1 containing: %do.body95<header><latch><exiting>

Func cost 162 for cubehash_close has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 60, preheader cost: 12
Self loop will be transformed, & body cost is 60 for loop Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 11, preheader cost: 1
Self loop will be transformed, & body cost is 11 for loop Loop at depth 1 containing: %for.body2778.for.body2778_crit_edge<header><latch><exiting>

Func cost 1 for cubehash_close has been optimized for exit cost!
Storing cost of cubehash_close() : 163

Instrumenting loops (self loop count: 3, sese loop count: 0) for function cubehash_close

Loops scheduled for transform for cubehash_close:- 
Self Loop: Loop at depth 1 containing: %for.body2778.for.body2778_crit_edge<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %do.body95<header><latch><exiting>



cubehash_close(): Self loop Loop at depth 1 containing: %for.body2778.for.body2778_crit_edge<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> for.body2778.for.body2778_crit_edge( cubehash_close() )

cubehash_close(): Transformed Self loop Loop at depth 1 containing: %for.body2778.for.body2778_crit_edge<header><latch><exiting>


cubehash_close(): Self loop Loop at depth 1 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( cubehash_close() ). Self Loop cost: 60. Iterations: 66
Self loop is not canonical. Going for generic transformation with 66 iterations.
Attempting to transform self loop vector.body of cubehash_close with 66 inner loop iterations --> Loop at depth 1 containing: %vector.body<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %selfLoopOptExitBlock ], mapping it to   %phiIVClone1 = phi i64 
User in header block to replace Phi:   %462 = add i64 -132, %niter
Applied self loop transform on vector.body( cubehash_close() )

cubehash_close(): Transformed Self loop Loop at depth 1 containing: %vector.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


cubehash_close(): Self loop Loop at depth 1 containing: %do.body95<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body95( cubehash_close() ). Self Loop cost: 444. Iterations: 9

cubehash_close(): Transformed Self loop Loop at depth 1 containing: %do.body95<header><latch><exiting>

cubehash_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body77,%if.end2710<latch><exiting>
. Latch: if.end2710, Exiting block: if.end2710
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body
Func cost 77 for cubehash_core has been optimized for entry cost!
Storing cost of cubehash_core() : 77

Instrumenting loops (self loop count: 0, sese loop count: 1) for function cubehash_core

Loops scheduled for transform for cubehash_core:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%do.body77,%if.end2710<latch><exiting>,%while.bodyDirectSucc



cubehash_core(): Max depth loop Loop at depth 1 containing: %while.body<header>,%do.body77,%if.end2710<latch><exiting>,%while.bodyDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body( cubehash_core() )

cubehash_core(): Transformed loop Loop at depth 1 containing: %while.body<header>,%do.body77,%if.end2710<latch><exiting>,%while.bodyDirectSucc

Func cost 80 for sph_cubehash224 has been optimized for entry cost!
Storing cost of sph_cubehash224() : 80

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash224

Loops scheduled for transform for sph_cubehash224:- 

Func cost 271 for sph_cubehash224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_cubehash224_addbits_and_close() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash224_addbits_and_close

Loops scheduled for transform for sph_cubehash224_addbits_and_close:- 

Func cost 271 for sph_cubehash224_close has been optimized for entry cost!
Storing cost of sph_cubehash224_close() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash224_close

Loops scheduled for transform for sph_cubehash224_close:- 

Func cost 106 for sph_cubehash224_init has been optimized for entry cost!
Storing cost of sph_cubehash224_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash224_init

Loops scheduled for transform for sph_cubehash224_init:- 

Func cost 80 for sph_cubehash256 has been optimized for entry cost!
Storing cost of sph_cubehash256() : 80

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash256

Loops scheduled for transform for sph_cubehash256:- 

Func cost 271 for sph_cubehash256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_cubehash256_addbits_and_close() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash256_addbits_and_close

Loops scheduled for transform for sph_cubehash256_addbits_and_close:- 

Func cost 271 for sph_cubehash256_close has been optimized for entry cost!
Storing cost of sph_cubehash256_close() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash256_close

Loops scheduled for transform for sph_cubehash256_close:- 

Func cost 106 for sph_cubehash256_init has been optimized for entry cost!
Storing cost of sph_cubehash256_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash256_init

Loops scheduled for transform for sph_cubehash256_init:- 

Func cost 80 for sph_cubehash384 has been optimized for entry cost!
Storing cost of sph_cubehash384() : 80

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash384

Loops scheduled for transform for sph_cubehash384:- 

Func cost 271 for sph_cubehash384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_cubehash384_addbits_and_close() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash384_addbits_and_close

Loops scheduled for transform for sph_cubehash384_addbits_and_close:- 

Func cost 271 for sph_cubehash384_close has been optimized for entry cost!
Storing cost of sph_cubehash384_close() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash384_close

Loops scheduled for transform for sph_cubehash384_close:- 

Func cost 106 for sph_cubehash384_init has been optimized for entry cost!
Storing cost of sph_cubehash384_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash384_init

Loops scheduled for transform for sph_cubehash384_init:- 

Func cost 80 for sph_cubehash512 has been optimized for entry cost!
Storing cost of sph_cubehash512() : 80

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash512

Loops scheduled for transform for sph_cubehash512:- 

Func cost 271 for sph_cubehash512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_cubehash512_addbits_and_close() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash512_addbits_and_close

Loops scheduled for transform for sph_cubehash512_addbits_and_close:- 

Func cost 271 for sph_cubehash512_close has been optimized for entry cost!
Storing cost of sph_cubehash512_close() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash512_close

Loops scheduled for transform for sph_cubehash512_close:- 

Func cost 106 for sph_cubehash512_init has been optimized for entry cost!
Storing cost of sph_cubehash512_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_cubehash512_init

Loops scheduled for transform for sph_cubehash512_init:- 

Total functions: 18, uninstrumented functions: 16
Optimized 19 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_cubehash.o `test -f 'sha3/cpuminer-sph_cubehash.ll' || echo './'`sha3/cpuminer-sph_cubehash.ll
mv -f sha3/.deps/cpuminer-sph_cubehash.Tpo sha3/.deps/cpuminer-sph_cubehash.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_simd.ll -MD -MP -MF sha3/.deps/cpuminer-sph_simd.Tpo -c -o sha3/llvm_cpuminer-sph_simd.ll `test -f 'sha3/sph_simd.c' || echo './'`sha3/sph_simd.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_simd.c:37:
In file included from sha3/sph_simd.h:44:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_simd.ll > sha3/opt_cpuminer-sph_simd.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_simd.ll > sha3/cpuminer-sph_simd.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: compress_big
Function: compress_small
Function: fft64
Function: sph_simd224
Function: sph_simd224_addbits_and_close
Function: sph_simd224_close
Function: sph_simd224_init
Function: sph_simd256
Function: sph_simd256_addbits_and_close
Function: sph_simd256_close
Function: sph_simd256_init
Function: sph_simd384
Function: sph_simd384_addbits_and_close
Function: sph_simd384_close
Function: sph_simd384_init
Function: sph_simd512
Function: sph_simd512_addbits_and_close
Function: sph_simd512_close
Function: sph_simd512_init
compress_big(): Checking if simple for Loop Loop at depth 1 containing: %llaa<header><exiting>,%for.body<latch>
. Latch: for.body, Exiting block: llaa
compress_big(): Checking if simple for Loop Loop at depth 1 containing: %llab<header><exiting>,%for.body128<latch>
. Latch: for.body128, Exiting block: llab
compress_big(): Checking if simple for Loop Loop at depth 1 containing: %lla<header><exiting>,%for.body249<latch>
. Latch: for.body249, Exiting block: lla
compress_big(): Checking if simple for Loop Loop at depth 1 containing: %for.body361<header><exiting>,%for.body361.for.body361_crit_edge<latch>
. Latch: for.body361.for.body361_crit_edge, Exiting block: for.body361
compress_big(): Checking if simple for Loop Loop at depth 1 containing: %for.body385<header><exiting>,%for.body385.for.body385_crit_edge<latch>
. Latch: for.body385.for.body385_crit_edge, Exiting block: for.body385
Has backedges: 31 (numCost: 31)
Has backedges: 15 (numCost: 15)
Has backedges: 15 (numCost: 15)
Header-colocated-exit loop:- loop & preheader cost 2020 will be instrumented in post loop exit
Header-colocated-exit loop:- loop & preheader cost 3952 will be instrumented in post loop exit
Header-colocated-exit loop:- loop cost 0x560b90759de0 will be instrumented in post loop exit
Has backedges: 255 (numCost: 255)
Header-colocated-exit loop will be transformed, & body cost is 24 for loop with header for.body361
Has backedges: 255 (numCost: 255)
Header-colocated-exit loop will be transformed, & body cost is 24 for loop with header for.body385
Func cost 3495 for compress_big has been optimized for entry cost!
Storing cost of compress_big() : 3495

Instrumenting loops (self loop count: 0, sese loop count: 2) for function compress_big

Loops scheduled for transform for compress_big:- 
Sese Loop: Loop at depth 1 containing: %for.body385<header><exiting>,%for.body385.for.body385_crit_edge<latch>

Sese Loop: Loop at depth 1 containing: %for.body361<header><exiting>,%for.body361.for.body361_crit_edge<latch>



compress_big(): Max depth loop Loop at depth 1 containing: %llaa<header><exiting>,%for.body<latch>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> llaa

compress_big(): Transformed loop Loop at depth 1 containing: %llaa<header><exiting>,%for.body<latch>


compress_big(): Max depth loop Loop at depth 1 containing: %llab<header><exiting>,%for.body128<latch>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> llab

compress_big(): Transformed loop Loop at depth 1 containing: %llab<header><exiting>,%for.body128<latch>


compress_big(): Max depth loop Loop at depth 1 containing: %lla<header><exiting>,%for.body249<latch>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> lla

compress_big(): Transformed loop Loop at depth 1 containing: %lla<header><exiting>,%for.body249<latch>


compress_big(): Max depth loop Loop at depth 1 containing: %for.body361<header><exiting>,%for.body361.for.body361_crit_edge<latch>


This seseloop will not be transformed since it has no induction variable --> for.body361( compress_big() )

compress_big(): Transformed loop Loop at depth 1 containing: %for.body361<header><exiting>,%for.body361.for.body361_crit_edge<latch>


compress_big(): Max depth loop Loop at depth 1 containing: %for.body385<header><exiting>,%for.body385.for.body385_crit_edge<latch>


This seseloop will not be transformed since it has no induction variable --> for.body385( compress_big() )

compress_big(): Transformed loop Loop at depth 1 containing: %for.body385<header><exiting>,%for.body385.for.body385_crit_edge<latch>

compress_small(): Checking if simple for Loop Loop at depth 1 containing: %ll<header><exiting>,%for.body2181<latch>
. Latch: for.body2181, Exiting block: ll
compress_small(): Checking if simple for Loop Loop at depth 1 containing: %for.body2294<header><exiting>,%for.body2294.for.body2294_crit_edge<latch>
. Latch: for.body2294.for.body2294_crit_edge, Exiting block: for.body2294
compress_small(): Checking if simple for Loop Loop at depth 1 containing: %for.body2319<header><exiting>,%for.body2319.for.body2319_crit_edge<latch>
. Latch: for.body2319.for.body2319_crit_edge, Exiting block: for.body2319
Has backedges: 15 (numCost: 15)
Header-colocated-exit loop:- loop cost 0x560b90804080 will be instrumented in post loop exit
Has backedges: 127 (numCost: 127)
Header-colocated-exit loop will be transformed, & body cost is 24 for loop with header for.body2294
Has backedges: 127 (numCost: 127)
Header-colocated-exit loop will be transformed, & body cost is 24 for loop with header for.body2319
Func cost 3792 for compress_small has been optimized for entry cost!
Storing cost of compress_small() : 3792

Instrumenting loops (self loop count: 0, sese loop count: 2) for function compress_small

Loops scheduled for transform for compress_small:- 
Sese Loop: Loop at depth 1 containing: %for.body2319<header><exiting>,%for.body2319.for.body2319_crit_edge<latch>

Sese Loop: Loop at depth 1 containing: %for.body2294<header><exiting>,%for.body2294.for.body2294_crit_edge<latch>



compress_small(): Max depth loop Loop at depth 1 containing: %ll<header><exiting>,%for.body2181<latch>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> ll

compress_small(): Transformed loop Loop at depth 1 containing: %ll<header><exiting>,%for.body2181<latch>


compress_small(): Max depth loop Loop at depth 1 containing: %for.body2294<header><exiting>,%for.body2294.for.body2294_crit_edge<latch>


This seseloop will not be transformed since it has no induction variable --> for.body2294( compress_small() )

compress_small(): Transformed loop Loop at depth 1 containing: %for.body2294<header><exiting>,%for.body2294.for.body2294_crit_edge<latch>


compress_small(): Max depth loop Loop at depth 1 containing: %for.body2319<header><exiting>,%for.body2319.for.body2319_crit_edge<latch>


This seseloop will not be transformed since it has no induction variable --> for.body2319( compress_small() )

compress_small(): Transformed loop Loop at depth 1 containing: %for.body2319<header><exiting>,%for.body2319.for.body2319_crit_edge<latch>

Func cost 1122 for fft64 has been optimized for entry cost!
Storing cost of fft64() : 1122

Instrumenting loops (self loop count: 0, sese loop count: 0) for function fft64

Loops scheduled for transform for fft64:- 

sph_simd224(): Transformed branch between if.then7.i and if.end15.i in the forward direction
sph_simd224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy
. Latch: if.end15.i, Exiting block: if.end15.i
sph_simd224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy
. Latch: if.end15.i, Exiting block: if.end15.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 9 for sph_simd224 has been optimized for entry cost!
Storing cost of sph_simd224() : 9

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_simd224

Loops scheduled for transform for sph_simd224:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc



sph_simd224(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_simd224() )

sph_simd224(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc

Direct branch from entry needs to be instrumented
Func cost 105 for sph_simd224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_simd224_addbits_and_close() : 105

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd224_addbits_and_close

Loops scheduled for transform for sph_simd224_addbits_and_close:- 

Direct branch from entry needs to be instrumented
Func cost 105 for sph_simd224_close has been optimized for entry cost!
Storing cost of sph_simd224_close() : 105

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd224_close

Loops scheduled for transform for sph_simd224_close:- 

Func cost 112 for sph_simd224_init has been optimized for entry cost!
Storing cost of sph_simd224_init() : 112

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd224_init

Loops scheduled for transform for sph_simd224_init:- 

sph_simd256(): Transformed branch between if.then7.i and if.end15.i in the forward direction
sph_simd256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy
. Latch: if.end15.i, Exiting block: if.end15.i
sph_simd256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy
. Latch: if.end15.i, Exiting block: if.end15.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 9 for sph_simd256 has been optimized for entry cost!
Storing cost of sph_simd256() : 9

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_simd256

Loops scheduled for transform for sph_simd256:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc



sph_simd256(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_simd256() )

sph_simd256(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc

Direct branch from entry needs to be instrumented
Func cost 105 for sph_simd256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_simd256_addbits_and_close() : 105

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd256_addbits_and_close

Loops scheduled for transform for sph_simd256_addbits_and_close:- 

Direct branch from entry needs to be instrumented
Func cost 105 for sph_simd256_close has been optimized for entry cost!
Storing cost of sph_simd256_close() : 105

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd256_close

Loops scheduled for transform for sph_simd256_close:- 

Func cost 112 for sph_simd256_init has been optimized for entry cost!
Storing cost of sph_simd256_init() : 112

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd256_init

Loops scheduled for transform for sph_simd256_init:- 

sph_simd384(): Transformed branch between if.then7.i and if.end15.i in the forward direction
sph_simd384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy
. Latch: if.end15.i, Exiting block: if.end15.i
sph_simd384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy
. Latch: if.end15.i, Exiting block: if.end15.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 9 for sph_simd384 has been optimized for entry cost!
Storing cost of sph_simd384() : 9

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_simd384

Loops scheduled for transform for sph_simd384:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc



sph_simd384(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_simd384() )

sph_simd384(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc

Direct branch from entry needs to be instrumented
Func cost 3792 for sph_simd384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_simd384_addbits_and_close() : 3792

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd384_addbits_and_close

Loops scheduled for transform for sph_simd384_addbits_and_close:- 

Func cost 3794 for sph_simd384_close has been optimized for entry cost!
Storing cost of sph_simd384_close() : 3794

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd384_close

Loops scheduled for transform for sph_simd384_close:- 

Func cost 112 for sph_simd384_init has been optimized for entry cost!
Storing cost of sph_simd384_init() : 112

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd384_init

Loops scheduled for transform for sph_simd384_init:- 

sph_simd512(): Transformed branch between if.then7.i and if.end15.i in the forward direction
sph_simd512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy
. Latch: if.end15.i, Exiting block: if.end15.i
sph_simd512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy
. Latch: if.end15.i, Exiting block: if.end15.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 9 for sph_simd512 has been optimized for entry cost!
Storing cost of sph_simd512() : 9

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_simd512

Loops scheduled for transform for sph_simd512:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc



sph_simd512(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_simd512() )

sph_simd512(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then7.i,%if.then13.i,%if.end15.i<latch><exiting>,%if.end15.i_dummy,%while.body.iDirectSucc

Direct branch from entry needs to be instrumented
Func cost 3816 for sph_simd512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_simd512_addbits_and_close() : 3816

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd512_addbits_and_close

Loops scheduled for transform for sph_simd512_addbits_and_close:- 

Func cost 3818 for sph_simd512_close has been optimized for entry cost!
Storing cost of sph_simd512_close() : 3818

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd512_close

Loops scheduled for transform for sph_simd512_close:- 

Func cost 112 for sph_simd512_init has been optimized for entry cost!
Storing cost of sph_simd512_init() : 112

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_simd512_init

Loops scheduled for transform for sph_simd512_init:- 

Total functions: 19, uninstrumented functions: 7
Optimized 19 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_simd.o `test -f 'sha3/cpuminer-sph_simd.ll' || echo './'`sha3/cpuminer-sph_simd.ll
mv -f sha3/.deps/cpuminer-sph_simd.Tpo sha3/.deps/cpuminer-sph_simd.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_echo.ll -MD -MP -MF sha3/.deps/cpuminer-sph_echo.Tpo -c -o sha3/llvm_cpuminer-sph_echo.ll `test -f 'sha3/sph_echo.c' || echo './'`sha3/sph_echo.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_echo.c:37:
In file included from sha3/sph_echo.h:44:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_echo.ll > sha3/opt_cpuminer-sph_echo.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_echo.ll > sha3/cpuminer-sph_echo.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: echo_big_close
Function: echo_big_compress
Function: echo_small_close
Function: echo_small_compress
Function: sph_echo224
Function: sph_echo224_addbits_and_close
Function: sph_echo224_close
Function: sph_echo224_init
Function: sph_echo256
Function: sph_echo256_addbits_and_close
Function: sph_echo256_close
Function: sph_echo256_init
Function: sph_echo384
Function: sph_echo384_addbits_and_close
Function: sph_echo384_close
Function: sph_echo384_init
Function: sph_echo512
Function: sph_echo512_addbits_and_close
Function: sph_echo512_close
Function: sph_echo512_init
echo_big_close(): Transformed branch between if.then and do.end in the forward direction
echo_big_close(): Transformed branch between if.then11 and do.end_dummy in the forward direction
echo_big_close(): Transformed branch between for.body.preheader and for.end in the forward direction
echo_big_close(): Transformed branch between for.body.prol.loopexit and for.end_dummy in the forward direction
echo_big_close(): Checking if simple for Loop Loop at depth 1 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
echo_big_close(): Checking if simple for Loop Loop at depth 1 containing: %for.body.prol<header><latch><exiting>
. Latch: for.body.prol, Exiting block: for.body.prol
echo_big_close(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Direct branch from do.end needs to be instrumented
Direct branch from if.end41 needs to be instrumented
Func cost 115 for echo_big_close has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 57, preheader cost: 9
Self loop will be transformed, & body cost is 57 for loop Loop at depth 1 containing: %vector.body<header><latch><exiting>

Has backedges: (+ -1 (zext (trunc (/ (+ 1 (zext (ARG: 4) i64) ) 2 ) i2) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 11, preheader cost: 6
Self loop will be transformed, & body cost is 11 for loop Loop at depth 1 containing: %for.body.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 34, preheader cost: 9
Self loop will be transformed, & body cost is 34 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 340 for echo_big_close has been optimized for exit cost!
Storing cost of echo_big_close() : 455

Instrumenting loops (self loop count: 3, sese loop count: 0) for function echo_big_close

Loops scheduled for transform for echo_big_close:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body<header><latch><exiting>



echo_big_close(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( echo_big_close() ). Self Loop cost: 34. Iterations: 117
Self loop is not canonical. Going for generic transformation with 117 iterations.
Attempting to transform self loop for.body of echo_big_close with 117 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ %indvars.iv.next.3, %selfLoopOptExitBlock ], [ %indvars.iv.unr, %for.body.preheader1 ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %83 = add i64 468, %indvars.iv
Applied self loop transform on for.body( echo_big_close() )

echo_big_close(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


echo_big_close(): Self loop Loop at depth 1 containing: %for.body.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.prol( echo_big_close() ). Self Loop cost: 11. Iterations: 363
Self loop is not canonical. Going for generic transformation with 363 iterations.
Attempting to transform self loop for.body.prol of echo_big_close with 363 inner loop iterations --> Loop at depth 1 containing: %for.body.prol<header><latch><exiting>
Found local ind var:   %prol.iter = phi i64 [ %prol.iter.sub, %selfLoopOptExitBlock2 ], [ %xtraiter, %for.body.prol.preheader ], mapping it to   %phiIVClone4 = phi i64 
User in header block to replace Phi:   %80 = add i64 -363, %prol.iter
Applied self loop transform on for.body.prol( echo_big_close() )

echo_big_close(): Transformed Self loop Loop at depth 1 containing: %for.body.prol<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock1<header><latch><exiting>


echo_big_close(): Self loop Loop at depth 1 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( echo_big_close() ). Self Loop cost: 57. Iterations: 70
Self loop is not canonical. Going for generic transformation with 70 iterations.
Attempting to transform self loop vector.body of echo_big_close with 70 inner loop iterations --> Loop at depth 1 containing: %vector.body<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %selfLoopOptExitBlock10 ], mapping it to   %phiIVClone12 = phi i64 
User in header block to replace Phi:   %24 = add i64 -140, %niter
Applied self loop transform on vector.body( echo_big_close() )

echo_big_close(): Transformed Self loop Loop at depth 1 containing: %vector.body<header>,%selfLoopOptBlock9,%selfLoopOptExitBlock10<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock9<header><latch><exiting>

echo_big_compress(): Transformed branch between if.then and if.end215 in the forward direction
echo_big_compress(): Transformed branch between if.then414 and if.end426 in the forward direction
echo_big_compress(): Transformed branch between if.then625 and if.end637 in the forward direction
echo_big_compress(): Transformed branch between if.then836 and if.end848 in the forward direction
echo_big_compress(): Transformed branch between if.then1047 and if.end1059 in the forward direction
echo_big_compress(): Transformed branch between if.then1258 and if.end1270 in the forward direction
echo_big_compress(): Transformed branch between if.then1469 and if.end1481 in the forward direction
echo_big_compress(): Transformed branch between if.then1680 and if.end1692 in the forward direction
echo_big_compress(): Transformed branch between if.then1891 and if.end1903 in the forward direction
echo_big_compress(): Transformed branch between if.then2102 and if.end2114 in the forward direction
echo_big_compress(): Transformed branch between if.then2313 and if.end2325 in the forward direction
echo_big_compress(): Transformed branch between if.then2524 and if.end2536 in the forward direction
echo_big_compress(): Transformed branch between if.then2735 and if.end2747 in the forward direction
echo_big_compress(): Transformed branch between if.then2946 and if.end2958 in the forward direction
echo_big_compress(): Transformed branch between if.then3157 and if.end3169 in the forward direction
echo_big_compress(): Transformed branch between if.then3368 and if.end3380 in the forward direction
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_big_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
Has backedges: 9 (numCost: 9)
Instrumenting loop with body cost: 3109
Non-header-colocated-exit loop will be transformed, & body cost is 3109 for loop with header do.body23
Func cost 448 for echo_big_compress has been optimized for entry cost!
Storing cost of echo_big_compress() : 448

Instrumenting loops (self loop count: 0, sese loop count: 1) for function echo_big_compress

Loops scheduled for transform for echo_big_compress:- 
Sese Loop: Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy



echo_big_compress(): Max depth loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy


This seseloop will not be transformed because of too low iteration count --> do.body23( echo_big_compress() ). SESE Loop cost: 3109. Iterations: 1

echo_big_compress(): Transformed loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy

echo_small_close(): Transformed branch between if.then and do.end in the forward direction
echo_small_close(): Transformed branch between if.then11 and do.end_dummy in the forward direction
echo_small_close(): Transformed branch between for.body.preheader and for.end in the forward direction
echo_small_close(): Transformed branch between for.body.prol.loopexit and for.end_dummy in the forward direction
echo_small_close(): Checking if simple for Loop Loop at depth 1 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
echo_small_close(): Checking if simple for Loop Loop at depth 1 containing: %for.body.prol<header><latch><exiting>
. Latch: for.body.prol, Exiting block: for.body.prol
echo_small_close(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Direct branch from do.end needs to be instrumented
Direct branch from if.end41 needs to be instrumented
Func cost 115 for echo_small_close has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 57, preheader cost: 9
Self loop will be transformed, & body cost is 57 for loop Loop at depth 1 containing: %vector.body<header><latch><exiting>

Has backedges: (+ -1 (zext (trunc (/ (+ 1 (zext (ARG: 4) i64) ) 2 ) i2) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 11, preheader cost: 6
Self loop will be transformed, & body cost is 11 for loop Loop at depth 1 containing: %for.body.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 34, preheader cost: 9
Self loop will be transformed, & body cost is 34 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 324 for echo_small_close has been optimized for exit cost!
Storing cost of echo_small_close() : 439

Instrumenting loops (self loop count: 3, sese loop count: 0) for function echo_small_close

Loops scheduled for transform for echo_small_close:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body<header><latch><exiting>



echo_small_close(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( echo_small_close() ). Self Loop cost: 34. Iterations: 117
Self loop is not canonical. Going for generic transformation with 117 iterations.
Attempting to transform self loop for.body of echo_small_close with 117 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ %indvars.iv.next.3, %selfLoopOptExitBlock ], [ %indvars.iv.unr, %for.body.preheader1 ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %83 = add i64 468, %indvars.iv
Applied self loop transform on for.body( echo_small_close() )

echo_small_close(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


echo_small_close(): Self loop Loop at depth 1 containing: %for.body.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.prol( echo_small_close() ). Self Loop cost: 11. Iterations: 363
Self loop is not canonical. Going for generic transformation with 363 iterations.
Attempting to transform self loop for.body.prol of echo_small_close with 363 inner loop iterations --> Loop at depth 1 containing: %for.body.prol<header><latch><exiting>
Found local ind var:   %prol.iter = phi i64 [ %prol.iter.sub, %selfLoopOptExitBlock2 ], [ %xtraiter, %for.body.prol.preheader ], mapping it to   %phiIVClone4 = phi i64 
User in header block to replace Phi:   %80 = add i64 -363, %prol.iter
Applied self loop transform on for.body.prol( echo_small_close() )

echo_small_close(): Transformed Self loop Loop at depth 1 containing: %for.body.prol<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock1<header><latch><exiting>


echo_small_close(): Self loop Loop at depth 1 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( echo_small_close() ). Self Loop cost: 57. Iterations: 70
Self loop is not canonical. Going for generic transformation with 70 iterations.
Attempting to transform self loop vector.body of echo_small_close with 70 inner loop iterations --> Loop at depth 1 containing: %vector.body<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %selfLoopOptExitBlock10 ], mapping it to   %phiIVClone12 = phi i64 
User in header block to replace Phi:   %24 = add i64 -140, %niter
Applied self loop transform on vector.body( echo_small_close() )

echo_small_close(): Transformed Self loop Loop at depth 1 containing: %vector.body<header>,%selfLoopOptBlock9,%selfLoopOptExitBlock10<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock9<header><latch><exiting>

echo_small_compress(): Transformed branch between if.then and if.end215 in the forward direction
echo_small_compress(): Transformed branch between if.then414 and if.end426 in the forward direction
echo_small_compress(): Transformed branch between if.then625 and if.end637 in the forward direction
echo_small_compress(): Transformed branch between if.then836 and if.end848 in the forward direction
echo_small_compress(): Transformed branch between if.then1047 and if.end1059 in the forward direction
echo_small_compress(): Transformed branch between if.then1258 and if.end1270 in the forward direction
echo_small_compress(): Transformed branch between if.then1469 and if.end1481 in the forward direction
echo_small_compress(): Transformed branch between if.then1680 and if.end1692 in the forward direction
echo_small_compress(): Transformed branch between if.then1891 and if.end1903 in the forward direction
echo_small_compress(): Transformed branch between if.then2102 and if.end2114 in the forward direction
echo_small_compress(): Transformed branch between if.then2313 and if.end2325 in the forward direction
echo_small_compress(): Transformed branch between if.then2524 and if.end2536 in the forward direction
echo_small_compress(): Transformed branch between if.then2735 and if.end2747 in the forward direction
echo_small_compress(): Transformed branch between if.then2946 and if.end2958 in the forward direction
echo_small_compress(): Transformed branch between if.then3157 and if.end3169 in the forward direction
echo_small_compress(): Transformed branch between if.then3368 and if.end3380 in the forward direction
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
echo_small_compress(): Checking if simple for Loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy
. Latch: if.end3380, Exiting block: if.end3380
Has backedges: 7 (numCost: 7)
Instrumenting loop with body cost: 3112
Non-header-colocated-exit loop will be transformed, & body cost is 3112 for loop with header do.body23
Func cost 444 for echo_small_compress has been optimized for entry cost!
Storing cost of echo_small_compress() : 444

Instrumenting loops (self loop count: 0, sese loop count: 1) for function echo_small_compress

Loops scheduled for transform for echo_small_compress:- 
Sese Loop: Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy



echo_small_compress(): Max depth loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy


This seseloop will not be transformed because of too low iteration count --> do.body23( echo_small_compress() ). SESE Loop cost: 3112. Iterations: 1

echo_small_compress(): Transformed loop Loop at depth 1 containing: %do.body23<header>,%if.then,%if.then208,%if.end215,%if.then414,%if.then418,%if.end426,%if.then625,%if.then629,%if.end637,%if.then836,%if.then840,%if.end848,%if.then1047,%if.then1051,%if.end1059,%if.then1258,%if.then1262,%if.end1270,%if.then1469,%if.then1473,%if.end1481,%if.then1680,%if.then1684,%if.end1692,%if.then1891,%if.then1895,%if.end1903,%if.then2102,%if.then2106,%if.end2114,%if.then2313,%if.then2317,%if.end2325,%if.then2524,%if.then2528,%if.end2536,%if.then2735,%if.then2739,%if.end2747,%if.then2946,%if.then2950,%if.end2958,%if.then3157,%if.then3161,%if.end3169,%if.then3368,%if.then3372,%if.end3380<latch><exiting>,%if.end215_dummy,%if.end426_dummy,%if.end637_dummy,%if.end848_dummy,%if.end1059_dummy,%if.end1270_dummy,%if.end1481_dummy,%if.end1692_dummy,%if.end1903_dummy,%if.end2114_dummy,%if.end2325_dummy,%if.end2536_dummy,%if.end2747_dummy,%if.end2958_dummy,%if.end3169_dummy,%if.end3380_dummy

sph_echo224(): Transformed branch between while.cond.preheader.i and echo_small_core.exit in the forward direction
sph_echo224(): Transformed branch between if.then19.i and do.end.i in the forward direction
sph_echo224(): Transformed branch between if.then23.i and do.end.i_dummy in the forward direction
sph_echo224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 65 for sph_echo224 has been optimized for entry cost!
Storing cost of sph_echo224() : 65

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_echo224

Loops scheduled for transform for sph_echo224:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc



sph_echo224(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_echo224() )

sph_echo224(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc

Func cost 442 for sph_echo224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_echo224_addbits_and_close() : 442

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo224_addbits_and_close

Loops scheduled for transform for sph_echo224_addbits_and_close:- 

Func cost 442 for sph_echo224_close has been optimized for entry cost!
Storing cost of sph_echo224_close() : 442

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo224_close

Loops scheduled for transform for sph_echo224_close:- 

Func cost 109 for sph_echo224_init has been optimized for entry cost!
Storing cost of sph_echo224_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo224_init

Loops scheduled for transform for sph_echo224_init:- 

sph_echo256(): Transformed branch between while.cond.preheader.i and echo_small_core.exit in the forward direction
sph_echo256(): Transformed branch between if.then19.i and do.end.i in the forward direction
sph_echo256(): Transformed branch between if.then23.i and do.end.i_dummy in the forward direction
sph_echo256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 65 for sph_echo256 has been optimized for entry cost!
Storing cost of sph_echo256() : 65

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_echo256

Loops scheduled for transform for sph_echo256:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc



sph_echo256(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_echo256() )

sph_echo256(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc

Func cost 442 for sph_echo256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_echo256_addbits_and_close() : 442

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo256_addbits_and_close

Loops scheduled for transform for sph_echo256_addbits_and_close:- 

Func cost 442 for sph_echo256_close has been optimized for entry cost!
Storing cost of sph_echo256_close() : 442

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo256_close

Loops scheduled for transform for sph_echo256_close:- 

Func cost 109 for sph_echo256_init has been optimized for entry cost!
Storing cost of sph_echo256_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo256_init

Loops scheduled for transform for sph_echo256_init:- 

sph_echo384(): Transformed branch between while.cond.preheader.i and echo_big_core.exit in the forward direction
sph_echo384(): Transformed branch between if.then19.i and do.end.i in the forward direction
sph_echo384(): Transformed branch between if.then23.i and do.end.i_dummy in the forward direction
sph_echo384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 65 for sph_echo384 has been optimized for entry cost!
Storing cost of sph_echo384() : 65

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_echo384

Loops scheduled for transform for sph_echo384:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc



sph_echo384(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_echo384() )

sph_echo384(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc

Func cost 458 for sph_echo384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_echo384_addbits_and_close() : 458

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo384_addbits_and_close

Loops scheduled for transform for sph_echo384_addbits_and_close:- 

Func cost 458 for sph_echo384_close has been optimized for entry cost!
Storing cost of sph_echo384_close() : 458

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo384_close

Loops scheduled for transform for sph_echo384_close:- 

Func cost 115 for sph_echo384_init has been optimized for entry cost!
Storing cost of sph_echo384_init() : 115

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo384_init

Loops scheduled for transform for sph_echo384_init:- 

sph_echo512(): Transformed branch between while.cond.preheader.i and echo_big_core.exit in the forward direction
sph_echo512(): Transformed branch between if.then19.i and do.end.i in the forward direction
sph_echo512(): Transformed branch between if.then23.i and do.end.i_dummy in the forward direction
sph_echo512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
sph_echo512(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy
. Latch: if.end33.i, Exiting block: if.end33.i
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 65 for sph_echo512 has been optimized for entry cost!
Storing cost of sph_echo512() : 65

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sph_echo512

Loops scheduled for transform for sph_echo512:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc



sph_echo512(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_echo512() )

sph_echo512(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%do.body.i,%if.then19.i,%if.then23.i,%if.then27.i,%do.end.i,%if.end33.i<latch><exiting>,%do.end.i_dummy,%do.end.i_dummy_dummy,%while.body.iDirectSucc

Func cost 458 for sph_echo512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_echo512_addbits_and_close() : 458

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo512_addbits_and_close

Loops scheduled for transform for sph_echo512_addbits_and_close:- 

Func cost 458 for sph_echo512_close has been optimized for entry cost!
Storing cost of sph_echo512_close() : 458

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo512_close

Loops scheduled for transform for sph_echo512_close:- 

Func cost 115 for sph_echo512_init has been optimized for entry cost!
Storing cost of sph_echo512_init() : 115

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_echo512_init

Loops scheduled for transform for sph_echo512_init:- 

Total functions: 20, uninstrumented functions: 12
Optimized 22 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_echo.o `test -f 'sha3/cpuminer-sph_echo.ll' || echo './'`sha3/cpuminer-sph_echo.ll
mv -f sha3/.deps/cpuminer-sph_echo.Tpo sha3/.deps/cpuminer-sph_echo.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_fugue.ll -MD -MP -MF sha3/.deps/cpuminer-sph_fugue.Tpo -c -o sha3/llvm_cpuminer-sph_fugue.ll `test -f 'sha3/sph_fugue.c' || echo './'`sha3/sph_fugue.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_fugue.c:4:
In file included from sha3/sph_fugue.h:5:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_fugue.ll > sha3/opt_cpuminer-sph_fugue.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_fugue.ll > sha3/cpuminer-sph_fugue.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: fugue2_close
Function: fugue2_core
Function: fugue3_close
Function: fugue3_core
Function: fugue4_close
Function: fugue4_core
Function: sph_fugue224
Function: sph_fugue224_addbits_and_close
Function: sph_fugue224_close
Function: sph_fugue224_init
Function: sph_fugue256
Function: sph_fugue256_addbits_and_close
Function: sph_fugue256_close
Function: sph_fugue256_init
Function: sph_fugue384
Function: sph_fugue384_addbits_and_close
Function: sph_fugue384_close
Function: sph_fugue384_init
Function: sph_fugue512
Function: sph_fugue512_addbits_and_close
Function: sph_fugue512_close
Function: sph_fugue512_init
fugue2_close(): Transformed branch between if.else and if.end19 in the forward direction
fugue2_close(): Transformed branch between if.then8 and if.end19_dummy in the forward direction
fugue2_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body43<header><latch><exiting>
. Latch: do.body43, Exiting block: do.body43
fugue2_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body249<header><latch><exiting>
. Latch: do.body249, Exiting block: do.body249
Has backedges: 12 (numCost: 12)
Has backedges: 9 (numCost: 9)
Direct branch from if.then8 needs to be instrumented
Direct branch from if.else needs to be instrumented
Direct branch from entry needs to be instrumented
Self loop:- #backedges: 10, body cost: 682, preheader cost: 237
Self loop will be transformed, & body cost is 682 for loop Loop at depth 1 containing: %do.body43<header><latch><exiting>

Self loop:- #backedges: 13, body cost: 1337, preheader cost: 250
Self loop will be transformed, & body cost is 1337 for loop Loop at depth 1 containing: %do.body249<header><latch><exiting>

Func cost 691 for fugue2_close has been optimized for entry cost!
Storing cost of fugue2_close() : 691

Instrumenting loops (self loop count: 2, sese loop count: 0) for function fugue2_close

Loops scheduled for transform for fugue2_close:- 
Self Loop: Loop at depth 1 containing: %do.body249<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %do.body43<header><latch><exiting>



fugue2_close(): Self loop Loop at depth 1 containing: %do.body249<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body249( fugue2_close() ). Self Loop cost: 1337. Iterations: 2

fugue2_close(): Transformed Self loop Loop at depth 1 containing: %do.body249<header><latch><exiting>


fugue2_close(): Self loop Loop at depth 1 containing: %do.body43<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body43( fugue2_close() ). Self Loop cost: 682. Iterations: 5

fugue2_close(): Transformed Self loop Loop at depth 1 containing: %do.body43<header><latch><exiting>

fugue2_core(): Transformed branch between while.end1766.loopexit.unr-lcssa and while.end1766 in the forward direction
fugue2_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>
. Latch: while.body.prol, Exiting block: while.body.prol
fugue2_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
fugue2_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body1761<header><latch><exiting>
. Latch: while.body1761, Exiting block: while.body1761
fugue2_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body1761.epil<header><latch><exiting>
. Latch: while.body1761.epil, Exiting block: while.body1761.epil
WARNING: if.end1751 in function fugue2_core() is a rare backedge. isLatch: 0, isBackedge: 1
WARNING: if.end1751 in function fugue2_core() is a rare backedge. isLatch: 0, isBackedge: 1
Pred cost for if.end408 is 5
Pred cost for if.end743 is 5
Pred cost for if.end1079 is 5
Pred cost for if.end1415 is 5
Func cost 11 for fugue2_core has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 8, preheader cost: 18
Self loop will be transformed, & body cost is 8 for loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 23, preheader cost: 21
Self loop will be transformed, & body cost is 23 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 23, preheader cost: 10
Self loop will be transformed, & body cost is 23 for loop Loop at depth 1 containing: %while.body1761<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 8, preheader cost: 12
Self loop will be transformed, & body cost is 8 for loop Loop at depth 1 containing: %while.body1761.epil<header><latch><exiting>

Func cost 1 for fugue2_core has been optimized for exit cost!
Storing cost of fugue2_core() : 12

Instrumenting loops (self loop count: 4, sese loop count: 0) for function fugue2_core

Loops scheduled for transform for fugue2_core:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body1761.epil<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body1761<header><latch><exiting>



fugue2_core(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body( fugue2_core() ). Self Loop cost: 23. Iterations: 173
Self loop is not canonical. Going for generic transformation with 173 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue2_core(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


fugue2_core(): Self loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.prol( fugue2_core() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue2_core(): Transformed Self loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>


fugue2_core(): Self loop Loop at depth 1 containing: %while.body1761.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body1761.epil( fugue2_core() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue2_core(): Transformed Self loop Loop at depth 1 containing: %while.body1761.epil<header><latch><exiting>


fugue2_core(): Self loop Loop at depth 1 containing: %while.body1761<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body1761( fugue2_core() ). Self Loop cost: 23. Iterations: 173
Self loop is not canonical. Going for generic transformation with 173 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue2_core(): Transformed Self loop Loop at depth 1 containing: %while.body1761<header><latch><exiting>

fugue3_close(): Transformed branch between if.else and if.end19 in the forward direction
fugue3_close(): Transformed branch between if.then8 and if.end19_dummy in the forward direction
fugue3_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body43<header><latch><exiting>
. Latch: do.body43, Exiting block: do.body43
fugue3_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body252<header><latch><exiting>
. Latch: do.body252, Exiting block: do.body252
Has backedges: 12 (numCost: 12)
Has backedges: 17 (numCost: 17)
Direct branch from if.then8 needs to be instrumented
Direct branch from if.else needs to be instrumented
Direct branch from entry needs to be instrumented
Self loop:- #backedges: 18, body cost: 682, preheader cost: 237
Self loop will be transformed, & body cost is 682 for loop Loop at depth 1 containing: %do.body43<header><latch><exiting>

Self loop:- #backedges: 13, body cost: 2013, preheader cost: 259
Self loop will be transformed, & body cost is 2013 for loop Loop at depth 1 containing: %do.body252<header><latch><exiting>

Func cost 718 for fugue3_close has been optimized for entry cost!
Storing cost of fugue3_close() : 718

Instrumenting loops (self loop count: 2, sese loop count: 0) for function fugue3_close

Loops scheduled for transform for fugue3_close:- 
Self Loop: Loop at depth 1 containing: %do.body252<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %do.body43<header><latch><exiting>



fugue3_close(): Self loop Loop at depth 1 containing: %do.body252<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body252( fugue3_close() ). Self Loop cost: 2013. Iterations: 1

fugue3_close(): Transformed Self loop Loop at depth 1 containing: %do.body252<header><latch><exiting>


fugue3_close(): Self loop Loop at depth 1 containing: %do.body43<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body43( fugue3_close() ). Self Loop cost: 682. Iterations: 5

fugue3_close(): Transformed Self loop Loop at depth 1 containing: %do.body43<header><latch><exiting>

fugue3_core(): Transformed branch between while.end2098.loopexit.unr-lcssa and while.end2098 in the forward direction
fugue3_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>
. Latch: while.body.prol, Exiting block: while.body.prol
fugue3_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
fugue3_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body2093<header><latch><exiting>
. Latch: while.body2093, Exiting block: while.body2093
fugue3_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body2093.epil<header><latch><exiting>
. Latch: while.body2093.epil, Exiting block: while.body2093.epil
WARNING: if.end2083 in function fugue3_core() is a rare backedge. isLatch: 0, isBackedge: 1
WARNING: if.end2083 in function fugue3_core() is a rare backedge. isLatch: 0, isBackedge: 1
Pred cost for if.end590 is 5
Pred cost for if.end1087 is 5
Pred cost for if.end1585 is 5
Func cost 11 for fugue3_core has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 8, preheader cost: 18
Self loop will be transformed, & body cost is 8 for loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 23, preheader cost: 21
Self loop will be transformed, & body cost is 23 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 23, preheader cost: 10
Self loop will be transformed, & body cost is 23 for loop Loop at depth 1 containing: %while.body2093<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 8, preheader cost: 12
Self loop will be transformed, & body cost is 8 for loop Loop at depth 1 containing: %while.body2093.epil<header><latch><exiting>

Func cost 1 for fugue3_core has been optimized for exit cost!
Storing cost of fugue3_core() : 12

Instrumenting loops (self loop count: 4, sese loop count: 0) for function fugue3_core

Loops scheduled for transform for fugue3_core:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body2093.epil<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body2093<header><latch><exiting>



fugue3_core(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body( fugue3_core() ). Self Loop cost: 23. Iterations: 173
Self loop is not canonical. Going for generic transformation with 173 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue3_core(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


fugue3_core(): Self loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.prol( fugue3_core() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue3_core(): Transformed Self loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>


fugue3_core(): Self loop Loop at depth 1 containing: %while.body2093.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body2093.epil( fugue3_core() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue3_core(): Transformed Self loop Loop at depth 1 containing: %while.body2093.epil<header><latch><exiting>


fugue3_core(): Self loop Loop at depth 1 containing: %while.body2093<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body2093( fugue3_core() ). Self Loop cost: 23. Iterations: 173
Self loop is not canonical. Going for generic transformation with 173 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue3_core(): Transformed Self loop Loop at depth 1 containing: %while.body2093<header><latch><exiting>

fugue4_close(): Transformed branch between if.else and if.end19 in the forward direction
fugue4_close(): Transformed branch between if.then8 and if.end19_dummy in the forward direction
fugue4_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body43<header><latch><exiting>
. Latch: do.body43, Exiting block: do.body43
fugue4_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body255<header><latch><exiting>
. Latch: do.body255, Exiting block: do.body255
Has backedges: 12 (numCost: 12)
Has backedges: 31 (numCost: 31)
Direct branch from if.then8 needs to be instrumented
Direct branch from if.else needs to be instrumented
Direct branch from entry needs to be instrumented
Self loop:- #backedges: 32, body cost: 682, preheader cost: 237
Self loop will be transformed, & body cost is 682 for loop Loop at depth 1 containing: %do.body43<header><latch><exiting>

Self loop:- #backedges: 13, body cost: 2695, preheader cost: 263
Self loop will be transformed, & body cost is 2695 for loop Loop at depth 1 containing: %do.body255<header><latch><exiting>

Func cost 738 for fugue4_close has been optimized for entry cost!
Storing cost of fugue4_close() : 738

Instrumenting loops (self loop count: 2, sese loop count: 0) for function fugue4_close

Loops scheduled for transform for fugue4_close:- 
Self Loop: Loop at depth 1 containing: %do.body255<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %do.body43<header><latch><exiting>



fugue4_close(): Self loop Loop at depth 1 containing: %do.body255<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body255( fugue4_close() ). Self Loop cost: 2695. Iterations: 1

fugue4_close(): Transformed Self loop Loop at depth 1 containing: %do.body255<header><latch><exiting>


fugue4_close(): Self loop Loop at depth 1 containing: %do.body43<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body43( fugue4_close() ). Self Loop cost: 682. Iterations: 5

fugue4_close(): Transformed Self loop Loop at depth 1 containing: %do.body43<header><latch><exiting>

fugue4_core(): Transformed branch between while.end2086.loopexit.unr-lcssa and while.end2086 in the forward direction
fugue4_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>
. Latch: while.body.prol, Exiting block: while.body.prol
fugue4_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
fugue4_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body2081<header><latch><exiting>
. Latch: while.body2081, Exiting block: while.body2081
fugue4_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body2081.epil<header><latch><exiting>
. Latch: while.body2081.epil, Exiting block: while.body2081.epil
WARNING: if.end2071 in function fugue4_core() is a rare backedge. isLatch: 0, isBackedge: 1
WARNING: if.end2071 in function fugue4_core() is a rare backedge. isLatch: 0, isBackedge: 1
Pred cost for if.end752 is 5
Pred cost for if.end1411 is 5
Func cost 11 for fugue4_core has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 8, preheader cost: 18
Self loop will be transformed, & body cost is 8 for loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 23, preheader cost: 21
Self loop will be transformed, & body cost is 23 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 23, preheader cost: 10
Self loop will be transformed, & body cost is 23 for loop Loop at depth 1 containing: %while.body2081<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 8, preheader cost: 12
Self loop will be transformed, & body cost is 8 for loop Loop at depth 1 containing: %while.body2081.epil<header><latch><exiting>

Func cost 1 for fugue4_core has been optimized for exit cost!
Storing cost of fugue4_core() : 12

Instrumenting loops (self loop count: 4, sese loop count: 0) for function fugue4_core

Loops scheduled for transform for fugue4_core:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body2081.epil<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body2081<header><latch><exiting>



fugue4_core(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body( fugue4_core() ). Self Loop cost: 23. Iterations: 173
Self loop is not canonical. Going for generic transformation with 173 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue4_core(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


fugue4_core(): Self loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.prol( fugue4_core() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue4_core(): Transformed Self loop Loop at depth 1 containing: %while.body.prol<header><latch><exiting>


fugue4_core(): Self loop Loop at depth 1 containing: %while.body2081.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body2081.epil( fugue4_core() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue4_core(): Transformed Self loop Loop at depth 1 containing: %while.body2081.epil<header><latch><exiting>


fugue4_core(): Self loop Loop at depth 1 containing: %while.body2081<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body2081( fugue4_core() ). Self Loop cost: 23. Iterations: 173
Self loop is not canonical. Going for generic transformation with 173 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

fugue4_core(): Transformed Self loop Loop at depth 1 containing: %while.body2081<header><latch><exiting>

Func cost 15 for sph_fugue224 has been optimized for entry cost!
Storing cost of sph_fugue224() : 15

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue224

Loops scheduled for transform for sph_fugue224:- 

Func cost 694 for sph_fugue224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_fugue224_addbits_and_close() : 694

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue224_addbits_and_close

Loops scheduled for transform for sph_fugue224_addbits_and_close:- 

Func cost 694 for sph_fugue224_close has been optimized for entry cost!
Storing cost of sph_fugue224_close() : 694

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue224_close

Loops scheduled for transform for sph_fugue224_close:- 

Func cost 216 for sph_fugue224_init has been optimized for entry cost!
Storing cost of sph_fugue224_init() : 216

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue224_init

Loops scheduled for transform for sph_fugue224_init:- 

Func cost 15 for sph_fugue256 has been optimized for entry cost!
Storing cost of sph_fugue256() : 15

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue256

Loops scheduled for transform for sph_fugue256:- 

Func cost 694 for sph_fugue256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_fugue256_addbits_and_close() : 694

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue256_addbits_and_close

Loops scheduled for transform for sph_fugue256_addbits_and_close:- 

Func cost 694 for sph_fugue256_close has been optimized for entry cost!
Storing cost of sph_fugue256_close() : 694

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue256_close

Loops scheduled for transform for sph_fugue256_close:- 

Func cost 216 for sph_fugue256_init has been optimized for entry cost!
Storing cost of sph_fugue256_init() : 216

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue256_init

Loops scheduled for transform for sph_fugue256_init:- 

Func cost 15 for sph_fugue384 has been optimized for entry cost!
Storing cost of sph_fugue384() : 15

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue384

Loops scheduled for transform for sph_fugue384:- 

Func cost 721 for sph_fugue384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_fugue384_addbits_and_close() : 721

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue384_addbits_and_close

Loops scheduled for transform for sph_fugue384_addbits_and_close:- 

Func cost 721 for sph_fugue384_close has been optimized for entry cost!
Storing cost of sph_fugue384_close() : 721

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue384_close

Loops scheduled for transform for sph_fugue384_close:- 

Func cost 216 for sph_fugue384_init has been optimized for entry cost!
Storing cost of sph_fugue384_init() : 216

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue384_init

Loops scheduled for transform for sph_fugue384_init:- 

Func cost 15 for sph_fugue512 has been optimized for entry cost!
Storing cost of sph_fugue512() : 15

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue512

Loops scheduled for transform for sph_fugue512:- 

Func cost 741 for sph_fugue512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_fugue512_addbits_and_close() : 741

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue512_addbits_and_close

Loops scheduled for transform for sph_fugue512_addbits_and_close:- 

Func cost 741 for sph_fugue512_close has been optimized for entry cost!
Storing cost of sph_fugue512_close() : 741

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue512_close

Loops scheduled for transform for sph_fugue512_close:- 

Func cost 216 for sph_fugue512_init has been optimized for entry cost!
Storing cost of sph_fugue512_init() : 216

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_fugue512_init

Loops scheduled for transform for sph_fugue512_init:- 

Total functions: 22, uninstrumented functions: 16
Optimized 25 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_fugue.o `test -f 'sha3/cpuminer-sph_fugue.ll' || echo './'`sha3/cpuminer-sph_fugue.ll
mv -f sha3/.deps/cpuminer-sph_fugue.Tpo sha3/.deps/cpuminer-sph_fugue.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_hamsi.ll -MD -MP -MF sha3/.deps/cpuminer-sph_hamsi.Tpo -c -o sha3/llvm_cpuminer-sph_hamsi.ll `test -f 'sha3/sph_hamsi.c' || echo './'`sha3/sph_hamsi.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_hamsi.c:36:
In file included from sha3/sph_hamsi.h:39:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_hamsi.ll > sha3/opt_cpuminer-sph_hamsi.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_hamsi.ll > sha3/cpuminer-sph_hamsi.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: hamsi_big
Function: hamsi_big_close
Function: hamsi_big_final
Function: hamsi_small
Function: hamsi_small_close
Function: sph_hamsi224
Function: sph_hamsi224_addbits_and_close
Function: sph_hamsi224_close
Function: sph_hamsi224_init
Function: sph_hamsi256
Function: sph_hamsi256_addbits_and_close
Function: sph_hamsi256_close
Function: sph_hamsi256_init
Function: sph_hamsi384
Function: sph_hamsi384_addbits_and_close
Function: sph_hamsi384_close
Function: sph_hamsi384_init
Function: sph_hamsi512
Function: sph_hamsi512_addbits_and_close
Function: sph_hamsi512_close
Function: sph_hamsi512_init
hamsi_big(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Has backedges: (+ -1 (ARG: 2) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 3295, preheader cost: 18
Self loop will be transformed, & body cost is 3295 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Func cost 21 for hamsi_big has been optimized for entry cost!
Storing cost of hamsi_big() : 21

Instrumenting loops (self loop count: 1, sese loop count: 0) for function hamsi_big

Loops scheduled for transform for hamsi_big:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>



hamsi_big(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( hamsi_big() ). Self Loop cost: 3295. Iterations: 1

hamsi_big(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from entry needs to be instrumented
Func cost 198 for hamsi_big_close has been optimized for entry cost!
Storing cost of hamsi_big_close() : 198

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hamsi_big_close

Loops scheduled for transform for hamsi_big_close:- 

Func cost 2220 for hamsi_big_final has been optimized for entry cost!
Storing cost of hamsi_big_final() : 2220

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hamsi_big_final

Loops scheduled for transform for hamsi_big_final:- 

hamsi_small(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Has backedges: (+ -1 (ARG: 2) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 321, preheader cost: 13
Self loop will be transformed, & body cost is 321 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Func cost 15 for hamsi_small has been optimized for entry cost!
Storing cost of hamsi_small() : 15

Instrumenting loops (self loop count: 1, sese loop count: 0) for function hamsi_small

Loops scheduled for transform for hamsi_small:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>



hamsi_small(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body( hamsi_small() ). Self Loop cost: 321. Iterations: 12
Self loop is not canonical. Going for generic transformation with 12 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

hamsi_small(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>

hamsi_small_close(): Transformed branch between for.body.preheader and for.end in the forward direction
hamsi_small_close(): Checking if simple for Loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>
. Latch: for.body.for.body_crit_edge, Exiting block: for.body.for.body_crit_edge
Direct branch from entry needs to be instrumented
Has backedges: (+ -2 (ARG: 4) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 9, preheader cost: 1200
Self loop will be transformed, & body cost is 9 for loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>

Func cost 1300 for hamsi_small_close has been optimized for entry cost!
Storing cost of hamsi_small_close() : 1300

Instrumenting loops (self loop count: 1, sese loop count: 0) for function hamsi_small_close

Loops scheduled for transform for hamsi_small_close:- 
Self Loop: Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>



hamsi_small_close(): Self loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.for.body_crit_edge( hamsi_small_close() ). Self Loop cost: 9. Iterations: 444
Self loop is not canonical. Going for generic transformation with 444 iterations.
Attempting to transform self loop for.body.for.body_crit_edge of hamsi_small_close with 444 inner loop iterations --> Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>
Found local ind var:   %inc1743 = phi i64 [ %inc17, %selfLoopOptExitBlock ], [ 1, %for.body.for.body_crit_edge.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %129 = add i64 444, %inc1743
Applied self loop transform on for.body.for.body_crit_edge( hamsi_small_close() )

hamsi_small_close(): Transformed Self loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

manageDanglingLCCs(inverted V shape): Removing cost 4 of if.then.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then.i to successor cleanup.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then.i to successor cleanup.thread.i
Pred cost for cleanup.thread.i is 125
Pred cost for if.end15.i is 122
Pred cost for cleanup.i is 108
manageDanglingLCCs(V shape): Removing cost 108 of predecessor cleanup.i for merge node hamsi_small_core.exit
manageDanglingLCCs(V shape): Removing cost 122 of predecessor if.end15.i for merge node hamsi_small_core.exit
manageDanglingLCCs(V shape): Settting average cost 115 as initial cost for merge node hamsi_small_core.exit
Func cost 6 for sph_hamsi224 has been optimized for entry cost!
Func cost 117 for sph_hamsi224 has been optimized for exit cost!
Storing cost of sph_hamsi224() : 123

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi224

Loops scheduled for transform for sph_hamsi224:- 

Func cost 1411 for sph_hamsi224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_hamsi224_addbits_and_close() : 1411

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi224_addbits_and_close

Loops scheduled for transform for sph_hamsi224_addbits_and_close:- 

Func cost 1411 for sph_hamsi224_close has been optimized for entry cost!
Storing cost of sph_hamsi224_close() : 1411

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi224_close

Loops scheduled for transform for sph_hamsi224_close:- 

Func cost 109 for sph_hamsi224_init has been optimized for entry cost!
Storing cost of sph_hamsi224_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi224_init

Loops scheduled for transform for sph_hamsi224_init:- 

manageDanglingLCCs(inverted V shape): Removing cost 4 of if.then.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then.i to successor cleanup.thread.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then.i to successor cleanup.i
Pred cost for cleanup.thread.i is 125
Pred cost for if.end15.i is 122
Pred cost for cleanup.i is 108
manageDanglingLCCs(V shape): Removing cost 108 of predecessor cleanup.i for merge node hamsi_small_core.exit
manageDanglingLCCs(V shape): Removing cost 122 of predecessor if.end15.i for merge node hamsi_small_core.exit
manageDanglingLCCs(V shape): Settting average cost 115 as initial cost for merge node hamsi_small_core.exit
Func cost 6 for sph_hamsi256 has been optimized for entry cost!
Func cost 117 for sph_hamsi256 has been optimized for exit cost!
Storing cost of sph_hamsi256() : 123

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi256

Loops scheduled for transform for sph_hamsi256:- 

Func cost 1411 for sph_hamsi256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_hamsi256_addbits_and_close() : 1411

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi256_addbits_and_close

Loops scheduled for transform for sph_hamsi256_addbits_and_close:- 

Func cost 1411 for sph_hamsi256_close has been optimized for entry cost!
Storing cost of sph_hamsi256_close() : 1411

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi256_close

Loops scheduled for transform for sph_hamsi256_close:- 

Func cost 109 for sph_hamsi256_init has been optimized for entry cost!
Storing cost of sph_hamsi256_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi256_init

Loops scheduled for transform for sph_hamsi256_init:- 

manageDanglingLCCs(inverted V shape): Removing cost 4 of if.then.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then.i to successor cleanup.thread.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then.i to successor cleanup.i
Pred cost for cleanup.thread.i is 131
Pred cost for if.end15.i is 128
Pred cost for cleanup.i is 108
manageDanglingLCCs(V shape): Removing cost 108 of predecessor cleanup.i for merge node hamsi_big_core.exit
manageDanglingLCCs(V shape): Removing cost 128 of predecessor if.end15.i for merge node hamsi_big_core.exit
manageDanglingLCCs(V shape): Settting average cost 118 as initial cost for merge node hamsi_big_core.exit
Func cost 6 for sph_hamsi384 has been optimized for entry cost!
Func cost 120 for sph_hamsi384 has been optimized for exit cost!
Storing cost of sph_hamsi384() : 126

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi384

Loops scheduled for transform for sph_hamsi384:- 

Func cost 309 for sph_hamsi384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_hamsi384_addbits_and_close() : 309

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi384_addbits_and_close

Loops scheduled for transform for sph_hamsi384_addbits_and_close:- 

Func cost 309 for sph_hamsi384_close has been optimized for entry cost!
Storing cost of sph_hamsi384_close() : 309

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi384_close

Loops scheduled for transform for sph_hamsi384_close:- 

Func cost 109 for sph_hamsi384_init has been optimized for entry cost!
Storing cost of sph_hamsi384_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi384_init

Loops scheduled for transform for sph_hamsi384_init:- 

manageDanglingLCCs(inverted V shape): Removing cost 4 of if.then.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then.i to successor cleanup.thread.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then.i to successor cleanup.i
Pred cost for cleanup.thread.i is 131
Pred cost for if.end15.i is 128
Pred cost for cleanup.i is 108
manageDanglingLCCs(V shape): Removing cost 108 of predecessor cleanup.i for merge node hamsi_big_core.exit
manageDanglingLCCs(V shape): Removing cost 128 of predecessor if.end15.i for merge node hamsi_big_core.exit
manageDanglingLCCs(V shape): Settting average cost 118 as initial cost for merge node hamsi_big_core.exit
Func cost 6 for sph_hamsi512 has been optimized for entry cost!
Func cost 120 for sph_hamsi512 has been optimized for exit cost!
Storing cost of sph_hamsi512() : 126

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi512

Loops scheduled for transform for sph_hamsi512:- 

Func cost 309 for sph_hamsi512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_hamsi512_addbits_and_close() : 309

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi512_addbits_and_close

Loops scheduled for transform for sph_hamsi512_addbits_and_close:- 

Func cost 309 for sph_hamsi512_close has been optimized for entry cost!
Storing cost of sph_hamsi512_close() : 309

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi512_close

Loops scheduled for transform for sph_hamsi512_close:- 

Func cost 109 for sph_hamsi512_init has been optimized for entry cost!
Storing cost of sph_hamsi512_init() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_hamsi512_init

Loops scheduled for transform for sph_hamsi512_init:- 

Total functions: 21, uninstrumented functions: 12
Optimized 25 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_hamsi.o `test -f 'sha3/cpuminer-sph_hamsi.ll' || echo './'`sha3/cpuminer-sph_hamsi.ll
mv -f sha3/.deps/cpuminer-sph_hamsi.Tpo sha3/.deps/cpuminer-sph_hamsi.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_haval.ll -MD -MP -MF sha3/.deps/cpuminer-sph_haval.Tpo -c -o sha3/llvm_cpuminer-sph_haval.ll `test -f 'sha3/sph_haval.c' || echo './'`sha3/sph_haval.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_haval.c:42:
In file included from sha3/sph_haval.h:65:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_haval.ll > sha3/opt_cpuminer-sph_haval.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_haval.ll > sha3/cpuminer-sph_haval.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: haval3
Function: haval3_close
Function: haval3_short
Function: haval4
Function: haval4_close
Function: haval4_short
Function: haval5
Function: haval5_close
Function: haval5_short
Function: haval_out
Function: sph_haval128_3
Function: sph_haval128_3_close
Function: sph_haval128_3_init
Function: sph_haval128_3addbits_and_close
Function: sph_haval128_4
Function: sph_haval128_4_close
Function: sph_haval128_4_init
Function: sph_haval128_4addbits_and_close
Function: sph_haval128_5
Function: sph_haval128_5_close
Function: sph_haval128_5_init
Function: sph_haval128_5addbits_and_close
Function: sph_haval160_3
Function: sph_haval160_3_close
Function: sph_haval160_3_init
Function: sph_haval160_3addbits_and_close
Function: sph_haval160_4
Function: sph_haval160_4_close
Function: sph_haval160_4_init
Function: sph_haval160_4addbits_and_close
Function: sph_haval160_5
Function: sph_haval160_5_close
Function: sph_haval160_5_init
Function: sph_haval160_5addbits_and_close
Function: sph_haval192_3
Function: sph_haval192_3_close
Function: sph_haval192_3_init
Function: sph_haval192_3addbits_and_close
Function: sph_haval192_4
Function: sph_haval192_4_close
Function: sph_haval192_4_init
Function: sph_haval192_4addbits_and_close
Function: sph_haval192_5
Function: sph_haval192_5_close
Function: sph_haval192_5_init
Function: sph_haval192_5addbits_and_close
Function: sph_haval224_3
Function: sph_haval224_3_close
Function: sph_haval224_3_init
Function: sph_haval224_3addbits_and_close
Function: sph_haval224_4
Function: sph_haval224_4_close
Function: sph_haval224_4_init
Function: sph_haval224_4addbits_and_close
Function: sph_haval224_5
Function: sph_haval224_5_close
Function: sph_haval224_5_init
Function: sph_haval224_5addbits_and_close
Function: sph_haval256_3
Function: sph_haval256_3_close
Function: sph_haval256_3_init
Function: sph_haval256_3addbits_and_close
Function: sph_haval256_4
Function: sph_haval256_4_close
Function: sph_haval256_4_init
Function: sph_haval256_4addbits_and_close
Function: sph_haval256_5
Function: sph_haval256_5_close
Function: sph_haval256_5_init
Function: sph_haval256_5addbits_and_close
Function: sph_haval_3_comp
Function: sph_haval_4_comp
Function: sph_haval_5_comp
haval3(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Self loop:- #backedges: 0, body cost: 1838, preheader cost: 26
Self loop will be transformed, & body cost is 1838 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from do.body2406 needs to be instrumented
Func cost 5 for haval3 has been optimized for entry cost!
Storing cost of haval3() : 5

Instrumenting loops (self loop count: 1, sese loop count: 0) for function haval3

Loops scheduled for transform for haval3:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>



haval3(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( haval3() ). Self Loop cost: 1838. Iterations: 2

haval3(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Func cost 1962 for haval3_close has been optimized for entry cost!
Storing cost of haval3_close() : 1962

Instrumenting loops (self loop count: 0, sese loop count: 0) for function haval3_close

Loops scheduled for transform for haval3_close:- 

haval3_short(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end2422<latch><exiting>
. Latch: if.end2422, Exiting block: if.end2422
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body
Func cost 50 for haval3_short has been optimized for entry cost!
Storing cost of haval3_short() : 50

Instrumenting loops (self loop count: 0, sese loop count: 1) for function haval3_short

Loops scheduled for transform for haval3_short:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end2422<latch><exiting>,%while.bodyDirectSucc



haval3_short(): Max depth loop Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end2422<latch><exiting>,%while.bodyDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body( haval3_short() )

haval3_short(): Transformed loop Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end2422<latch><exiting>,%while.bodyDirectSucc

haval4(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Self loop:- #backedges: 0, body cost: 2603, preheader cost: 26
Self loop will be transformed, & body cost is 2603 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from do.body3369 needs to be instrumented
Func cost 5 for haval4 has been optimized for entry cost!
Storing cost of haval4() : 5

Instrumenting loops (self loop count: 1, sese loop count: 0) for function haval4

Loops scheduled for transform for haval4:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>



haval4(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( haval4() ). Self Loop cost: 2603. Iterations: 1

haval4(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Func cost 2727 for haval4_close has been optimized for entry cost!
Storing cost of haval4_close() : 2727

Instrumenting loops (self loop count: 0, sese loop count: 0) for function haval4_close

Loops scheduled for transform for haval4_close:- 

haval4_short(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end3385<latch><exiting>
. Latch: if.end3385, Exiting block: if.end3385
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body
Func cost 50 for haval4_short has been optimized for entry cost!
Storing cost of haval4_short() : 50

Instrumenting loops (self loop count: 0, sese loop count: 1) for function haval4_short

Loops scheduled for transform for haval4_short:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end3385<latch><exiting>,%while.bodyDirectSucc



haval4_short(): Max depth loop Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end3385<latch><exiting>,%while.bodyDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body( haval4_short() )

haval4_short(): Transformed loop Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end3385<latch><exiting>,%while.bodyDirectSucc

haval5(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Self loop:- #backedges: 0, body cost: 3236, preheader cost: 26
Self loop will be transformed, & body cost is 3236 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from do.body4204 needs to be instrumented
Func cost 5 for haval5 has been optimized for entry cost!
Storing cost of haval5() : 5

Instrumenting loops (self loop count: 1, sese loop count: 0) for function haval5

Loops scheduled for transform for haval5:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>



haval5(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( haval5() ). Self Loop cost: 3236. Iterations: 1

haval5(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Func cost 3360 for haval5_close has been optimized for entry cost!
Storing cost of haval5_close() : 3360

Instrumenting loops (self loop count: 0, sese loop count: 0) for function haval5_close

Loops scheduled for transform for haval5_close:- 

haval5_short(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end4220<latch><exiting>
. Latch: if.end4220, Exiting block: if.end4220
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body
Func cost 50 for haval5_short has been optimized for entry cost!
Storing cost of haval5_short() : 50

Instrumenting loops (self loop count: 0, sese loop count: 1) for function haval5_short

Loops scheduled for transform for haval5_short:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end4220<latch><exiting>,%while.bodyDirectSucc



haval5_short(): Max depth loop Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end4220<latch><exiting>,%while.bodyDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body( haval5_short() )

haval5_short(): Transformed loop Loop at depth 1 containing: %while.body<header>,%if.then13,%if.end4220<latch><exiting>,%while.bodyDirectSucc

Pred cost for sw.bb75 is 13
Pred cost for sw.bb50 is 42
Pred cost for sw.bb32 is 49
Pred cost for sw.bb17 is 52
Pred cost for sw.bb is 50
manageDanglingLCCs(V shape): Removing cost 50 of predecessor sw.bb for merge node sw.epilog.sink.split
manageDanglingLCCs(V shape): Removing cost 52 of predecessor sw.bb17 for merge node sw.epilog.sink.split
manageDanglingLCCs(V shape): Removing cost 49 of predecessor sw.bb32 for merge node sw.epilog.sink.split
manageDanglingLCCs(V shape): Removing cost 42 of predecessor sw.bb50 for merge node sw.epilog.sink.split
manageDanglingLCCs(V shape): Removing cost 13 of predecessor sw.bb75 for merge node sw.epilog.sink.split
manageDanglingLCCs(V shape): Settting average cost 41 as initial cost for merge node sw.epilog.sink.split
Pred cost for sw.epilog.sink.split is 44
Func cost 14 for haval_out has been optimized for entry cost!
Func cost 1 for haval_out has been optimized for exit cost!
Storing cost of haval_out() : 15

Instrumenting loops (self loop count: 0, sese loop count: 0) for function haval_out

Loops scheduled for transform for haval_out:- 

Func cost 8 for sph_haval128_3 has been optimized for entry cost!
Storing cost of sph_haval128_3() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_3

Loops scheduled for transform for sph_haval128_3:- 

Func cost 1965 for sph_haval128_3_close has been optimized for entry cost!
Storing cost of sph_haval128_3_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_3_close

Loops scheduled for transform for sph_haval128_3_close:- 

Func cost 13 for sph_haval128_3_init has been optimized for entry cost!
Storing cost of sph_haval128_3_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_3_init

Loops scheduled for transform for sph_haval128_3_init:- 

Func cost 1965 for sph_haval128_3addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval128_3addbits_and_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_3addbits_and_close

Loops scheduled for transform for sph_haval128_3addbits_and_close:- 

Func cost 8 for sph_haval128_4 has been optimized for entry cost!
Storing cost of sph_haval128_4() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_4

Loops scheduled for transform for sph_haval128_4:- 

Func cost 2730 for sph_haval128_4_close has been optimized for entry cost!
Storing cost of sph_haval128_4_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_4_close

Loops scheduled for transform for sph_haval128_4_close:- 

Func cost 13 for sph_haval128_4_init has been optimized for entry cost!
Storing cost of sph_haval128_4_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_4_init

Loops scheduled for transform for sph_haval128_4_init:- 

Func cost 2730 for sph_haval128_4addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval128_4addbits_and_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_4addbits_and_close

Loops scheduled for transform for sph_haval128_4addbits_and_close:- 

Func cost 8 for sph_haval128_5 has been optimized for entry cost!
Storing cost of sph_haval128_5() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_5

Loops scheduled for transform for sph_haval128_5:- 

Func cost 3363 for sph_haval128_5_close has been optimized for entry cost!
Storing cost of sph_haval128_5_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_5_close

Loops scheduled for transform for sph_haval128_5_close:- 

Func cost 13 for sph_haval128_5_init has been optimized for entry cost!
Storing cost of sph_haval128_5_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_5_init

Loops scheduled for transform for sph_haval128_5_init:- 

Func cost 3363 for sph_haval128_5addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval128_5addbits_and_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval128_5addbits_and_close

Loops scheduled for transform for sph_haval128_5addbits_and_close:- 

Func cost 8 for sph_haval160_3 has been optimized for entry cost!
Storing cost of sph_haval160_3() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_3

Loops scheduled for transform for sph_haval160_3:- 

Func cost 1965 for sph_haval160_3_close has been optimized for entry cost!
Storing cost of sph_haval160_3_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_3_close

Loops scheduled for transform for sph_haval160_3_close:- 

Func cost 13 for sph_haval160_3_init has been optimized for entry cost!
Storing cost of sph_haval160_3_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_3_init

Loops scheduled for transform for sph_haval160_3_init:- 

Func cost 1965 for sph_haval160_3addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval160_3addbits_and_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_3addbits_and_close

Loops scheduled for transform for sph_haval160_3addbits_and_close:- 

Func cost 8 for sph_haval160_4 has been optimized for entry cost!
Storing cost of sph_haval160_4() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_4

Loops scheduled for transform for sph_haval160_4:- 

Func cost 2730 for sph_haval160_4_close has been optimized for entry cost!
Storing cost of sph_haval160_4_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_4_close

Loops scheduled for transform for sph_haval160_4_close:- 

Func cost 13 for sph_haval160_4_init has been optimized for entry cost!
Storing cost of sph_haval160_4_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_4_init

Loops scheduled for transform for sph_haval160_4_init:- 

Func cost 2730 for sph_haval160_4addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval160_4addbits_and_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_4addbits_and_close

Loops scheduled for transform for sph_haval160_4addbits_and_close:- 

Func cost 8 for sph_haval160_5 has been optimized for entry cost!
Storing cost of sph_haval160_5() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_5

Loops scheduled for transform for sph_haval160_5:- 

Func cost 3363 for sph_haval160_5_close has been optimized for entry cost!
Storing cost of sph_haval160_5_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_5_close

Loops scheduled for transform for sph_haval160_5_close:- 

Func cost 13 for sph_haval160_5_init has been optimized for entry cost!
Storing cost of sph_haval160_5_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_5_init

Loops scheduled for transform for sph_haval160_5_init:- 

Func cost 3363 for sph_haval160_5addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval160_5addbits_and_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval160_5addbits_and_close

Loops scheduled for transform for sph_haval160_5addbits_and_close:- 

Func cost 8 for sph_haval192_3 has been optimized for entry cost!
Storing cost of sph_haval192_3() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_3

Loops scheduled for transform for sph_haval192_3:- 

Func cost 1965 for sph_haval192_3_close has been optimized for entry cost!
Storing cost of sph_haval192_3_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_3_close

Loops scheduled for transform for sph_haval192_3_close:- 

Func cost 13 for sph_haval192_3_init has been optimized for entry cost!
Storing cost of sph_haval192_3_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_3_init

Loops scheduled for transform for sph_haval192_3_init:- 

Func cost 1965 for sph_haval192_3addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval192_3addbits_and_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_3addbits_and_close

Loops scheduled for transform for sph_haval192_3addbits_and_close:- 

Func cost 8 for sph_haval192_4 has been optimized for entry cost!
Storing cost of sph_haval192_4() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_4

Loops scheduled for transform for sph_haval192_4:- 

Func cost 2730 for sph_haval192_4_close has been optimized for entry cost!
Storing cost of sph_haval192_4_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_4_close

Loops scheduled for transform for sph_haval192_4_close:- 

Func cost 13 for sph_haval192_4_init has been optimized for entry cost!
Storing cost of sph_haval192_4_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_4_init

Loops scheduled for transform for sph_haval192_4_init:- 

Func cost 2730 for sph_haval192_4addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval192_4addbits_and_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_4addbits_and_close

Loops scheduled for transform for sph_haval192_4addbits_and_close:- 

Func cost 8 for sph_haval192_5 has been optimized for entry cost!
Storing cost of sph_haval192_5() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_5

Loops scheduled for transform for sph_haval192_5:- 

Func cost 3363 for sph_haval192_5_close has been optimized for entry cost!
Storing cost of sph_haval192_5_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_5_close

Loops scheduled for transform for sph_haval192_5_close:- 

Func cost 13 for sph_haval192_5_init has been optimized for entry cost!
Storing cost of sph_haval192_5_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_5_init

Loops scheduled for transform for sph_haval192_5_init:- 

Func cost 3363 for sph_haval192_5addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval192_5addbits_and_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval192_5addbits_and_close

Loops scheduled for transform for sph_haval192_5addbits_and_close:- 

Func cost 8 for sph_haval224_3 has been optimized for entry cost!
Storing cost of sph_haval224_3() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_3

Loops scheduled for transform for sph_haval224_3:- 

Func cost 1965 for sph_haval224_3_close has been optimized for entry cost!
Storing cost of sph_haval224_3_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_3_close

Loops scheduled for transform for sph_haval224_3_close:- 

Func cost 13 for sph_haval224_3_init has been optimized for entry cost!
Storing cost of sph_haval224_3_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_3_init

Loops scheduled for transform for sph_haval224_3_init:- 

Func cost 1965 for sph_haval224_3addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval224_3addbits_and_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_3addbits_and_close

Loops scheduled for transform for sph_haval224_3addbits_and_close:- 

Func cost 8 for sph_haval224_4 has been optimized for entry cost!
Storing cost of sph_haval224_4() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_4

Loops scheduled for transform for sph_haval224_4:- 

Func cost 2730 for sph_haval224_4_close has been optimized for entry cost!
Storing cost of sph_haval224_4_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_4_close

Loops scheduled for transform for sph_haval224_4_close:- 

Func cost 13 for sph_haval224_4_init has been optimized for entry cost!
Storing cost of sph_haval224_4_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_4_init

Loops scheduled for transform for sph_haval224_4_init:- 

Func cost 2730 for sph_haval224_4addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval224_4addbits_and_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_4addbits_and_close

Loops scheduled for transform for sph_haval224_4addbits_and_close:- 

Func cost 8 for sph_haval224_5 has been optimized for entry cost!
Storing cost of sph_haval224_5() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_5

Loops scheduled for transform for sph_haval224_5:- 

Func cost 3363 for sph_haval224_5_close has been optimized for entry cost!
Storing cost of sph_haval224_5_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_5_close

Loops scheduled for transform for sph_haval224_5_close:- 

Func cost 13 for sph_haval224_5_init has been optimized for entry cost!
Storing cost of sph_haval224_5_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_5_init

Loops scheduled for transform for sph_haval224_5_init:- 

Func cost 3363 for sph_haval224_5addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval224_5addbits_and_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval224_5addbits_and_close

Loops scheduled for transform for sph_haval224_5addbits_and_close:- 

Func cost 8 for sph_haval256_3 has been optimized for entry cost!
Storing cost of sph_haval256_3() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_3

Loops scheduled for transform for sph_haval256_3:- 

Func cost 1965 for sph_haval256_3_close has been optimized for entry cost!
Storing cost of sph_haval256_3_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_3_close

Loops scheduled for transform for sph_haval256_3_close:- 

Func cost 13 for sph_haval256_3_init has been optimized for entry cost!
Storing cost of sph_haval256_3_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_3_init

Loops scheduled for transform for sph_haval256_3_init:- 

Func cost 1965 for sph_haval256_3addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval256_3addbits_and_close() : 1965

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_3addbits_and_close

Loops scheduled for transform for sph_haval256_3addbits_and_close:- 

Func cost 8 for sph_haval256_4 has been optimized for entry cost!
Storing cost of sph_haval256_4() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_4

Loops scheduled for transform for sph_haval256_4:- 

Func cost 2730 for sph_haval256_4_close has been optimized for entry cost!
Storing cost of sph_haval256_4_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_4_close

Loops scheduled for transform for sph_haval256_4_close:- 

Func cost 13 for sph_haval256_4_init has been optimized for entry cost!
Storing cost of sph_haval256_4_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_4_init

Loops scheduled for transform for sph_haval256_4_init:- 

Func cost 2730 for sph_haval256_4addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval256_4addbits_and_close() : 2730

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_4addbits_and_close

Loops scheduled for transform for sph_haval256_4addbits_and_close:- 

Func cost 8 for sph_haval256_5 has been optimized for entry cost!
Storing cost of sph_haval256_5() : 8

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_5

Loops scheduled for transform for sph_haval256_5:- 

Func cost 3363 for sph_haval256_5_close has been optimized for entry cost!
Storing cost of sph_haval256_5_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_5_close

Loops scheduled for transform for sph_haval256_5_close:- 

Func cost 13 for sph_haval256_5_init has been optimized for entry cost!
Storing cost of sph_haval256_5_init() : 13

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_5_init

Loops scheduled for transform for sph_haval256_5_init:- 

Func cost 3363 for sph_haval256_5addbits_and_close has been optimized for entry cost!
Storing cost of sph_haval256_5addbits_and_close() : 3363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval256_5addbits_and_close

Loops scheduled for transform for sph_haval256_5addbits_and_close:- 

Func cost 1819 for sph_haval_3_comp has been optimized for entry cost!
Storing cost of sph_haval_3_comp() : 1819

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval_3_comp

Loops scheduled for transform for sph_haval_3_comp:- 

Func cost 2584 for sph_haval_4_comp has been optimized for entry cost!
Storing cost of sph_haval_4_comp() : 2584

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval_4_comp

Loops scheduled for transform for sph_haval_4_comp:- 

Func cost 3217 for sph_haval_5_comp has been optimized for entry cost!
Storing cost of sph_haval_5_comp() : 3217

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_haval_5_comp

Loops scheduled for transform for sph_haval_5_comp:- 

Total functions: 73, uninstrumented functions: 63
Optimized 74 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_haval.o `test -f 'sha3/cpuminer-sph_haval.ll' || echo './'`sha3/cpuminer-sph_haval.ll
mv -f sha3/.deps/cpuminer-sph_haval.Tpo sha3/.deps/cpuminer-sph_haval.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_panama.ll -MD -MP -MF sha3/.deps/cpuminer-sph_panama.Tpo -c -o sha3/llvm_cpuminer-sph_panama.ll `test -f 'sha3/sph_panama.c' || echo './'`sha3/sph_panama.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_panama.c:36:
In file included from sha3/sph_panama.h:61:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_panama.ll > sha3/opt_cpuminer-sph_panama.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_panama.ll > sha3/cpuminer-sph_panama.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: panama_push
Function: sph_panama
Function: sph_panama_close
Function: sph_panama_init
panama_push(): Checking if simple for Loop Loop at depth 1 containing: %do.body33<header><latch><exiting>
. Latch: do.body33, Exiting block: do.body33
Has backedges: (+ -1 (ARG: 2) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 273, preheader cost: 39
Self loop will be transformed, & body cost is 273 for loop Loop at depth 1 containing: %do.body33<header><latch><exiting>

Func cost 58 for panama_push has been optimized for entry cost!
Storing cost of panama_push() : 58

Instrumenting loops (self loop count: 1, sese loop count: 0) for function panama_push

Loops scheduled for transform for panama_push:- 
Self Loop: Loop at depth 1 containing: %do.body33<header><latch><exiting>



panama_push(): Self loop Loop at depth 1 containing: %do.body33<header><latch><exiting>


This selfloop will be transformed & instrumented --> do.body33( panama_push() ). Self Loop cost: 273. Iterations: 14
Self loop is not canonical. Going for generic transformation with 14 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

panama_push(): Transformed Self loop Loop at depth 1 containing: %do.body33<header><latch><exiting>

sph_panama(): Transformed branch between if.then and cleanup in the forward direction
sph_panama(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then15.i,%if.end18.i<latch><exiting>
. Latch: if.end18.i, Exiting block: if.end18.i
sph_panama(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i59<header>,%if.then15.i60,%if.end18.i63<latch><exiting>
. Latch: if.end18.i63, Exiting block: if.end18.i63
Instrumenting loop with body cost: 146
Non-header-colocated-exit loop will be transformed, & body cost is 146 for loop with header while.body.i
Instrumenting loop with body cost: 146
Non-header-colocated-exit loop will be transformed, & body cost is 146 for loop with header while.body.i59
Direct branch from if.end7 needs to be instrumented
Func cost 8 for sph_panama has been optimized for entry cost!
Storing cost of sph_panama() : 8

Instrumenting loops (self loop count: 0, sese loop count: 2) for function sph_panama

Loops scheduled for transform for sph_panama:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then15.i,%if.end18.i<latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i59<header>,%if.then15.i60,%if.end18.i63<latch><exiting>



sph_panama(): Max depth loop Loop at depth 1 containing: %while.body.i59<header>,%if.then15.i60,%if.end18.i63<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i59( sph_panama() )

sph_panama(): Transformed loop Loop at depth 1 containing: %while.body.i59<header>,%if.then15.i60,%if.end18.i63<latch><exiting>


sph_panama(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then15.i,%if.end18.i<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_panama() )

sph_panama(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then15.i,%if.end18.i<latch><exiting>

sph_panama_close(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>
. Latch: while.body.i, Exiting block: while.body.i
Has backedges: 31 (numCost: 31)
Self loop:- #backedges: 32, body cost: 238, preheader cost: 220
Self loop will be transformed, & body cost is 238 for loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>

Func cost 391 for sph_panama_close has been optimized for entry cost!
Storing cost of sph_panama_close() : 391

Instrumenting loops (self loop count: 1, sese loop count: 0) for function sph_panama_close

Loops scheduled for transform for sph_panama_close:- 
Self Loop: Loop at depth 1 containing: %while.body.i<header><latch><exiting>



sph_panama_close(): Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i( sph_panama_close() ). Self Loop cost: 238. Iterations: 16
Self loop is not canonical. Going for generic transformation with 16 iterations.
Attempting to transform self loop while.body.i of sph_panama_close with 16 inner loop iterations --> Loop at depth 1 containing: %while.body.i<header><latch><exiting>
Found local ind var:   %num.addr.019.i = phi i32 [ 32, %entry ], [ %dec.i, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i32 
User in header block to replace Phi:   %34 = add i32 -16, %num.addr.019.i
Applied self loop transform on while.body.i( sph_panama_close() )

sph_panama_close(): Transformed Self loop Loop at depth 1 containing: %while.body.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

Func cost 103 for sph_panama_init has been optimized for entry cost!
Storing cost of sph_panama_init() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_panama_init

Loops scheduled for transform for sph_panama_init:- 

Total functions: 4, uninstrumented functions: 1
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_panama.o `test -f 'sha3/cpuminer-sph_panama.ll' || echo './'`sha3/cpuminer-sph_panama.ll
mv -f sha3/.deps/cpuminer-sph_panama.Tpo sha3/.deps/cpuminer-sph_panama.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_radiogatun.ll -MD -MP -MF sha3/.deps/cpuminer-sph_radiogatun.Tpo -c -o sha3/llvm_cpuminer-sph_radiogatun.ll `test -f 'sha3/sph_radiogatun.c' || echo './'`sha3/sph_radiogatun.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_radiogatun.c:36:
In file included from sha3/sph_radiogatun.h:74:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_radiogatun.ll > sha3/opt_cpuminer-sph_radiogatun.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_radiogatun.ll > sha3/cpuminer-sph_radiogatun.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: radiogatun32_push13
Function: radiogatun64_push13
Function: sph_radiogatun32
Function: sph_radiogatun32_close
Function: sph_radiogatun32_init
Function: sph_radiogatun64
Function: sph_radiogatun64_close
Function: sph_radiogatun64_init
radiogatun32_push13(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Has backedges: (/ (+ -156 (ARG: 2) ) 156 ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 2343, preheader cost: 119
Self loop will be transformed, & body cost is 2343 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Func cost 178 for radiogatun32_push13 has been optimized for entry cost!
Storing cost of radiogatun32_push13() : 178

Instrumenting loops (self loop count: 1, sese loop count: 0) for function radiogatun32_push13

Loops scheduled for transform for radiogatun32_push13:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>



radiogatun32_push13(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( radiogatun32_push13() ). Self Loop cost: 2343. Iterations: 1

radiogatun32_push13(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>

radiogatun64_push13(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Has backedges: (/ (+ -312 (ARG: 2) ) 312 ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 2343, preheader cost: 119
Self loop will be transformed, & body cost is 2343 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Func cost 178 for radiogatun64_push13 has been optimized for entry cost!
Storing cost of radiogatun64_push13() : 178

Instrumenting loops (self loop count: 1, sese loop count: 0) for function radiogatun64_push13

Loops scheduled for transform for radiogatun64_push13:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>



radiogatun64_push13(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( radiogatun64_push13() ). Self Loop cost: 2343. Iterations: 1

radiogatun64_push13(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>

sph_radiogatun32(): Transformed branch between if.then and cleanup in the forward direction
sph_radiogatun32(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then11.i,%if.end14.i<latch><exiting>
. Latch: if.end14.i, Exiting block: if.end14.i
sph_radiogatun32(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i50<header>,%if.then11.i52,%if.end14.i55<latch><exiting>
. Latch: if.end14.i55, Exiting block: if.end14.i55
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Direct branch from while.body.i50 needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i50
Func cost 2 for sph_radiogatun32 has been optimized for entry cost!
Storing cost of sph_radiogatun32() : 2

Instrumenting loops (self loop count: 0, sese loop count: 2) for function sph_radiogatun32

Loops scheduled for transform for sph_radiogatun32:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then11.i,%if.end14.i<latch><exiting>,%while.body.iDirectSucc

Sese Loop: Loop at depth 1 containing: %while.body.i50<header>,%if.then11.i52,%if.end14.i55<latch><exiting>,%while.body.i50DirectSucc



sph_radiogatun32(): Max depth loop Loop at depth 1 containing: %while.body.i50<header>,%if.then11.i52,%if.end14.i55<latch><exiting>,%while.body.i50DirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i50( sph_radiogatun32() )

sph_radiogatun32(): Transformed loop Loop at depth 1 containing: %while.body.i50<header>,%if.then11.i52,%if.end14.i55<latch><exiting>,%while.body.i50DirectSucc


sph_radiogatun32(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then11.i,%if.end14.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_radiogatun32() )

sph_radiogatun32(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then11.i,%if.end14.i<latch><exiting>,%while.body.iDirectSucc

sph_radiogatun32_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body3109<header><latch><exiting>
. Latch: do.body3109, Exiting block: do.body3109
Direct branch from entry needs to be instrumented
Self loop:- #backedges: 0, body cost: 168, preheader cost: 3
Self loop will be transformed, & body cost is 168 for loop Loop at depth 1 containing: %do.body3109<header><latch><exiting>

Func cost 457 for sph_radiogatun32_close has been optimized for entry cost!
Storing cost of sph_radiogatun32_close() : 457

Instrumenting loops (self loop count: 1, sese loop count: 0) for function sph_radiogatun32_close

Loops scheduled for transform for sph_radiogatun32_close:- 
Self Loop: Loop at depth 1 containing: %do.body3109<header><latch><exiting>



sph_radiogatun32_close(): Self loop Loop at depth 1 containing: %do.body3109<header><latch><exiting>


This selfloop will be transformed & instrumented --> do.body3109( sph_radiogatun32_close() ). Self Loop cost: 168. Iterations: 23
Self loop is not canonical. Going for generic transformation with 23 iterations.
Attempting to transform self loop do.body3109 of sph_radiogatun32_close with 23 inner loop iterations --> Loop at depth 1 containing: %do.body3109<header><latch><exiting>
Found local ind var:   %num.26963 = phi i32 [ %dec3106, %selfLoopOptExitBlock ], [ %num.1, %do.body3109.preheader ], mapping it to   %phiIVClone = phi i32 
User in header block to replace Phi:   %131 = add i32 -23, %num.26963
User in header block to replace Phi:   %b1_1.16939 = phi i32 [ %b0_1.16942, %selfLoopOptExitBlock ], [ %b1_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b1_2.16938 = phi i32 [ %b0_2.16941, %selfLoopOptExitBlock ], [ %b1_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b2_0.16937 = phi i32 [ %b1_0.16940, %selfLoopOptExitBlock ], [ %b2_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b2_2.16935 = phi i32 [ %b1_2.16938, %selfLoopOptExitBlock ], [ %b2_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b3_0.16934 = phi i32 [ %b2_0.16937, %selfLoopOptExitBlock ], [ %b3_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b3_1.16933 = phi i32 [ %b2_1.16936, %selfLoopOptExitBlock ], [ %b3_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b4_1.16930 = phi i32 [ %b3_1.16933, %selfLoopOptExitBlock ], [ %b4_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b4_2.16929 = phi i32 [ %b3_2.16932, %selfLoopOptExitBlock ], [ %b4_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b5_0.16928 = phi i32 [ %b4_0.16931, %selfLoopOptExitBlock ], [ %b5_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b5_2.16926 = phi i32 [ %b4_2.16929, %selfLoopOptExitBlock ], [ %b5_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b6_0.16925 = phi i32 [ %b5_0.16928, %selfLoopOptExitBlock ], [ %b6_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b6_1.16924 = phi i32 [ %b5_1.16927, %selfLoopOptExitBlock ], [ %b6_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b7_1.16921 = phi i32 [ %b6_1.16924, %selfLoopOptExitBlock ], [ %b7_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b7_2.16920 = phi i32 [ %b6_2.16923, %selfLoopOptExitBlock ], [ %b7_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b8_0.16919 = phi i32 [ %b7_0.16922, %selfLoopOptExitBlock ], [ %b8_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b8_2.16917 = phi i32 [ %b7_2.16920, %selfLoopOptExitBlock ], [ %b8_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b9_0.16916 = phi i32 [ %b8_0.16919, %selfLoopOptExitBlock ], [ %b9_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b9_1.16915 = phi i32 [ %b8_1.16918, %selfLoopOptExitBlock ], [ %b9_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b10_1.16912 = phi i32 [ %b9_1.16915, %selfLoopOptExitBlock ], [ %b10_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b10_2.16911 = phi i32 [ %b9_2.16914, %selfLoopOptExitBlock ], [ %b10_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b11_0.16910 = phi i32 [ %b10_0.16913, %selfLoopOptExitBlock ], [ %b11_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b11_2.16908 = phi i32 [ %b10_2.16911, %selfLoopOptExitBlock ], [ %b11_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b12_0.16907 = phi i32 [ %b11_0.16910, %selfLoopOptExitBlock ], [ %b12_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b12_1.16906 = phi i32 [ %b11_1.16909, %selfLoopOptExitBlock ], [ %b12_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b0_0.16943 = phi i32 [ %b12_0.16907, %selfLoopOptExitBlock ], [ %b0_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b0_1.16942 = phi i32 [ %b12_1.16906, %selfLoopOptExitBlock ], [ %b0_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b0_2.16941 = phi i32 [ %b12_2.16905, %selfLoopOptExitBlock ], [ %b0_2.0, %do.body3109.preheader ]
Applied self loop transform on do.body3109( sph_radiogatun32_close() )

sph_radiogatun32_close(): Transformed Self loop Loop at depth 1 containing: %do.body3109<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

Func cost 103 for sph_radiogatun32_init has been optimized for entry cost!
Storing cost of sph_radiogatun32_init() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_radiogatun32_init

Loops scheduled for transform for sph_radiogatun32_init:- 

sph_radiogatun64(): Transformed branch between if.then and cleanup in the forward direction
sph_radiogatun64(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then11.i,%if.end14.i<latch><exiting>
. Latch: if.end14.i, Exiting block: if.end14.i
sph_radiogatun64(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i50<header>,%if.then11.i52,%if.end14.i55<latch><exiting>
. Latch: if.end14.i55, Exiting block: if.end14.i55
Direct branch from while.body.i50 needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i50
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 2 for sph_radiogatun64 has been optimized for entry cost!
Storing cost of sph_radiogatun64() : 2

Instrumenting loops (self loop count: 0, sese loop count: 2) for function sph_radiogatun64

Loops scheduled for transform for sph_radiogatun64:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then11.i,%if.end14.i<latch><exiting>,%while.body.iDirectSucc

Sese Loop: Loop at depth 1 containing: %while.body.i50<header>,%if.then11.i52,%if.end14.i55<latch><exiting>,%while.body.i50DirectSucc



sph_radiogatun64(): Max depth loop Loop at depth 1 containing: %while.body.i50<header>,%if.then11.i52,%if.end14.i55<latch><exiting>,%while.body.i50DirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i50( sph_radiogatun64() )

sph_radiogatun64(): Transformed loop Loop at depth 1 containing: %while.body.i50<header>,%if.then11.i52,%if.end14.i55<latch><exiting>,%while.body.i50DirectSucc


sph_radiogatun64(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then11.i,%if.end14.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_radiogatun64() )

sph_radiogatun64(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then11.i,%if.end14.i<latch><exiting>,%while.body.iDirectSucc

sph_radiogatun64_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body3109<header><latch><exiting>
. Latch: do.body3109, Exiting block: do.body3109
Direct branch from entry needs to be instrumented
Self loop:- #backedges: 0, body cost: 168, preheader cost: 3
Self loop will be transformed, & body cost is 168 for loop Loop at depth 1 containing: %do.body3109<header><latch><exiting>

Func cost 151 for sph_radiogatun64_close has been optimized for entry cost!
Storing cost of sph_radiogatun64_close() : 151

Instrumenting loops (self loop count: 1, sese loop count: 0) for function sph_radiogatun64_close

Loops scheduled for transform for sph_radiogatun64_close:- 
Self Loop: Loop at depth 1 containing: %do.body3109<header><latch><exiting>



sph_radiogatun64_close(): Self loop Loop at depth 1 containing: %do.body3109<header><latch><exiting>


This selfloop will be transformed & instrumented --> do.body3109( sph_radiogatun64_close() ). Self Loop cost: 168. Iterations: 23
Self loop is not canonical. Going for generic transformation with 23 iterations.
Attempting to transform self loop do.body3109 of sph_radiogatun64_close with 23 inner loop iterations --> Loop at depth 1 containing: %do.body3109<header><latch><exiting>
Found local ind var:   %num.26963 = phi i32 [ %dec3106, %selfLoopOptExitBlock ], [ %num.1, %do.body3109.preheader ], mapping it to   %phiIVClone = phi i32 
User in header block to replace Phi:   %127 = add i32 -23, %num.26963
User in header block to replace Phi:   %b1_1.16939 = phi i64 [ %b0_1.16942, %selfLoopOptExitBlock ], [ %b1_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b1_2.16938 = phi i64 [ %b0_2.16941, %selfLoopOptExitBlock ], [ %b1_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b2_0.16937 = phi i64 [ %b1_0.16940, %selfLoopOptExitBlock ], [ %b2_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b2_2.16935 = phi i64 [ %b1_2.16938, %selfLoopOptExitBlock ], [ %b2_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b3_0.16934 = phi i64 [ %b2_0.16937, %selfLoopOptExitBlock ], [ %b3_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b3_1.16933 = phi i64 [ %b2_1.16936, %selfLoopOptExitBlock ], [ %b3_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b4_1.16930 = phi i64 [ %b3_1.16933, %selfLoopOptExitBlock ], [ %b4_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b4_2.16929 = phi i64 [ %b3_2.16932, %selfLoopOptExitBlock ], [ %b4_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b5_0.16928 = phi i64 [ %b4_0.16931, %selfLoopOptExitBlock ], [ %b5_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b5_2.16926 = phi i64 [ %b4_2.16929, %selfLoopOptExitBlock ], [ %b5_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b6_0.16925 = phi i64 [ %b5_0.16928, %selfLoopOptExitBlock ], [ %b6_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b6_1.16924 = phi i64 [ %b5_1.16927, %selfLoopOptExitBlock ], [ %b6_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b7_1.16921 = phi i64 [ %b6_1.16924, %selfLoopOptExitBlock ], [ %b7_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b7_2.16920 = phi i64 [ %b6_2.16923, %selfLoopOptExitBlock ], [ %b7_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b8_0.16919 = phi i64 [ %b7_0.16922, %selfLoopOptExitBlock ], [ %b8_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b8_2.16917 = phi i64 [ %b7_2.16920, %selfLoopOptExitBlock ], [ %b8_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b9_0.16916 = phi i64 [ %b8_0.16919, %selfLoopOptExitBlock ], [ %b9_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b9_1.16915 = phi i64 [ %b8_1.16918, %selfLoopOptExitBlock ], [ %b9_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b10_1.16912 = phi i64 [ %b9_1.16915, %selfLoopOptExitBlock ], [ %b10_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b10_2.16911 = phi i64 [ %b9_2.16914, %selfLoopOptExitBlock ], [ %b10_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b11_0.16910 = phi i64 [ %b10_0.16913, %selfLoopOptExitBlock ], [ %b11_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b11_2.16908 = phi i64 [ %b10_2.16911, %selfLoopOptExitBlock ], [ %b11_2.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b12_0.16907 = phi i64 [ %b11_0.16910, %selfLoopOptExitBlock ], [ %b12_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b12_1.16906 = phi i64 [ %b11_1.16909, %selfLoopOptExitBlock ], [ %b12_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b0_0.16943 = phi i64 [ %b12_0.16907, %selfLoopOptExitBlock ], [ %b0_0.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b0_1.16942 = phi i64 [ %b12_1.16906, %selfLoopOptExitBlock ], [ %b0_1.0, %do.body3109.preheader ]
User in header block to replace Phi:   %b0_2.16941 = phi i64 [ %b12_2.16905, %selfLoopOptExitBlock ], [ %b0_2.0, %do.body3109.preheader ]
Applied self loop transform on do.body3109( sph_radiogatun64_close() )

sph_radiogatun64_close(): Transformed Self loop Loop at depth 1 containing: %do.body3109<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

Func cost 106 for sph_radiogatun64_init has been optimized for entry cost!
Storing cost of sph_radiogatun64_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_radiogatun64_init

Loops scheduled for transform for sph_radiogatun64_init:- 

Total functions: 8, uninstrumented functions: 2
Optimized 8 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_radiogatun.o `test -f 'sha3/cpuminer-sph_radiogatun.ll' || echo './'`sha3/cpuminer-sph_radiogatun.ll
mv -f sha3/.deps/cpuminer-sph_radiogatun.Tpo sha3/.deps/cpuminer-sph_radiogatun.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_ripemd.ll -MD -MP -MF sha3/.deps/cpuminer-sph_ripemd.Tpo -c -o sha3/llvm_cpuminer-sph_ripemd.ll `test -f 'sha3/sph_ripemd.c' || echo './'`sha3/sph_ripemd.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_ripemd.c:36:
In file included from sha3/sph_ripemd.h:60:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_ripemd.ll > sha3/opt_cpuminer-sph_ripemd.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_ripemd.ll > sha3/cpuminer-sph_ripemd.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: ripemd128_round
Function: ripemd160_round
Function: ripemd_round
Function: sph_ripemd
Function: sph_ripemd128
Function: sph_ripemd128_close
Function: sph_ripemd128_comp
Function: sph_ripemd128_init
Function: sph_ripemd160
Function: sph_ripemd160_close
Function: sph_ripemd160_comp
Function: sph_ripemd160_init
Function: sph_ripemd_close
Function: sph_ripemd_comp
Function: sph_ripemd_init
Func cost 1247 for ripemd128_round has been optimized for entry cost!
Storing cost of ripemd128_round() : 1247

Instrumenting loops (self loop count: 0, sese loop count: 0) for function ripemd128_round

Loops scheduled for transform for ripemd128_round:- 

Func cost 2210 for ripemd160_round has been optimized for entry cost!
Storing cost of ripemd160_round() : 2210

Instrumenting loops (self loop count: 0, sese loop count: 0) for function ripemd160_round

Loops scheduled for transform for ripemd160_round:- 

Func cost 888 for ripemd_round has been optimized for entry cost!
Storing cost of ripemd_round() : 888

Instrumenting loops (self loop count: 0, sese loop count: 0) for function ripemd_round

Loops scheduled for transform for ripemd_round:- 

sph_ripemd(): Transformed branch between if.then and cleanup in the forward direction
sph_ripemd(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>
. Latch: if.end13.i, Exiting block: if.end13.i
sph_ripemd(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>
. Latch: if.end13.i65, Exiting block: if.end13.i65
sph_ripemd(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Func cost 4 for sph_ripemd has been optimized for entry cost!
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i
Direct branch from while.body.i60 needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i60
Self loop:- #backedges: 0, body cost: 893, preheader cost: 3
Self loop will be transformed, & body cost is 893 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from while.end needs to be instrumented
Func cost 1 for sph_ripemd has been optimized for exit cost!
Storing cost of sph_ripemd() : 5

Instrumenting loops (self loop count: 1, sese loop count: 2) for function sph_ripemd

Loops scheduled for transform for sph_ripemd:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

Sese Loop: Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc



sph_ripemd(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( sph_ripemd() ). Self Loop cost: 893. Iterations: 4

sph_ripemd(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


sph_ripemd(): Max depth loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i60( sph_ripemd() )

sph_ripemd(): Transformed loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


sph_ripemd(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_ripemd() )

sph_ripemd(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

sph_ripemd128(): Transformed branch between if.then and cleanup in the forward direction
sph_ripemd128(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>
. Latch: if.end13.i, Exiting block: if.end13.i
sph_ripemd128(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>
. Latch: if.end13.i65, Exiting block: if.end13.i65
sph_ripemd128(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Func cost 4 for sph_ripemd128 has been optimized for entry cost!
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i
Direct branch from while.body.i60 needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i60
Self loop:- #backedges: 0, body cost: 1252, preheader cost: 3
Self loop will be transformed, & body cost is 1252 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from while.end needs to be instrumented
Func cost 1 for sph_ripemd128 has been optimized for exit cost!
Storing cost of sph_ripemd128() : 5

Instrumenting loops (self loop count: 1, sese loop count: 2) for function sph_ripemd128

Loops scheduled for transform for sph_ripemd128:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

Sese Loop: Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc



sph_ripemd128(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( sph_ripemd128() ). Self Loop cost: 1252. Iterations: 3

sph_ripemd128(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


sph_ripemd128(): Max depth loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i60( sph_ripemd128() )

sph_ripemd128(): Transformed loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


sph_ripemd128(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_ripemd128() )

sph_ripemd128(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

Func cost 1379 for sph_ripemd128_close has been optimized for entry cost!
Storing cost of sph_ripemd128_close() : 1379

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_ripemd128_close

Loops scheduled for transform for sph_ripemd128_close:- 

Func cost 1135 for sph_ripemd128_comp has been optimized for entry cost!
Storing cost of sph_ripemd128_comp() : 1135

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_ripemd128_comp

Loops scheduled for transform for sph_ripemd128_comp:- 

Func cost 106 for sph_ripemd128_init has been optimized for entry cost!
Storing cost of sph_ripemd128_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_ripemd128_init

Loops scheduled for transform for sph_ripemd128_init:- 

sph_ripemd160(): Transformed branch between if.then and cleanup in the forward direction
sph_ripemd160(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>
. Latch: if.end13.i, Exiting block: if.end13.i
sph_ripemd160(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>
. Latch: if.end13.i65, Exiting block: if.end13.i65
sph_ripemd160(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Func cost 4 for sph_ripemd160 has been optimized for entry cost!
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i
Direct branch from while.body.i60 needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i60
Self loop:- #backedges: 0, body cost: 2215, preheader cost: 3
Self loop will be transformed, & body cost is 2215 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from while.end needs to be instrumented
Func cost 1 for sph_ripemd160 has been optimized for exit cost!
Storing cost of sph_ripemd160() : 5

Instrumenting loops (self loop count: 1, sese loop count: 2) for function sph_ripemd160

Loops scheduled for transform for sph_ripemd160:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

Sese Loop: Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc



sph_ripemd160(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( sph_ripemd160() ). Self Loop cost: 2215. Iterations: 1

sph_ripemd160(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


sph_ripemd160(): Max depth loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i60( sph_ripemd160() )

sph_ripemd160(): Transformed loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


sph_ripemd160(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_ripemd160() )

sph_ripemd160(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

Func cost 2348 for sph_ripemd160_close has been optimized for entry cost!
Storing cost of sph_ripemd160_close() : 2348

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_ripemd160_close

Loops scheduled for transform for sph_ripemd160_close:- 

Func cost 2066 for sph_ripemd160_comp has been optimized for entry cost!
Storing cost of sph_ripemd160_comp() : 2066

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_ripemd160_comp

Loops scheduled for transform for sph_ripemd160_comp:- 

Func cost 106 for sph_ripemd160_init has been optimized for entry cost!
Storing cost of sph_ripemd160_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_ripemd160_init

Loops scheduled for transform for sph_ripemd160_init:- 

Func cost 1020 for sph_ripemd_close has been optimized for entry cost!
Storing cost of sph_ripemd_close() : 1020

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_ripemd_close

Loops scheduled for transform for sph_ripemd_close:- 

Func cost 872 for sph_ripemd_comp has been optimized for entry cost!
Storing cost of sph_ripemd_comp() : 872

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_ripemd_comp

Loops scheduled for transform for sph_ripemd_comp:- 

Func cost 106 for sph_ripemd_init has been optimized for entry cost!
Storing cost of sph_ripemd_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_ripemd_init

Loops scheduled for transform for sph_ripemd_init:- 

Total functions: 15, uninstrumented functions: 9
Optimized 18 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_ripemd.o `test -f 'sha3/cpuminer-sph_ripemd.ll' || echo './'`sha3/cpuminer-sph_ripemd.ll
mv -f sha3/.deps/cpuminer-sph_ripemd.Tpo sha3/.deps/cpuminer-sph_ripemd.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_sha2.ll -MD -MP -MF sha3/.deps/cpuminer-sph_sha2.Tpo -c -o sha3/llvm_cpuminer-sph_sha2.ll `test -f 'sha3/sph_sha2.c' || echo './'`sha3/sph_sha2.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_sha2.c:36:
In file included from sha3/sph_sha2.h:44:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_sha2.ll > sha3/opt_cpuminer-sph_sha2.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_sha2.ll > sha3/cpuminer-sph_sha2.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: sha2_round
Function: sph_sha224
Function: sph_sha224_addbits_and_close
Function: sph_sha224_close
Function: sph_sha224_comp
Function: sph_sha224_init
Function: sph_sha256_addbits_and_close
Function: sph_sha256_close
Function: sph_sha256_init
Func cost 3399 for sha2_round has been optimized for entry cost!
Storing cost of sha2_round() : 3399

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sha2_round

Loops scheduled for transform for sha2_round:- 

sph_sha224(): Transformed branch between if.then and cleanup in the forward direction
sph_sha224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>
. Latch: if.end13.i, Exiting block: if.end13.i
sph_sha224(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>
. Latch: if.end13.i65, Exiting block: if.end13.i65
sph_sha224(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Func cost 4 for sph_sha224 has been optimized for entry cost!
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i
Direct branch from while.body.i60 needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i60
Self loop:- #backedges: 0, body cost: 3404, preheader cost: 3
Self loop will be transformed, & body cost is 3404 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from while.end needs to be instrumented
Func cost 1 for sph_sha224 has been optimized for exit cost!
Storing cost of sph_sha224() : 5

Instrumenting loops (self loop count: 1, sese loop count: 2) for function sph_sha224

Loops scheduled for transform for sph_sha224:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

Sese Loop: Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc



sph_sha224(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( sph_sha224() ). Self Loop cost: 3404. Iterations: 1

sph_sha224(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


sph_sha224(): Max depth loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i60( sph_sha224() )

sph_sha224(): Transformed loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


sph_sha224(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_sha224() )

sph_sha224(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

Func cost 3552 for sph_sha224_addbits_and_close has been optimized for entry cost!
Storing cost of sph_sha224_addbits_and_close() : 3552

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha224_addbits_and_close

Loops scheduled for transform for sph_sha224_addbits_and_close:- 

Func cost 3550 for sph_sha224_close has been optimized for entry cost!
Storing cost of sph_sha224_close() : 3550

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha224_close

Loops scheduled for transform for sph_sha224_close:- 

Func cost 3375 for sph_sha224_comp has been optimized for entry cost!
Storing cost of sph_sha224_comp() : 3375

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha224_comp

Loops scheduled for transform for sph_sha224_comp:- 

Func cost 106 for sph_sha224_init has been optimized for entry cost!
Storing cost of sph_sha224_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha224_init

Loops scheduled for transform for sph_sha224_init:- 

Func cost 3558 for sph_sha256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_sha256_addbits_and_close() : 3558

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha256_addbits_and_close

Loops scheduled for transform for sph_sha256_addbits_and_close:- 

Func cost 3556 for sph_sha256_close has been optimized for entry cost!
Storing cost of sph_sha256_close() : 3556

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha256_close

Loops scheduled for transform for sph_sha256_close:- 

Func cost 106 for sph_sha256_init has been optimized for entry cost!
Storing cost of sph_sha256_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha256_init

Loops scheduled for transform for sph_sha256_init:- 

Total functions: 9, uninstrumented functions: 4
Optimized 10 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_sha2.o `test -f 'sha3/cpuminer-sph_sha2.ll' || echo './'`sha3/cpuminer-sph_sha2.ll
mv -f sha3/.deps/cpuminer-sph_sha2.Tpo sha3/.deps/cpuminer-sph_sha2.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_sha2big.ll -MD -MP -MF sha3/.deps/cpuminer-sph_sha2big.Tpo -c -o sha3/llvm_cpuminer-sph_sha2big.ll `test -f 'sha3/sph_sha2big.c' || echo './'`sha3/sph_sha2big.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_sha2big.c:36:
In file included from sha3/sph_sha2.h:44:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_sha2big.ll > sha3/opt_cpuminer-sph_sha2big.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_sha2big.ll > sha3/cpuminer-sph_sha2big.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: sha3_round
Function: sph_sha384
Function: sph_sha384_addbits_and_close
Function: sph_sha384_close
Function: sph_sha384_comp
Function: sph_sha384_init
Function: sph_sha512_addbits_and_close
Function: sph_sha512_close
Function: sph_sha512_init
sha3_round(): Checking if simple for Loop Loop at depth 1 containing: %for.body3<header><latch><exiting>
. Latch: for.body3, Exiting block: for.body3
sha3_round(): Checking if simple for Loop Loop at depth 1 containing: %do.body71<header><latch><exiting>
. Latch: do.body71, Exiting block: do.body71
Has backedges: 9 (numCost: 9)
Has backedges: 63 (numCost: 63)
Self loop:- #backedges: 64, body cost: 35, preheader cost: 183
Self loop:- loop & preheader cost 2423 will be instrumented in post loop exit
Self loop:- #backedges: 10, body cost: 330, preheader cost: 2439
Self loop:- loop cost 3300 will be instrumented in post loop exit
Func cost 3418 for sha3_round has been optimized for entry cost!
Storing cost of sha3_round() : 3418

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sha3_round

Loops scheduled for transform for sha3_round:- 


sha3_round(): Self loop Loop at depth 1 containing: %do.body71<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body71

sha3_round(): Transformed Self loop Loop at depth 1 containing: %do.body71<header><latch><exiting>


sha3_round(): Self loop Loop at depth 1 containing: %for.body3<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body3

sha3_round(): Transformed Self loop Loop at depth 1 containing: %for.body3<header><latch><exiting>

sph_sha384(): Transformed branch between if.then and cleanup in the forward direction
sph_sha384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>
. Latch: if.end13.i, Exiting block: if.end13.i
sph_sha384(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>
. Latch: if.end13.i65, Exiting block: if.end13.i65
sph_sha384(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Func cost 4 for sph_sha384 has been optimized for entry cost!
Direct branch from while.body.i needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i
Direct branch from while.body.i60 needs to be instrumented
Instrumenting loop with body cost: 5
Non-header-colocated-exit loop will be transformed, & body cost is 5 for loop with header while.body.i60
Self loop:- #backedges: 0, body cost: 3423, preheader cost: 3
Self loop will be transformed, & body cost is 3423 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from while.end needs to be instrumented
Func cost 1 for sph_sha384 has been optimized for exit cost!
Storing cost of sph_sha384() : 5

Instrumenting loops (self loop count: 1, sese loop count: 2) for function sph_sha384

Loops scheduled for transform for sph_sha384:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

Sese Loop: Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc



sph_sha384(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( sph_sha384() ). Self Loop cost: 3423. Iterations: 1

sph_sha384(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


sph_sha384(): Max depth loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i60( sph_sha384() )

sph_sha384(): Transformed loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>,%while.body.i60DirectSucc


sph_sha384(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_sha384() )

sph_sha384(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>,%while.body.iDirectSucc

Func cost 3570 for sph_sha384_addbits_and_close has been optimized for entry cost!
Storing cost of sph_sha384_addbits_and_close() : 3570

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha384_addbits_and_close

Loops scheduled for transform for sph_sha384_addbits_and_close:- 

Func cost 3568 for sph_sha384_close has been optimized for entry cost!
Storing cost of sph_sha384_close() : 3568

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha384_close

Loops scheduled for transform for sph_sha384_close:- 

sph_sha384_comp(): Checking if simple for Loop Loop at depth 1 containing: %for.body5<header><latch><exiting>
. Latch: for.body5, Exiting block: for.body5
sph_sha384_comp(): Checking if simple for Loop Loop at depth 1 containing: %do.body73<header><latch><exiting>
. Latch: do.body73, Exiting block: do.body73
Has backedges: 9 (numCost: 9)
Has backedges: 63 (numCost: 63)
Self loop:- #backedges: 64, body cost: 35, preheader cost: 208
Self loop:- loop & preheader cost 2448 will be instrumented in post loop exit
Self loop:- #backedges: 10, body cost: 330, preheader cost: 2464
Self loop:- loop cost 3300 will be instrumented in post loop exit
Func cost 3418 for sph_sha384_comp has been optimized for entry cost!
Storing cost of sph_sha384_comp() : 3418

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha384_comp

Loops scheduled for transform for sph_sha384_comp:- 


sph_sha384_comp(): Self loop Loop at depth 1 containing: %do.body73<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body73

sph_sha384_comp(): Transformed Self loop Loop at depth 1 containing: %do.body73<header><latch><exiting>


sph_sha384_comp(): Self loop Loop at depth 1 containing: %for.body5<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body5

sph_sha384_comp(): Transformed Self loop Loop at depth 1 containing: %for.body5<header><latch><exiting>

Func cost 106 for sph_sha384_init has been optimized for entry cost!
Storing cost of sph_sha384_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha384_init

Loops scheduled for transform for sph_sha384_init:- 

Func cost 3582 for sph_sha512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_sha512_addbits_and_close() : 3582

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha512_addbits_and_close

Loops scheduled for transform for sph_sha512_addbits_and_close:- 

Func cost 3580 for sph_sha512_close has been optimized for entry cost!
Storing cost of sph_sha512_close() : 3580

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha512_close

Loops scheduled for transform for sph_sha512_close:- 

Func cost 106 for sph_sha512_init has been optimized for entry cost!
Storing cost of sph_sha512_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_sha512_init

Loops scheduled for transform for sph_sha512_init:- 

Total functions: 9, uninstrumented functions: 2
Optimized 10 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_sha2big.o `test -f 'sha3/cpuminer-sph_sha2big.ll' || echo './'`sha3/cpuminer-sph_sha2big.ll
mv -f sha3/.deps/cpuminer-sph_sha2big.Tpo sha3/.deps/cpuminer-sph_sha2big.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_shabal.ll -MD -MP -MF sha3/.deps/cpuminer-sph_shabal.Tpo -c -o sha3/llvm_cpuminer-sph_shabal.ll `test -f 'sha3/sph_shabal.c' || echo './'`sha3/sph_shabal.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_shabal.c:36:
In file included from sha3/sph_shabal.h:40:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_shabal.ll > sha3/opt_cpuminer-sph_shabal.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_shabal.ll > sha3/cpuminer-sph_shabal.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: shabal_close
Function: shabal_core
Function: sph_shabal256
Function: sph_shabal256_addbits_and_close
Function: sph_shabal256_close
Function: sph_shabal256_init
Function: sph_shabal512
Function: sph_shabal512_addbits_and_close
Function: sph_shabal512_close
Function: sph_shabal512_init
shabal_close(): Transformed branch between sw.bb2363 and cleanup in the forward direction
shabal_close(): Checking if simple for Loop Loop at depth 1 containing: %do.body1205<header><latch><exiting>
. Latch: do.body1205, Exiting block: do.body1205
Pred cost for sw.bb4.i is 1
Pred cost for sw.bb3.i is 1
Pred cost for sw.bb2.i is 1
Pred cost for sw.bb1.i is 1
Has backedges: 2 (numCost: 2)
Self loop:- #backedges: 3, body cost: 879, preheader cost: 1294
Self loop:- loop & preheader cost 3931 will be instrumented in post loop exit
Func cost 3932 for shabal_close has been optimized for entry cost!
Storing cost of shabal_close() : 3932

Instrumenting loops (self loop count: 0, sese loop count: 0) for function shabal_close

Loops scheduled for transform for shabal_close:- 


shabal_close(): Self loop Loop at depth 1 containing: %do.body1205<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> do.body1205

shabal_close(): Transformed Self loop Loop at depth 1 containing: %do.body1205<header><latch><exiting>

shabal_core(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%do.body101,%if.end1301<latch><exiting>
. Latch: if.end1301, Exiting block: if.end1301
Direct branch from while.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body
Func cost 2 for shabal_core has been optimized for entry cost!
Storing cost of shabal_core() : 2

Instrumenting loops (self loop count: 0, sese loop count: 1) for function shabal_core

Loops scheduled for transform for shabal_core:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%do.body101,%if.end1301<latch><exiting>,%while.bodyDirectSucc



shabal_core(): Max depth loop Loop at depth 1 containing: %while.body<header>,%do.body101,%if.end1301<latch><exiting>,%while.bodyDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body( shabal_core() )

shabal_core(): Transformed loop Loop at depth 1 containing: %while.body<header>,%do.body101,%if.end1301<latch><exiting>,%while.bodyDirectSucc

Func cost 4 for sph_shabal256 has been optimized for entry cost!
Storing cost of sph_shabal256() : 4

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shabal256

Loops scheduled for transform for sph_shabal256:- 

Func cost 3934 for sph_shabal256_addbits_and_close has been optimized for entry cost!
Storing cost of sph_shabal256_addbits_and_close() : 3934

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shabal256_addbits_and_close

Loops scheduled for transform for sph_shabal256_addbits_and_close:- 

Func cost 3934 for sph_shabal256_close has been optimized for entry cost!
Storing cost of sph_shabal256_close() : 3934

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shabal256_close

Loops scheduled for transform for sph_shabal256_close:- 

Func cost 316 for sph_shabal256_init has been optimized for entry cost!
Storing cost of sph_shabal256_init() : 316

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shabal256_init

Loops scheduled for transform for sph_shabal256_init:- 

Func cost 4 for sph_shabal512 has been optimized for entry cost!
Storing cost of sph_shabal512() : 4

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shabal512

Loops scheduled for transform for sph_shabal512:- 

Func cost 3934 for sph_shabal512_addbits_and_close has been optimized for entry cost!
Storing cost of sph_shabal512_addbits_and_close() : 3934

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shabal512_addbits_and_close

Loops scheduled for transform for sph_shabal512_addbits_and_close:- 

Func cost 3934 for sph_shabal512_close has been optimized for entry cost!
Storing cost of sph_shabal512_close() : 3934

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shabal512_close

Loops scheduled for transform for sph_shabal512_close:- 

Func cost 316 for sph_shabal512_init has been optimized for entry cost!
Storing cost of sph_shabal512_init() : 316

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_shabal512_init

Loops scheduled for transform for sph_shabal512_init:- 

Total functions: 10, uninstrumented functions: 8
Optimized 10 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_shabal.o `test -f 'sha3/cpuminer-sph_shabal.ll' || echo './'`sha3/cpuminer-sph_shabal.ll
mv -f sha3/.deps/cpuminer-sph_shabal.Tpo sha3/.deps/cpuminer-sph_shabal.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_whirlpool.ll -MD -MP -MF sha3/.deps/cpuminer-sph_whirlpool.Tpo -c -o sha3/llvm_cpuminer-sph_whirlpool.ll `test -f 'sha3/sph_whirlpool.c' || echo './'`sha3/sph_whirlpool.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_whirlpool.c:52:
In file included from sha3/sph_whirlpool.h:52:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_whirlpool.ll > sha3/opt_cpuminer-sph_whirlpool.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_whirlpool.ll > sha3/cpuminer-sph_whirlpool.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: sph_whirlpool
Function: sph_whirlpool0
Function: sph_whirlpool0_close
Function: sph_whirlpool1
Function: sph_whirlpool1_close
Function: sph_whirlpool_close
Function: sph_whirlpool_init
Function: whirlpool0_round
Function: whirlpool1_round
Function: whirlpool_round
sph_whirlpool(): Transformed branch between if.then and cleanup in the forward direction
sph_whirlpool(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>
. Latch: if.end13.i, Exiting block: if.end13.i
sph_whirlpool(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>
. Latch: if.end13.i65, Exiting block: if.end13.i65
sph_whirlpool(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Func cost 4 for sph_whirlpool has been optimized for entry cost!
Instrumenting loop with body cost: 116
Non-header-colocated-exit loop will be transformed, & body cost is 116 for loop with header while.body.i
Instrumenting loop with body cost: 116
Non-header-colocated-exit loop will be transformed, & body cost is 116 for loop with header while.body.i60
Self loop:- #backedges: 0, body cost: 5, preheader cost: 3
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from while.end needs to be instrumented
Func cost 1 for sph_whirlpool has been optimized for exit cost!
Storing cost of sph_whirlpool() : 5

Instrumenting loops (self loop count: 1, sese loop count: 2) for function sph_whirlpool

Loops scheduled for transform for sph_whirlpool:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>



sph_whirlpool(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body( sph_whirlpool() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

sph_whirlpool(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


sph_whirlpool(): Max depth loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i60( sph_whirlpool() )

sph_whirlpool(): Transformed loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>


sph_whirlpool(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_whirlpool() )

sph_whirlpool(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>

sph_whirlpool0(): Transformed branch between if.then and cleanup in the forward direction
sph_whirlpool0(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>
. Latch: if.end13.i, Exiting block: if.end13.i
sph_whirlpool0(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>
. Latch: if.end13.i65, Exiting block: if.end13.i65
sph_whirlpool0(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Func cost 4 for sph_whirlpool0 has been optimized for entry cost!
Instrumenting loop with body cost: 116
Non-header-colocated-exit loop will be transformed, & body cost is 116 for loop with header while.body.i
Instrumenting loop with body cost: 116
Non-header-colocated-exit loop will be transformed, & body cost is 116 for loop with header while.body.i60
Self loop:- #backedges: 0, body cost: 5, preheader cost: 3
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from while.end needs to be instrumented
Func cost 1 for sph_whirlpool0 has been optimized for exit cost!
Storing cost of sph_whirlpool0() : 5

Instrumenting loops (self loop count: 1, sese loop count: 2) for function sph_whirlpool0

Loops scheduled for transform for sph_whirlpool0:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>



sph_whirlpool0(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body( sph_whirlpool0() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

sph_whirlpool0(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


sph_whirlpool0(): Max depth loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i60( sph_whirlpool0() )

sph_whirlpool0(): Transformed loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>


sph_whirlpool0(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_whirlpool0() )

sph_whirlpool0(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>

Func cost 263 for sph_whirlpool0_close has been optimized for entry cost!
Storing cost of sph_whirlpool0_close() : 263

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_whirlpool0_close

Loops scheduled for transform for sph_whirlpool0_close:- 

sph_whirlpool1(): Transformed branch between if.then and cleanup in the forward direction
sph_whirlpool1(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>
. Latch: if.end13.i, Exiting block: if.end13.i
sph_whirlpool1(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>
. Latch: if.end13.i65, Exiting block: if.end13.i65
sph_whirlpool1(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Func cost 4 for sph_whirlpool1 has been optimized for entry cost!
Instrumenting loop with body cost: 116
Non-header-colocated-exit loop will be transformed, & body cost is 116 for loop with header while.body.i
Instrumenting loop with body cost: 116
Non-header-colocated-exit loop will be transformed, & body cost is 116 for loop with header while.body.i60
Self loop:- #backedges: 0, body cost: 5, preheader cost: 3
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from while.end needs to be instrumented
Func cost 1 for sph_whirlpool1 has been optimized for exit cost!
Storing cost of sph_whirlpool1() : 5

Instrumenting loops (self loop count: 1, sese loop count: 2) for function sph_whirlpool1

Loops scheduled for transform for sph_whirlpool1:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>



sph_whirlpool1(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body( sph_whirlpool1() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

sph_whirlpool1(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


sph_whirlpool1(): Max depth loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i60( sph_whirlpool1() )

sph_whirlpool1(): Transformed loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>


sph_whirlpool1(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_whirlpool1() )

sph_whirlpool1(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>

Func cost 263 for sph_whirlpool1_close has been optimized for entry cost!
Storing cost of sph_whirlpool1_close() : 263

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_whirlpool1_close

Loops scheduled for transform for sph_whirlpool1_close:- 

Func cost 263 for sph_whirlpool_close has been optimized for entry cost!
Storing cost of sph_whirlpool_close() : 263

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_whirlpool_close

Loops scheduled for transform for sph_whirlpool_close:- 

Func cost 103 for sph_whirlpool_init has been optimized for entry cost!
Storing cost of sph_whirlpool_init() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_whirlpool_init

Loops scheduled for transform for sph_whirlpool_init:- 

whirlpool0_round(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: 9 (numCost: 9)
Self loop:- #backedges: 10, body cost: 606, preheader cost: 47
Self loop will be transformed, & body cost is 606 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 78 for whirlpool0_round has been optimized for entry cost!
Storing cost of whirlpool0_round() : 78

Instrumenting loops (self loop count: 1, sese loop count: 0) for function whirlpool0_round

Loops scheduled for transform for whirlpool0_round:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



whirlpool0_round(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( whirlpool0_round() ). Self Loop cost: 606. Iterations: 6

whirlpool0_round(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

whirlpool1_round(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: 9 (numCost: 9)
Self loop:- #backedges: 10, body cost: 606, preheader cost: 47
Self loop will be transformed, & body cost is 606 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 78 for whirlpool1_round has been optimized for entry cost!
Storing cost of whirlpool1_round() : 78

Instrumenting loops (self loop count: 1, sese loop count: 0) for function whirlpool1_round

Loops scheduled for transform for whirlpool1_round:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



whirlpool1_round(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( whirlpool1_round() ). Self Loop cost: 606. Iterations: 6

whirlpool1_round(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

whirlpool_round(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: 9 (numCost: 9)
Self loop:- #backedges: 10, body cost: 606, preheader cost: 47
Self loop will be transformed, & body cost is 606 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 78 for whirlpool_round has been optimized for entry cost!
Storing cost of whirlpool_round() : 78

Instrumenting loops (self loop count: 1, sese loop count: 0) for function whirlpool_round

Loops scheduled for transform for whirlpool_round:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



whirlpool_round(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( whirlpool_round() ). Self Loop cost: 606. Iterations: 6

whirlpool_round(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Total functions: 10, uninstrumented functions: 1
Optimized 13 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_whirlpool.o `test -f 'sha3/cpuminer-sph_whirlpool.ll' || echo './'`sha3/cpuminer-sph_whirlpool.ll
mv -f sha3/.deps/cpuminer-sph_whirlpool.Tpo sha3/.deps/cpuminer-sph_whirlpool.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-sph_tiger.ll -MD -MP -MF sha3/.deps/cpuminer-sph_tiger.Tpo -c -o sha3/llvm_cpuminer-sph_tiger.ll `test -f 'sha3/sph_tiger.c' || echo './'`sha3/sph_tiger.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/sph_tiger.c:36:
In file included from sha3/sph_tiger.h:48:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-sph_tiger.ll > sha3/opt_cpuminer-sph_tiger.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-sph_tiger.ll > sha3/cpuminer-sph_tiger.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: sph_tiger
Function: sph_tiger2_close
Function: sph_tiger_close
Function: sph_tiger_comp
Function: sph_tiger_init
Function: tiger_round
sph_tiger(): Transformed branch between if.then and cleanup in the forward direction
sph_tiger(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>
. Latch: if.end13.i, Exiting block: if.end13.i
sph_tiger(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>
. Latch: if.end13.i65, Exiting block: if.end13.i65
sph_tiger(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Func cost 4 for sph_tiger has been optimized for entry cost!
Instrumenting loop with body cost: 116
Non-header-colocated-exit loop will be transformed, & body cost is 116 for loop with header while.body.i
Instrumenting loop with body cost: 116
Non-header-colocated-exit loop will be transformed, & body cost is 116 for loop with header while.body.i60
Self loop:- #backedges: 0, body cost: 5, preheader cost: 3
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Direct branch from while.end needs to be instrumented
Func cost 1 for sph_tiger has been optimized for exit cost!
Storing cost of sph_tiger() : 5

Instrumenting loops (self loop count: 1, sese loop count: 2) for function sph_tiger

Loops scheduled for transform for sph_tiger:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>

Sese Loop: Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>



sph_tiger(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body( sph_tiger() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

sph_tiger(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


sph_tiger(): Max depth loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i60( sph_tiger() )

sph_tiger(): Transformed loop Loop at depth 1 containing: %while.body.i60<header>,%if.then9.i61,%if.end13.i65<latch><exiting>


sph_tiger(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>


This seseloop will not be transformed since it has no induction variable --> while.body.i( sph_tiger() )

sph_tiger(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.then9.i,%if.end13.i<latch><exiting>

Func cost 26 for sph_tiger2_close has been optimized for entry cost!
Storing cost of sph_tiger2_close() : 26

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_tiger2_close

Loops scheduled for transform for sph_tiger2_close:- 

Func cost 26 for sph_tiger_close has been optimized for entry cost!
Storing cost of sph_tiger_close() : 26

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_tiger_close

Loops scheduled for transform for sph_tiger_close:- 

Func cost 1047 for sph_tiger_comp has been optimized for entry cost!
Storing cost of sph_tiger_comp() : 1047

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_tiger_comp

Loops scheduled for transform for sph_tiger_comp:- 

Func cost 4 for sph_tiger_init has been optimized for entry cost!
Storing cost of sph_tiger_init() : 4

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sph_tiger_init

Loops scheduled for transform for sph_tiger_init:- 

Func cost 1055 for tiger_round has been optimized for entry cost!
Storing cost of tiger_round() : 1055

Instrumenting loops (self loop count: 0, sese loop count: 0) for function tiger_round

Loops scheduled for transform for tiger_round:- 

Total functions: 6, uninstrumented functions: 3
Optimized 7 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-sph_tiger.o `test -f 'sha3/cpuminer-sph_tiger.ll' || echo './'`sha3/cpuminer-sph_tiger.ll
mv -f sha3/.deps/cpuminer-sph_tiger.Tpo sha3/.deps/cpuminer-sph_tiger.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT sha3/llvm_cpuminer-gost_streebog.ll -MD -MP -MF sha3/.deps/cpuminer-gost_streebog.Tpo -c -o sha3/llvm_cpuminer-gost_streebog.ll `test -f 'sha3/gost_streebog.c' || echo './'`sha3/gost_streebog.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from sha3/gost_streebog.c:8:
In file included from sha3/gost_streebog.h:44:
In file included from sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < sha3/llvm_cpuminer-gost_streebog.ll > sha3/cpuminer-gost_streebog.ll
#/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < sha3/opt_cpuminer-gost_streebog.ll > sha3/cpuminer-gost_streebog.ll
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o sha3/cpuminer-gost_streebog.o `test -f 'sha3/cpuminer-gost_streebog.ll' || echo './'`sha3/cpuminer-gost_streebog.ll
mv -f sha3/.deps/cpuminer-gost_streebog.Tpo sha3/.deps/cpuminer-gost_streebog.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-blake2s.ll -MD -MP -MF crypto/.deps/cpuminer-blake2s.Tpo -c -o crypto/llvm_cpuminer-blake2s.ll `test -f 'crypto/blake2s.c' || echo './'`crypto/blake2s.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/blake2s.c:18:
In file included from ./sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-blake2s.ll > crypto/opt_cpuminer-blake2s.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-blake2s.ll > crypto/cpuminer-blake2s.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blake2s
Function: blake2s_compress
Function: blake2s_final
Function: blake2s_init
Function: blake2s_init_key
Function: blake2s_init_param
Function: blake2s_update
blake2s(): Transformed branch between if.end3 and cleanup in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 5 of if.end3
manageDanglingLCCs(inverted V shape): Adding pred cost 5 of if.end3 to successor if.else
manageDanglingLCCs(inverted V shape): Adding pred cost 5 of if.end3 to successor if.then9
manageDanglingLCCs(inverted V shape): Removing cost 3 of if.end20
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.end20 to successor if.end20.blake2s_update.exit_crit_edge
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.end20 to successor while.body.lr.ph.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i to successor if.end.thread.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body.i to successor if.end.i43
Pred cost for cleanup_dummy is 1
Func cost 108 for blake2s has been optimized for entry cost!
Direct branch from blake2s_update.exit needs to be instrumented
Func cost 102 for blake2s has been optimized for exit cost!
Storing cost of blake2s() : 210

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2s

Loops scheduled for transform for blake2s:- 

Func cost 2602 for blake2s_compress has been optimized for entry cost!
Storing cost of blake2s_compress() : 2602

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2s_compress

Loops scheduled for transform for blake2s_compress:- 

Direct branch from entry needs to be instrumented
Func cost 3030 for blake2s_final has been optimized for entry cost!
Storing cost of blake2s_final() : 3030

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2s_final

Loops scheduled for transform for blake2s_final:- 

Direct branch from entry needs to be instrumented
Func cost 1 for blake2s_init has been optimized for entry cost!
Storing cost of blake2s_init() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2s_init

Loops scheduled for transform for blake2s_init:- 

blake2s_init_key(): Transformed branch between if.end and cleanup in the forward direction
Direct branch from if.end needs to be instrumented
Func cost 3 for blake2s_init_key has been optimized for entry cost!
Storing cost of blake2s_init_key() : 3

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2s_init_key

Loops scheduled for transform for blake2s_init_key:- 

Func cost 252 for blake2s_init_param has been optimized for entry cost!
Storing cost of blake2s_init_param() : 252

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2s_init_param

Loops scheduled for transform for blake2s_init_param:- 

manageDanglingLCCs(inverted V shape): Removing cost 4 of while.body
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body to successor if.end.thread
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of while.body to successor if.end
Pred cost for while.end.loopexit is 1
Pred cost for if.end.thread is 109
Func cost 2 for blake2s_update has been optimized for entry cost!
Func cost 1 for blake2s_update has been optimized for exit cost!
Storing cost of blake2s_update() : 3

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2s_update

Loops scheduled for transform for blake2s_update:- 

Total functions: 7, uninstrumented functions: 2
Optimized 9 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-blake2s.o `test -f 'crypto/cpuminer-blake2s.ll' || echo './'`crypto/cpuminer-blake2s.ll
mv -f crypto/.deps/cpuminer-blake2s.Tpo crypto/.deps/cpuminer-blake2s.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-blake2b.ll -MD -MP -MF crypto/.deps/cpuminer-blake2b.Tpo -c -o crypto/llvm_cpuminer-blake2b.ll `test -f 'crypto/blake2b.c' || echo './'`crypto/blake2b.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/blake2b.c:34:
In file included from ./sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-blake2b.ll > crypto/opt_cpuminer-blake2b.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-blake2b.ll > crypto/cpuminer-blake2b.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blake2b_compress
Function: blake2b_final
Function: blake2b_init
Function: blake2b_update
blake2b_compress(): Checking if simple for Loop Loop at depth 1 containing: %for.body84<header><latch><exiting>
. Latch: for.body84, Exiting block: for.body84
Has backedges: 11 (numCost: 11)
Self loop:- #backedges: 12, body cost: 259, preheader cost: 727
Self loop:- loop & preheader cost 3835 will be instrumented in post loop exit
Func cost 102 for blake2b_compress has been optimized for entry cost!
Storing cost of blake2b_compress() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2b_compress

Loops scheduled for transform for blake2b_compress:- 


blake2b_compress(): Self loop Loop at depth 1 containing: %for.body84<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body84

blake2b_compress(): Transformed Self loop Loop at depth 1 containing: %for.body84<header><latch><exiting>

blake2b_final(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
blake2b_final(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Self loop:- #backedges: 0, body cost: 7, preheader cost: 13
Self loop will be transformed, & body cost is 7 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 13, preheader cost: 121
Self loop will be transformed, & body cost is 13 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 122 for blake2b_final has been optimized for entry cost!
Storing cost of blake2b_final() : 122

Instrumenting loops (self loop count: 2, sese loop count: 0) for function blake2b_final

Loops scheduled for transform for blake2b_final:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



blake2b_final(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.body( blake2b_final() )

blake2b_final(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


blake2b_final(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( blake2b_final() ). Self Loop cost: 13. Iterations: 307
Self loop is canonical. Going for special transformation with 307 iterations.
Attempting to transform self loop for.body of blake2b_final with 307 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %i.032 = phi i64 [ %inc16, %selfLoopOptExitBlock ], [ 0, %for.body.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %6 = add i64 307, %i.032
Applied self loop transform on for.body( blake2b_final() )

blake2b_final(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

blake2b_init(): Transformed branch between for.end20 and cleanup in the forward direction
blake2b_init(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i,%if.then7.i,%if.end.i,%if.end11.i<latch><exiting>
. Latch: if.end11.i, Exiting block: if.end11.i
blake2b_init(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i,%if.then7.i,%if.end.i,%if.end11.i<latch><exiting>
. Latch: if.end11.i, Exiting block: if.end11.i
Has backedges: (+ -1 (ARG: 3) ) (numCost: -1)
Direct branch from for.body.i needs to be instrumented
Instrumenting loop with body cost: 9
Non-header-colocated-exit loop will be transformed, & body cost is 9 for loop with header for.body.i
Direct branch from entry needs to be instrumented
Func cost 1 for blake2b_init has been optimized for entry cost!
Storing cost of blake2b_init() : 1

Instrumenting loops (self loop count: 0, sese loop count: 1) for function blake2b_init

Loops scheduled for transform for blake2b_init:- 
Sese Loop: Loop at depth 1 containing: %for.body.i<header>,%if.then.i,%if.then7.i,%if.end.i,%if.end11.i<latch><exiting>,%for.body.iDirectSucc



blake2b_init(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i,%if.then7.i,%if.end.i,%if.end11.i<latch><exiting>,%for.body.iDirectSucc


This seseloop will be transformed & instrumented --> for.body.i( blake2b_init() ). SESE Loop cost: 9. Iterations: 444
Found local ind var:   %i.030.i = phi i64 [ %inc16.i, %seseLoopOptHNCExitBlock ], [ 0, %for.body.i.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %4 = add i64 444, %i.030.i
Applied sese loop transform on for.body.i( blake2b_init() )

blake2b_init(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%if.then.i,%if.then7.i,%if.end.i,%if.end11.i,%for.body.iDirectSucc,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%if.then7.i,%if.end.i,%if.end11.i<latch><exiting>,%for.body.iDirectSucc,%if.then.i

blake2b_update(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then,%if.then7,%if.end,%if.end11<latch><exiting>
. Latch: if.end11, Exiting block: if.end11
blake2b_update(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then,%if.then7,%if.end,%if.end11<latch><exiting>
. Latch: if.end11, Exiting block: if.end11
Has backedges: (+ -1 (ARG: 2) ) (numCost: -1)
Direct branch from for.body needs to be instrumented
Instrumenting loop with body cost: 9
Non-header-colocated-exit loop will be transformed, & body cost is 9 for loop with header for.body
Func cost 6 for blake2b_update has been optimized for entry cost!
Storing cost of blake2b_update() : 6

Instrumenting loops (self loop count: 0, sese loop count: 1) for function blake2b_update

Loops scheduled for transform for blake2b_update:- 
Sese Loop: Loop at depth 1 containing: %for.body<header>,%if.then,%if.then7,%if.end,%if.end11<latch><exiting>,%for.bodyDirectSucc



blake2b_update(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.then,%if.then7,%if.end,%if.end11<latch><exiting>,%for.bodyDirectSucc


This seseloop will be transformed & instrumented --> for.body( blake2b_update() ). SESE Loop cost: 9. Iterations: 444
Found local ind var:   %i.030 = phi i64 [ 0, %for.body.lr.ph ], [ %inc16, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %0 = add i64 444, %i.030
Applied sese loop transform on for.body( blake2b_update() )

blake2b_update(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.then,%if.then7,%if.end,%if.end11,%for.bodyDirectSucc,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%if.then7,%if.end,%if.end11<latch><exiting>,%for.bodyDirectSucc,%if.then

Total functions: 4, uninstrumented functions: 0
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-blake2b.o `test -f 'crypto/cpuminer-blake2b.ll' || echo './'`crypto/cpuminer-blake2b.ll
mv -f crypto/.deps/cpuminer-blake2b.Tpo crypto/.deps/cpuminer-blake2b.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-oaes_lib.ll -MD -MP -MF crypto/.deps/cpuminer-oaes_lib.Tpo -c -o crypto/llvm_cpuminer-oaes_lib.ll `test -f 'crypto/oaes_lib.c' || echo './'`crypto/oaes_lib.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/oaes_lib.c:38:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-oaes_lib.ll > crypto/opt_cpuminer-oaes_lib.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-oaes_lib.ll > crypto/cpuminer-oaes_lib.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: oaes_alloc
Function: oaes_decrypt
Function: oaes_encrypt
Function: oaes_encryption_round
Function: oaes_free
Function: oaes_key_expand
Function: oaes_key_export
Function: oaes_key_export_data
Function: oaes_key_gen_128
Function: oaes_key_gen_192
Function: oaes_key_gen_256
Function: oaes_key_import
Function: oaes_key_import_data
Function: oaes_pseudo_encrypt_ecb
Function: oaes_set_option
Function: oaes_sprintf
Direct branch from ftime.exit.i needs to be instrumented
Func cost 169 for oaes_alloc has been optimized for entry cost!
Storing cost of oaes_alloc() : 169

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_alloc

Loops scheduled for transform for oaes_alloc:- 

oaes_decrypt(): Transformed branch between if.end and cleanup128 in the forward direction
oaes_decrypt(): Transformed branch between if.end3 and cleanup128_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.end5 and cleanup128_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.end8 and cleanup128_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.end11 and cleanup128_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.end14 and cleanup128_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.end17 and cleanup128_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.end20 and cleanup128_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between sw.epilog and cleanup128_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between sw.epilog24 and cleanup128_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.end28 and cleanup128_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.end41 and cleanup128_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.end3.i and lor.end in the forward direction
oaes_decrypt(): Transformed branch between if.end6.i and lor.end_dummy in the forward direction
oaes_decrypt(): Transformed branch between for.end90 and cleanup128_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between if.then94 and cleanup128_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Transformed branch between for.end119 and cleanup128_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_decrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then58,%if.end62,%if.end3.i,%if.end6.i,%for.body.preheader.i,%oaes_inv_shift_rows.exit.i,%oaes_inv_sub_byte.exit284.preheader.i,%oaes_inv_sub_byte.exit.preheader.i,%lor.end,%for.body79.preheader,%for.inc88<latch><exiting>,%lor.end_dummy,%lor.end_dummy_dummy
    Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>
. Latch: for.inc88, Exiting block: for.inc88
oaes_decrypt(): Checking if simple for Loop Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>
. Latch: oaes_inv_sub_byte.exit284.preheader.i, Exiting block: oaes_inv_shift_rows.exit.i
oaes_decrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then58,%if.end62,%if.end3.i,%if.end6.i,%for.body.preheader.i,%oaes_inv_shift_rows.exit.i,%oaes_inv_sub_byte.exit284.preheader.i,%oaes_inv_sub_byte.exit.preheader.i,%lor.end,%for.body79.preheader,%for.inc88<latch><exiting>,%lor.end_dummy,%lor.end_dummy_dummy
    Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>
. Latch: for.inc88, Exiting block: for.inc88
oaes_decrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then58,%if.end62,%if.end3.i,%if.end6.i,%for.body.preheader.i,%oaes_inv_shift_rows.exit.i,%oaes_inv_sub_byte.exit284.preheader.i,%oaes_inv_sub_byte.exit.preheader.i,%lor.end,%for.body79.preheader,%for.inc88<latch><exiting>,%lor.end_dummy,%lor.end_dummy_dummy
    Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>
. Latch: for.inc88, Exiting block: for.inc88
oaes_decrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then58,%if.end62,%if.end3.i,%if.end6.i,%for.body.preheader.i,%oaes_inv_shift_rows.exit.i,%oaes_inv_sub_byte.exit284.preheader.i,%oaes_inv_sub_byte.exit.preheader.i,%lor.end,%for.body79.preheader,%for.inc88<latch><exiting>,%lor.end_dummy,%lor.end_dummy_dummy
    Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>
. Latch: for.inc88, Exiting block: for.inc88
oaes_decrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body107<header><latch><exiting>
. Latch: for.body107, Exiting block: for.body107
Direct branch from for.body needs to be instrumented
Header-colocated-exit loop will be transformed, & body cost is 476 for loop with header oaes_inv_shift_rows.exit.i
Direct branch from if.end6.i needs to be instrumented
Instrumenting loop with body cost: 11
Non-header-colocated-exit loop will be transformed, & body cost is 11 for loop with header for.body
Self loop:- #backedges: 0, body cost: 21, preheader cost: 476
Self loop will be transformed, & body cost is 21 for loop Loop at depth 1 containing: %for.body107<header><latch><exiting>

Direct branch from for.end119 needs to be instrumented
Direct branch from if.then94 needs to be instrumented
Direct branch from for.end90 needs to be instrumented
Direct branch from if.end41 needs to be instrumented
Direct branch from if.end28 needs to be instrumented
Direct branch from sw.epilog24 needs to be instrumented
Direct branch from sw.epilog needs to be instrumented
Direct branch from if.end20 needs to be instrumented
Direct branch from if.end17 needs to be instrumented
Direct branch from if.end14 needs to be instrumented
Direct branch from if.end11 needs to be instrumented
Direct branch from if.end8 needs to be instrumented
Direct branch from if.end5 needs to be instrumented
Direct branch from if.end3 needs to be instrumented
Direct branch from if.end needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 102 for oaes_decrypt has been optimized for entry cost!
Storing cost of oaes_decrypt() : 102

Instrumenting loops (self loop count: 1, sese loop count: 2) for function oaes_decrypt

Loops scheduled for transform for oaes_decrypt:- 
Self Loop: Loop at depth 1 containing: %for.body107<header><latch><exiting>

Sese Loop: Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>

Sese Loop: Loop at depth 1 containing: %for.body<header>,%if.then58,%if.end62,%if.end3.i,%if.end6.i,%for.body.preheader.i,%oaes_inv_shift_rows.exit.i,%oaes_inv_sub_byte.exit284.preheader.i,%oaes_inv_sub_byte.exit.preheader.i,%lor.end,%for.body79.preheader,%for.inc88<latch><exiting>,%lor.end_dummy,%lor.end_dummy_dummy,%for.bodyDirectSucc,%if.end6.iDirectSucc
    Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>



oaes_decrypt(): Self loop Loop at depth 1 containing: %for.body107<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body107( oaes_decrypt() ). Self Loop cost: 21. Iterations: 190
Self loop is not canonical. Going for generic transformation with 190 iterations.
Attempting to transform self loop for.body107 of oaes_decrypt with 190 inner loop iterations --> Loop at depth 1 containing: %for.body107<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %for.body107.preheader.new ], [ %niter.nsub.1, %selfLoopOptExitBlock ], mapping it to   %phiIVClone2 = phi i64 
User in header block to replace Phi:   %294 = add i64 -380, %niter
Applied self loop transform on for.body107( oaes_decrypt() )

oaes_decrypt(): Transformed Self loop Loop at depth 1 containing: %for.body107<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


oaes_decrypt(): Max depth loop Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>


This seseloop will not be transformed since it has no induction variable --> oaes_inv_shift_rows.exit.i( oaes_decrypt() )

oaes_decrypt(): Transformed loop Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>


oaes_decrypt(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.then58,%if.end62,%if.end3.i,%if.end6.i,%for.body.preheader.i,%oaes_inv_shift_rows.exit.i,%oaes_inv_sub_byte.exit284.preheader.i,%oaes_inv_sub_byte.exit.preheader.i,%lor.end,%for.body79.preheader,%for.inc88<latch><exiting>,%lor.end_dummy,%lor.end_dummy_dummy,%for.bodyDirectSucc,%if.end6.iDirectSucc
    Loop at depth 2 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>


This seseloop will be transformed & instrumented --> for.body( oaes_decrypt() ). SESE Loop cost: 11. Iterations: 363
Found local ind var:   %_i.0233 = phi i64 [ 0, %for.body.lr.ph ], [ %add89, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone4 = phi i64 
User in header block to replace Phi:   %9 = add i64 5808, %_i.0233
Applied sese loop transform on for.body( oaes_decrypt() )

oaes_decrypt(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.then58,%if.end62,%if.end3.i,%if.end6.i,%for.body.preheader.i,%oaes_inv_shift_rows.exit.i,%oaes_inv_sub_byte.exit284.preheader.i,%oaes_inv_sub_byte.exit.preheader.i,%lor.end,%for.body79.preheader,%for.inc88,%lor.end_dummy,%lor.end_dummy_dummy,%for.bodyDirectSucc,%if.end6.iDirectSucc,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%if.end62,%if.end3.i,%if.end6.i,%for.body.preheader.i,%oaes_inv_shift_rows.exit.i,%oaes_inv_sub_byte.exit284.preheader.i,%oaes_inv_sub_byte.exit.preheader.i,%lor.end,%for.body79.preheader,%for.inc88<latch><exiting>,%lor.end_dummy,%lor.end_dummy_dummy,%for.bodyDirectSucc,%if.end6.iDirectSucc,%if.then58
        Loop at depth 3 containing: %oaes_inv_shift_rows.exit.i<header><exiting>,%oaes_inv_sub_byte.exit284.preheader.i<latch>

oaes_encrypt(): Transformed branch between if.end and cleanup in the forward direction
oaes_encrypt(): Transformed branch between if.end8 and cleanup_dummy in the forward direction
oaes_encrypt(): Transformed branch between if.end12 and cleanup_dummy_dummy in the forward direction
oaes_encrypt(): Transformed branch between if.end18 and cleanup_dummy_dummy_dummy in the forward direction
oaes_encrypt(): Transformed branch between if.end22 and cleanup_dummy_dummy_dummy_dummy in the forward direction
oaes_encrypt(): Transformed branch between if.end26 and cleanup_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_encrypt(): Transformed branch between for.body48.preheader and for.end in the forward direction
oaes_encrypt(): Transformed branch between if.end.i and lor.end in the forward direction
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 2 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
. Latch: vector.body.epil, Exiting block: vector.body.epil
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 2 containing: %for.body48<header><latch><exiting>
. Latch: for.body48, Exiting block: for.body48
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: oaes_sub_byte.exit.15.i, Exiting block: oaes_sub_byte.exit.15.i
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
oaes_encrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
. Latch: if.end87, Exiting block: if.end87
Pred cost for cleanup.loopexit is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy is 1
Pred cost for cleanup_dummy is 1
Func cost 9 for oaes_encrypt has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 28, preheader cost: 6
Self loop will be transformed, & body cost is 28 for loop Loop at depth 2 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 8
Self loop will be transformed, & body cost is 10 for loop Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 8, preheader cost: 1
Self loop will be transformed, & body cost is 8 for loop Loop at depth 2 containing: %for.body48<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 285, preheader cost: 26
Self loop will be transformed, & body cost is 285 for loop Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>

Direct branch from if.end.i needs to be instrumented
Direct branch from lor.end needs to be instrumented
Func cost 1 for oaes_encrypt has been optimized for exit cost!
Storing cost of oaes_encrypt() : 10

Instrumenting loops (self loop count: 4, sese loop count: 0) for function oaes_encrypt

Loops scheduled for transform for oaes_encrypt:- 
Self Loop: Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %vector.body<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body48<header><latch><exiting>



oaes_encrypt(): Self loop Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> oaes_sub_byte.exit.15.i( oaes_encrypt() ). Self Loop cost: 285. Iterations: 14
Self loop is not canonical. Going for generic transformation with 14 iterations.
Attempting to transform self loop oaes_sub_byte.exit.15.i of oaes_encrypt with 14 inner loop iterations --> Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header><latch><exiting>
Found local ind var:   %_i.1148.i = phi i64 [ %inc54.i, %selfLoopOptExitBlock ], [ 1, %oaes_sub_byte.exit.15.i.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %104 = add i64 14, %_i.1148.i
Applied self loop transform on oaes_sub_byte.exit.15.i( oaes_encrypt() )

oaes_encrypt(): Transformed Self loop Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>


oaes_encrypt(): Self loop Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body.epil( oaes_encrypt() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop vector.body.epil of oaes_encrypt with 400 inner loop iterations --> Loop at depth 2 containing: %vector.body.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i64 [ %epil.iter.sub, %selfLoopOptExitBlock3 ], [ %xtraiter, %vector.body.epil.preheader ], mapping it to   %phiIVClone6 = phi i64 
User in header block to replace Phi:   %34 = add i64 -400, %epil.iter
Applied self loop transform on vector.body.epil( oaes_encrypt() )

oaes_encrypt(): Transformed Self loop Loop at depth 2 containing: %vector.body.epil<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock2<header><latch><exiting>


oaes_encrypt(): Self loop Loop at depth 2 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( oaes_encrypt() ). Self Loop cost: 28. Iterations: 142
Self loop is not canonical. Going for generic transformation with 142 iterations.
Attempting to transform self loop vector.body of oaes_encrypt with 142 inner loop iterations --> Loop at depth 2 containing: %vector.body<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %selfLoopOptExitBlock12 ], mapping it to   %phiIVClone15 = phi i64 
User in header block to replace Phi:   %18 = add i64 -568, %niter
Applied self loop transform on vector.body( oaes_encrypt() )

oaes_encrypt(): Transformed Self loop Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock11,%selfLoopOptExitBlock12<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock11<header><latch><exiting>


oaes_encrypt(): Self loop Loop at depth 2 containing: %for.body48<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body48( oaes_encrypt() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Attempting to transform self loop for.body48 of oaes_encrypt with 500 inner loop iterations --> Loop at depth 2 containing: %for.body48<header><latch><exiting>
Found local ind var:   %_j.0154 = phi i64 [ %inc, %selfLoopOptExitBlock21 ], [ %_j.0154.ph, %for.body48.preheader178 ], mapping it to   %phiIVClone22 = phi i64 
User in header block to replace Phi:   %42 = add i64 500, %_j.0154
Applied self loop transform on for.body48( oaes_encrypt() )

oaes_encrypt(): Transformed Self loop Loop at depth 2 containing: %for.body48<header>,%selfLoopOptBlock20,%selfLoopOptExitBlock21<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock20<header><latch><exiting>


oaes_encrypt(): Max depth loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy,%if.end.iDirectSucc,%lor.endDirectSucc,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock2,%selfLoopOptExitBlock3,%selfLoopOptBlock11,%selfLoopOptExitBlock12,%selfLoopOptBlock20,%selfLoopOptExitBlock21
    Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock11,%selfLoopOptExitBlock12<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock11<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock2<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header>,%selfLoopOptBlock20,%selfLoopOptExitBlock21<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock20<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

oaes_encrypt(): Transformed loop Loop at depth 1 containing: %for.body<header>,%for.body48.preheader,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil.preheader,%vector.body.epil,%middle.block.loopexit,%middle.block,%for.body48.preheader178,%for.body48,%for.end.loopexit,%for.end,%for.body61.preheader,%if.end72,%if.end.i,%for.body.preheader.i,%oaes_sub_byte.exit.15.i.preheader,%oaes_sub_byte.exit.15.i,%oaes_sub_byte.exit13.15.i.loopexit,%oaes_sub_byte.exit13.15.i,%lor.end,%if.then83,%if.end87<latch><exiting>,%for.end_dummy,%lor.end_dummy,%if.end.iDirectSucc,%lor.endDirectSucc,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock2,%selfLoopOptExitBlock3,%selfLoopOptBlock11,%selfLoopOptExitBlock12,%selfLoopOptBlock20,%selfLoopOptExitBlock21
    Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock11,%selfLoopOptExitBlock12<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock11<header><latch><exiting>
    Loop at depth 2 containing: %vector.body.epil<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock2<header><latch><exiting>
    Loop at depth 2 containing: %for.body48<header>,%selfLoopOptBlock20,%selfLoopOptExitBlock21<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock20<header><latch><exiting>
    Loop at depth 2 containing: %oaes_sub_byte.exit.15.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>

oaes_encryption_round(): Transformed branch between if.end and cleanup in the forward direction
Direct branch from if.end needs to be instrumented
Func cost 2 for oaes_encryption_round has been optimized for entry cost!
Storing cost of oaes_encryption_round() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_encryption_round

Loops scheduled for transform for oaes_encryption_round:- 

oaes_free(): Transformed branch between if.end and cleanup in the forward direction
Direct branch from if.end.i needs to be instrumented
Direct branch from if.end4.i needs to be instrumented
Direct branch from if.end needs to be instrumented
Func cost 2 for oaes_free has been optimized for entry cost!
Storing cost of oaes_free() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_free

Loops scheduled for transform for oaes_free:- 

oaes_key_expand(): Transformed branch between if.else and if.end64 in the forward direction
oaes_key_expand(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.else,%for.body57.preheader,%if.then,%if.end64<exiting>,%if.end64.for.body_crit_edge<latch>,%if.end64_dummy
. Latch: if.end64.for.body_crit_edge, Exiting block: if.end64
oaes_key_expand(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.else,%for.body57.preheader,%if.then,%if.end64<exiting>,%if.end64.for.body_crit_edge<latch>,%if.end64_dummy
. Latch: if.end64.for.body_crit_edge, Exiting block: if.end64
Pred cost for for.end92.loopexit is 1
Func cost 226 for oaes_key_expand has been optimized for entry cost!
Func cost 1 for oaes_key_expand has been optimized for exit cost!
Storing cost of oaes_key_expand() : 227

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_key_expand

Loops scheduled for transform for oaes_key_expand:- 


oaes_key_expand(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.else,%for.body57.preheader,%if.then,%if.end64<exiting>,%if.end64.for.body_crit_edge<latch>,%if.end64_dummy

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

oaes_key_expand(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.else,%for.body57.preheader,%if.then,%if.end64<exiting>,%if.end64.for.body_crit_edge<latch>,%if.end64_dummy

oaes_key_export(): Transformed branch between if.end and cleanup in the forward direction
oaes_key_export(): Transformed branch between if.end3 and cleanup_dummy in the forward direction
oaes_key_export(): Transformed branch between if.end6 and cleanup_dummy_dummy in the forward direction
oaes_key_export(): Transformed branch between if.end11 and cleanup_dummy_dummy_dummy in the forward direction
Direct branch from if.end11 needs to be instrumented
Func cost 6 for oaes_key_export has been optimized for entry cost!
Storing cost of oaes_key_export() : 6

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_key_export

Loops scheduled for transform for oaes_key_export:- 

oaes_key_export_data(): Transformed branch between if.end and cleanup in the forward direction
oaes_key_export_data(): Transformed branch between if.end3 and cleanup_dummy in the forward direction
oaes_key_export_data(): Transformed branch between if.end6 and cleanup_dummy_dummy in the forward direction
oaes_key_export_data(): Transformed branch between if.end11 and cleanup_dummy_dummy_dummy in the forward direction
Direct branch from if.end11 needs to be instrumented
Func cost 6 for oaes_key_export_data has been optimized for entry cost!
Storing cost of oaes_key_export_data() : 6

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_key_export_data

Loops scheduled for transform for oaes_key_export_data:- 

oaes_key_gen_128(): Transformed branch between if.end.i and oaes_key_gen.exit in the forward direction
oaes_key_gen_128(): Transformed branch between if.end7.i and oaes_key_gen.exit_dummy in the forward direction
Direct branch from if.end.i4 needs to be instrumented
Direct branch from if.end4.i needs to be instrumented
Direct branch from if.end7.i needs to be instrumented
Direct branch from if.end.i needs to be instrumented
Func cost 2 for oaes_key_gen_128 has been optimized for entry cost!
Storing cost of oaes_key_gen_128() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_key_gen_128

Loops scheduled for transform for oaes_key_gen_128:- 

oaes_key_gen_192(): Transformed branch between if.end.i and oaes_key_gen.exit in the forward direction
oaes_key_gen_192(): Transformed branch between if.end7.i and oaes_key_gen.exit_dummy in the forward direction
Direct branch from if.end.i4 needs to be instrumented
Direct branch from if.end4.i needs to be instrumented
Direct branch from if.end7.i needs to be instrumented
Direct branch from if.end.i needs to be instrumented
Func cost 2 for oaes_key_gen_192 has been optimized for entry cost!
Storing cost of oaes_key_gen_192() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_key_gen_192

Loops scheduled for transform for oaes_key_gen_192:- 

oaes_key_gen_256(): Transformed branch between if.end.i and oaes_key_gen.exit in the forward direction
oaes_key_gen_256(): Transformed branch between if.end7.i and oaes_key_gen.exit_dummy in the forward direction
Direct branch from if.end.i4 needs to be instrumented
Direct branch from if.end4.i needs to be instrumented
Direct branch from if.end7.i needs to be instrumented
Direct branch from if.end.i needs to be instrumented
Func cost 2 for oaes_key_gen_256 has been optimized for entry cost!
Storing cost of oaes_key_gen_256() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_key_gen_256

Loops scheduled for transform for oaes_key_gen_256:- 

oaes_key_import(): Transformed branch between if.end and cleanup in the forward direction
oaes_key_import(): Transformed branch between if.end3 and cleanup_dummy in the forward direction
oaes_key_import(): Transformed branch between sw.epilog and cleanup_dummy_dummy in the forward direction
oaes_key_import(): Transformed branch between if.end6 and cleanup_dummy_dummy_dummy in the forward direction
oaes_key_import(): Transformed branch between sw.epilog8 and cleanup_dummy_dummy_dummy_dummy in the forward direction
oaes_key_import(): Transformed branch between sw.epilog12 and cleanup_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_key_import(): Transformed branch between sw.epilog17 and cleanup_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_key_import(): Transformed branch between if.end26 and cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
oaes_key_import(): Transformed branch between if.end33 and cleanup_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog (3)
Succs are:- cleanup_dummy_dummy (25)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog17 (7)
Succs are:- cleanup_dummy_dummy_dummy_dummy_dummy_dummy (21)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog (3)
Succs are:- cleanup_dummy_dummy (25)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog17 (7)
Succs are:- cleanup_dummy_dummy_dummy_dummy_dummy_dummy (21)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog (3)
Succs are:- cleanup_dummy_dummy (25)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog17 (7)
Succs are:- cleanup_dummy_dummy_dummy_dummy_dummy_dummy (21)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog (3)
Succs are:- cleanup_dummy_dummy (25)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog17 (7)
Succs are:- cleanup_dummy_dummy_dummy_dummy_dummy_dummy (21)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog (3)
Succs are:- cleanup_dummy_dummy (25)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog17 (7)
Succs are:- cleanup_dummy_dummy_dummy_dummy_dummy_dummy (21)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog (3)
Succs are:- cleanup_dummy_dummy (25)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog17 (7)
Succs are:- cleanup_dummy_dummy_dummy_dummy_dummy_dummy (21)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- sw.epilog (3)
Succs are:- cleanup_dummy_dummy (25)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 4, #successors: 2
Succs are:- cleanup_dummy_dummy_dummy_dummy_dummy_dummy (21)
Succs are:- sw.epilog17 (7)
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy is 1
Pred cost for cleanup_dummy is 1
Func cost 2 for oaes_key_import has been optimized for entry cost!
Direct branch from if.end.i needs to be instrumented
Direct branch from if.end4.i needs to be instrumented
Direct branch from if.end26 needs to be instrumented
Func cost 1 for oaes_key_import has been optimized for exit cost!
Storing cost of oaes_key_import() : 3

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_key_import

Loops scheduled for transform for oaes_key_import:- 

Direct branch from if.end.i needs to be instrumented
Direct branch from if.end4.i needs to be instrumented
Func cost 605 for oaes_key_import_data has been optimized for entry cost!
Storing cost of oaes_key_import_data() : 605

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_key_import_data

Loops scheduled for transform for oaes_key_import_data:- 

oaes_pseudo_encrypt_ecb(): Transformed branch between if.end and cleanup in the forward direction
oaes_pseudo_encrypt_ecb(): Transformed branch between if.end12 and cleanup_dummy in the forward direction
Func cost 77 for oaes_pseudo_encrypt_ecb has been optimized for entry cost!
Storing cost of oaes_pseudo_encrypt_ecb() : 77

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_pseudo_encrypt_ecb

Loops scheduled for transform for oaes_pseudo_encrypt_ecb:- 

oaes_set_option(): Transformed branch between if.end and cleanup in the forward direction
oaes_set_option(): Transformed branch between sw.bb3 and sw.epilog in the forward direction
Pred cost for cleanup_dummy is 1
Func cost 2 for oaes_set_option has been optimized for entry cost!
Func cost 1 for oaes_set_option has been optimized for exit cost!
Storing cost of oaes_set_option() : 3

Instrumenting loops (self loop count: 0, sese loop count: 0) for function oaes_set_option

Loops scheduled for transform for oaes_set_option:- 

oaes_sprintf(): Transformed branch between if.end and cleanup in the forward direction
oaes_sprintf(): Transformed branch between if.end4 and cleanup_dummy in the forward direction
oaes_sprintf(): Transformed branch between if.end7 and cleanup_dummy_dummy in the forward direction
oaes_sprintf(): Transformed branch between if.end10 and cleanup_dummy_dummy_dummy in the forward direction
oaes_sprintf(): Transformed branch between land.lhs.true and for.inc in the forward direction
oaes_sprintf(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%land.lhs.true,%if.then18,%for.inc<latch><exiting>,%for.inc_dummy
. Latch: for.inc, Exiting block: for.inc
oaes_sprintf(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%land.lhs.true,%if.then18,%for.inc<latch><exiting>,%for.inc_dummy
. Latch: for.inc, Exiting block: for.inc
Direct branch from land.lhs.true needs to be instrumented
Direct branch from for.body needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header for.body
Func cost 214 for oaes_sprintf has been optimized for entry cost!
Storing cost of oaes_sprintf() : 214

Instrumenting loops (self loop count: 0, sese loop count: 1) for function oaes_sprintf

Loops scheduled for transform for oaes_sprintf:- 
Sese Loop: Loop at depth 1 containing: %for.body<header>,%land.lhs.true,%if.then18,%for.inc<latch><exiting>,%for.inc_dummy,%for.bodyDirectSucc,%land.lhs.trueDirectSucc



oaes_sprintf(): Max depth loop Loop at depth 1 containing: %for.body<header>,%land.lhs.true,%if.then18,%for.inc<latch><exiting>,%for.inc_dummy,%for.bodyDirectSucc,%land.lhs.trueDirectSucc


This seseloop will not be transformed since it has no induction variable --> for.body( oaes_sprintf() )

oaes_sprintf(): Transformed loop Loop at depth 1 containing: %for.body<header>,%land.lhs.true,%if.then18,%for.inc<latch><exiting>,%for.inc_dummy,%for.bodyDirectSucc,%land.lhs.trueDirectSucc

Total functions: 16, uninstrumented functions: 1
Optimized 20 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-oaes_lib.o `test -f 'crypto/cpuminer-oaes_lib.ll' || echo './'`crypto/cpuminer-oaes_lib.ll
mv -f crypto/.deps/cpuminer-oaes_lib.Tpo crypto/.deps/cpuminer-oaes_lib.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-c_keccak.ll -MD -MP -MF crypto/.deps/cpuminer-c_keccak.Tpo -c -o crypto/llvm_cpuminer-c_keccak.ll `test -f 'crypto/c_keccak.c' || echo './'`crypto/c_keccak.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/c_keccak.c:5:
In file included from crypto/hash-ops.h:14:
In file included from crypto/int-util.h:18:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-c_keccak.ll > crypto/opt_cpuminer-c_keccak.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-c_keccak.ll > crypto/cpuminer-c_keccak.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: keccak
Function: keccak1600
Function: keccakf
keccak(): Transformed branch between for.cond4.preheader.lr.ph and for.end13 in the forward direction
keccak(): Transformed branch between for.body7.us.prol.loopexit and for.cond4.for.end_crit_edge.us in the forward direction
keccak(): Transformed branch between for.body32.lr.ph and for.end41 in the forward direction
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.cond4.for.end_crit_edge.us, Exiting block: for.cond4.for.end_crit_edge.us
keccak(): Checking if simple for Loop Loop at depth 2 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.cond4.for.end_crit_edge.us, Exiting block: for.cond4.for.end_crit_edge.us
keccak(): Checking if simple for Loop Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
. Latch: for.body7.us.prol, Exiting block: for.body7.us.prol
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.cond4.for.end_crit_edge.us, Exiting block: for.cond4.for.end_crit_edge.us
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.cond4.for.end_crit_edge.us, Exiting block: for.cond4.for.end_crit_edge.us
keccak(): Checking if simple for Loop Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.body7.us, Exiting block: for.body7.us
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.cond4.for.end_crit_edge.us, Exiting block: for.cond4.for.end_crit_edge.us
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.cond4.for.end_crit_edge.us, Exiting block: for.cond4.for.end_crit_edge.us
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader<header><latch><exiting>
. Latch: for.cond4.preheader, Exiting block: for.cond4.preheader
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.cond4.for.end_crit_edge.us, Exiting block: for.cond4.for.end_crit_edge.us
keccak(): Checking if simple for Loop Loop at depth 1 containing: %vector.body98<header><latch><exiting>
. Latch: vector.body98, Exiting block: vector.body98
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.cond4.for.end_crit_edge.us, Exiting block: for.cond4.for.end_crit_edge.us
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.body32<header><latch><exiting>
. Latch: for.body32, Exiting block: for.body32
keccak(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
. Latch: for.cond4.for.end_crit_edge.us, Exiting block: for.cond4.for.end_crit_edge.us
Pred cost for for.end13_dummy is 1
Pred cost for for.end41_dummy is 1
Func cost 316 for keccak has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 5, preheader cost: 1
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %for.cond4.preheader<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 39, preheader cost: 1
Self loop will be transformed, & body cost is 39 for loop Loop at depth 2 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 4
Self loop will be transformed, & body cost is 10 for loop Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 30, preheader cost: 7
Self loop will be transformed, & body cost is 30 for loop Loop at depth 2 containing: %for.body7.us<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 39, preheader cost: 2
Self loop will be transformed, & body cost is 39 for loop Loop at depth 1 containing: %vector.body98<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 9, preheader cost: 1
Self loop will be transformed, & body cost is 9 for loop Loop at depth 1 containing: %for.body32<header><latch><exiting>

Func cost 305 for keccak has been optimized for exit cost!
Storing cost of keccak() : 621

Instrumenting loops (self loop count: 6, sese loop count: 0) for function keccak

Loops scheduled for transform for keccak:- 
Self Loop: Loop at depth 1 containing: %for.body32<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body98<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body7.us<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %vector.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.cond4.preheader<header><latch><exiting>



keccak(): Self loop Loop at depth 1 containing: %for.body32<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body32( keccak() ). Self Loop cost: 9. Iterations: 444
Self loop is not canonical. Going for generic transformation with 444 iterations.
Attempting to transform self loop for.body32 of keccak with 444 inner loop iterations --> Loop at depth 1 containing: %for.body32<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ %indvars.iv.next, %selfLoopOptExitBlock ], [ %indvars.iv.ph, %for.body32.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %72 = add i64 444, %indvars.iv
Applied self loop transform on for.body32( keccak() )

keccak(): Transformed Self loop Loop at depth 1 containing: %for.body32<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


keccak(): Self loop Loop at depth 1 containing: %vector.body98<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body98( keccak() ). Self Loop cost: 39. Iterations: 102
Self loop is not canonical. Going for generic transformation with 102 iterations.
Attempting to transform self loop vector.body98 of keccak with 102 inner loop iterations --> Loop at depth 1 containing: %vector.body98<header><latch><exiting>
Found local ind var:   %index105 = phi i64 [ 0, %vector.ph102 ], [ %index.next106, %selfLoopOptExitBlock2 ], mapping it to   %phiIVClone3 = phi i64 
User in header block to replace Phi:   %47 = add i64 1632, %index105
Applied self loop transform on vector.body98( keccak() )

keccak(): Transformed Self loop Loop at depth 1 containing: %vector.body98<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock1<header><latch><exiting>


keccak(): Self loop Loop at depth 2 containing: %for.body7.us<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body7.us( keccak() ). Self Loop cost: 30. Iterations: 133
Self loop is not canonical. Going for generic transformation with 133 iterations.
Attempting to transform self loop for.body7.us of keccak with 133 inner loop iterations --> Loop at depth 2 containing: %for.body7.us<header><latch><exiting>
Found local ind var:   %indvars.iv79 = phi i64 [ %indvars.iv.next80.3, %selfLoopOptExitBlock9 ], [ %indvars.iv79.unr, %for.body7.us.preheader1 ], mapping it to   %phiIVClone10 = phi i64 
User in header block to replace Phi:   %36 = add i64 532, %indvars.iv79
Applied self loop transform on for.body7.us( keccak() )

keccak(): Transformed Self loop Loop at depth 2 containing: %for.body7.us<header>,%selfLoopOptBlock8,%selfLoopOptExitBlock9<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock8<header><latch><exiting>


keccak(): Self loop Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body7.us.prol( keccak() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body7.us.prol of keccak with 400 inner loop iterations --> Loop at depth 2 containing: %for.body7.us.prol<header><latch><exiting>
Found local ind var:   %prol.iter = phi i64 [ %prol.iter.sub, %selfLoopOptExitBlock16 ], [ %xtraiter, %for.body7.us.prol.preheader ], mapping it to   %phiIVClone18 = phi i64 
User in header block to replace Phi:   %33 = add i64 -400, %prol.iter
Applied self loop transform on for.body7.us.prol( keccak() )

keccak(): Transformed Self loop Loop at depth 2 containing: %for.body7.us.prol<header>,%selfLoopOptBlock15,%selfLoopOptExitBlock16<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock15<header><latch><exiting>


keccak(): Self loop Loop at depth 2 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( keccak() ). Self Loop cost: 39. Iterations: 102
Self loop is not canonical. Going for generic transformation with 102 iterations.
Attempting to transform self loop vector.body of keccak with 102 inner loop iterations --> Loop at depth 2 containing: %vector.body<header><latch><exiting>
Found local ind var:   %index = phi i64 [ %index.next, %selfLoopOptExitBlock24 ], [ 0, %vector.body.preheader ], mapping it to   %phiIVClone25 = phi i64 
User in header block to replace Phi:   %6 = add i64 1632, %index
Applied self loop transform on vector.body( keccak() )

keccak(): Transformed Self loop Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock23,%selfLoopOptExitBlock24<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock23<header><latch><exiting>


keccak(): Self loop Loop at depth 1 containing: %for.cond4.preheader<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.cond4.preheader( keccak() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
No step value present. Cannot transform loop.
Self loop cannot be transformed. Therefore instrumenting it.

keccak(): Transformed Self loop Loop at depth 1 containing: %for.cond4.preheader<header><latch><exiting>


keccak(): Max depth loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy,%selfLoopOptBlock8,%selfLoopOptExitBlock9,%selfLoopOptBlock15,%selfLoopOptExitBlock16,%selfLoopOptBlock23,%selfLoopOptExitBlock24
    Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock23,%selfLoopOptExitBlock24<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock23<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header>,%selfLoopOptBlock15,%selfLoopOptExitBlock16<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock15<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header>,%selfLoopOptBlock8,%selfLoopOptExitBlock9<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock8<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.cond4.preheader.us

keccak(): Transformed loop Loop at depth 1 containing: %for.cond4.preheader.us<header>,%vector.memcheck,%vector.body.preheader,%vector.body,%middle.block,%for.body7.us.preheader,%for.body7.us.prol.preheader,%for.body7.us.prol,%for.body7.us.prol.loopexit.loopexit,%for.body7.us.prol.loopexit,%for.body7.us.preheader1,%for.body7.us,%for.cond4.for.end_crit_edge.us.loopexit,%for.cond4.for.end_crit_edge.us<latch><exiting>,%for.cond4.for.end_crit_edge.us_dummy,%selfLoopOptBlock8,%selfLoopOptExitBlock9,%selfLoopOptBlock15,%selfLoopOptExitBlock16,%selfLoopOptBlock23,%selfLoopOptExitBlock24
    Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock23,%selfLoopOptExitBlock24<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock23<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us.prol<header>,%selfLoopOptBlock15,%selfLoopOptExitBlock16<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock15<header><latch><exiting>
    Loop at depth 2 containing: %for.body7.us<header>,%selfLoopOptBlock8,%selfLoopOptExitBlock9<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock8<header><latch><exiting>

keccak1600(): Checking if simple for Loop Loop at depth 1 containing: %for.cond4.preheader.us.i<header><exiting>,%for.cond4.preheader.us.i.for.cond4.preheader.us.i_crit_edge<latch>
. Latch: for.cond4.preheader.us.i.for.cond4.preheader.us.i_crit_edge, Exiting block: for.cond4.preheader.us.i
Has backedges: (/ (+ -136 (zext (ARG: 1) i64) ) 136 ) (numCost: -1)
Header-colocated-exit loop will be transformed, & body cost is 42 for loop with header for.cond4.preheader.us.i
Func cost 895 for keccak1600 has been optimized for entry cost!
Storing cost of keccak1600() : 895

Instrumenting loops (self loop count: 0, sese loop count: 1) for function keccak1600

Loops scheduled for transform for keccak1600:- 
Sese Loop: Loop at depth 1 containing: %for.cond4.preheader.us.i<header><exiting>,%for.cond4.preheader.us.i.for.cond4.preheader.us.i_crit_edge<latch>



keccak1600(): Max depth loop Loop at depth 1 containing: %for.cond4.preheader.us.i<header><exiting>,%for.cond4.preheader.us.i.for.cond4.preheader.us.i_crit_edge<latch>


This seseloop will not be transformed since it has no induction variable --> for.cond4.preheader.us.i( keccak1600() )

keccak1600(): Transformed loop Loop at depth 1 containing: %for.cond4.preheader.us.i<header><exiting>,%for.cond4.preheader.us.i.for.cond4.preheader.us.i_crit_edge<latch>

keccakf(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (zext (ARG: 1) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 298, preheader cost: 48
Self loop will be transformed, & body cost is 298 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 32 for keccakf has been optimized for entry cost!
Storing cost of keccakf() : 32

Instrumenting loops (self loop count: 1, sese loop count: 0) for function keccakf

Loops scheduled for transform for keccakf:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



keccakf(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( keccakf() ). Self Loop cost: 298. Iterations: 13
Self loop is canonical. Going for special transformation with 13 iterations.
Attempting to transform self loop for.body of keccakf with 13 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %selfLoopOptExitBlock ], mapping it to   %phiIVClone20 = phi i64 
User in header block to replace Phi:   %20 = add i64 13, %indvars.iv
Applied self loop transform on for.body( keccakf() )

keccakf(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

Total functions: 3, uninstrumented functions: 0
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-c_keccak.o `test -f 'crypto/cpuminer-c_keccak.ll' || echo './'`crypto/cpuminer-c_keccak.ll
mv -f crypto/.deps/cpuminer-c_keccak.Tpo crypto/.deps/cpuminer-c_keccak.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-c_groestl.ll -MD -MP -MF crypto/.deps/cpuminer-c_groestl.Tpo -c -o crypto/llvm_cpuminer-c_groestl.ll `test -f 'crypto/c_groestl.c' || echo './'`crypto/c_groestl.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/c_groestl.c:11:
In file included from crypto/c_groestl.h:16:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-c_groestl.ll > crypto/opt_cpuminer-c_groestl.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-c_groestl.ll > crypto/cpuminer-c_groestl.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: RND512P
Function: RND512Q
Function: Transform
Function: groestl
Func cost 1167 for RND512P has been optimized for entry cost!
Storing cost of RND512P() : 1167

Instrumenting loops (self loop count: 0, sese loop count: 0) for function RND512P

Loops scheduled for transform for RND512P:- 

Func cost 1157 for RND512Q has been optimized for entry cost!
Storing cost of RND512Q() : 1157

Instrumenting loops (self loop count: 0, sese loop count: 0) for function RND512Q

Loops scheduled for transform for RND512Q:- 

Transform(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then,%for.inc<latch><exiting>
. Latch: for.inc, Exiting block: for.inc
Has backedges: (/ (+ -64 (zext (ARG: 2) i64) ) 64 ) (numCost: -1)
Instrumenting loop with body cost: 2766
Non-header-colocated-exit loop will be transformed, & body cost is 2766 for loop with header for.body
Func cost 26 for Transform has been optimized for entry cost!
Storing cost of Transform() : 26

Instrumenting loops (self loop count: 0, sese loop count: 1) for function Transform

Loops scheduled for transform for Transform:- 
Sese Loop: Loop at depth 1 containing: %for.body<header>,%if.then,%for.inc<latch><exiting>



Transform(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.then,%for.inc<latch><exiting>


This seseloop will not be transformed because of too low iteration count --> for.body( Transform() ). SESE Loop cost: 2766. Iterations: 1

Transform(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.then,%for.inc<latch><exiting>

groestl(): Transformed branch between while.body33.i.prol.loopexit and while.end42.i in the forward direction
groestl(): Checking if simple for Loop Loop at depth 1 containing: %while.body33.i<header><latch><exiting>
. Latch: while.body33.i, Exiting block: while.body33.i
Sign Extend: operand (trunc i64 (%databitlen /u 8) to i32), type i64, scev (sext i32 (trunc i64 (%databitlen /u 8) to i32) to i64)
groestl(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>
. Latch: while.body.i, Exiting block: while.body.i
groestl(): Checking if simple for Loop Loop at depth 1 containing: %while.body41.i<header><latch><exiting>
. Latch: while.body41.i, Exiting block: while.body41.i
groestl(): Checking if simple for Loop Loop at depth 1 containing: %while.body60.i<header><latch><exiting>
. Latch: while.body60.i, Exiting block: while.body60.i
groestl(): Checking if simple for Loop Loop at depth 1 containing: %while.body73.i<header><latch><exiting>
. Latch: while.body73.i, Exiting block: while.body73.i
Self loop:- #backedges: 0, body cost: 20, preheader cost: 269
Self loop will be transformed, & body cost is 20 for loop Loop at depth 1 containing: %while.body33.i<header><latch><exiting>

Func cost 293 for groestl has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 8, preheader cost: 3
Self loop will be transformed, & body cost is 8 for loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 8, preheader cost: 1
Self loop will be transformed, & body cost is 8 for loop Loop at depth 1 containing: %while.body41.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 12, preheader cost: 8
Self loop will be transformed, & body cost is 12 for loop Loop at depth 1 containing: %while.body60.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 12, preheader cost: 12
Self loop will be transformed, & body cost is 12 for loop Loop at depth 1 containing: %while.body73.i<header><latch><exiting>

Func cost 1718 for groestl has been optimized for exit cost!
Storing cost of groestl() : 2011

Instrumenting loops (self loop count: 5, sese loop count: 0) for function groestl

Loops scheduled for transform for groestl:- 
Self Loop: Loop at depth 1 containing: %while.body33.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body41.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body73.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body60.i<header><latch><exiting>



groestl(): Self loop Loop at depth 1 containing: %while.body33.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body33.i( groestl() ). Self Loop cost: 20. Iterations: 200
Self loop is not canonical. Going for generic transformation with 200 iterations.
Attempting to transform self loop while.body33.i of groestl with 200 inner loop iterations --> Loop at depth 1 containing: %while.body33.i<header><latch><exiting>
Found local ind var:   %indvars.iv.i = phi i64 [ %indvars.iv.next.i.1, %selfLoopOptExitBlock ], [ %indvars.iv.i.unr, %while.body33.i.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %8 = add i64 400, %indvars.iv.i
Applied self loop transform on while.body33.i( groestl() )

groestl(): Transformed Self loop Loop at depth 1 containing: %while.body33.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


groestl(): Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.body.i( groestl() )

groestl(): Transformed Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>


groestl(): Self loop Loop at depth 1 containing: %while.body41.i<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.body41.i( groestl() )

groestl(): Transformed Self loop Loop at depth 1 containing: %while.body41.i<header><latch><exiting>


groestl(): Self loop Loop at depth 1 containing: %while.body73.i<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.body73.i( groestl() )

groestl(): Transformed Self loop Loop at depth 1 containing: %while.body73.i<header><latch><exiting>


groestl(): Self loop Loop at depth 1 containing: %while.body60.i<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.body60.i( groestl() )

groestl(): Transformed Self loop Loop at depth 1 containing: %while.body60.i<header><latch><exiting>

Total functions: 4, uninstrumented functions: 2
Optimized 5 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-c_groestl.o `test -f 'crypto/cpuminer-c_groestl.ll' || echo './'`crypto/cpuminer-c_groestl.ll
mv -f crypto/.deps/cpuminer-c_groestl.Tpo crypto/.deps/cpuminer-c_groestl.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-c_blake256.ll -MD -MP -MF crypto/.deps/cpuminer-c_blake256.Tpo -c -o crypto/llvm_cpuminer-c_blake256.ll `test -f 'crypto/c_blake256.c' || echo './'`crypto/c_blake256.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/c_blake256.c:14:
In file included from crypto/c_blake256.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-c_blake256.ll > crypto/opt_cpuminer-c_blake256.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-c_blake256.ll > crypto/cpuminer-c_blake256.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blake224_final
Function: blake224_hash
Function: blake224_init
Function: blake224_update
Function: blake256_compress
Function: blake256_final
Function: blake256_final_h
Function: blake256_hash
Function: blake256_init
Function: blake256_update
Function: hmac_blake224_final
Function: hmac_blake224_hash
Function: hmac_blake224_init
Function: hmac_blake224_update
Function: hmac_blake256_final
Function: hmac_blake256_hash
Function: hmac_blake256_init
Function: hmac_blake256_update
Func cost 2 for blake224_final has been optimized for entry cost!
Storing cost of blake224_final() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake224_final

Loops scheduled for transform for blake224_final:- 

Func cost 313 for blake224_hash has been optimized for entry cost!
Storing cost of blake224_hash() : 313

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake224_hash

Loops scheduled for transform for blake224_hash:- 

Func cost 106 for blake224_init has been optimized for entry cost!
Storing cost of blake224_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake224_init

Loops scheduled for transform for blake224_init:- 

Func cost 2 for blake224_update has been optimized for entry cost!
Storing cost of blake224_update() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake224_update

Loops scheduled for transform for blake224_update:- 

blake256_compress(): Checking if simple for Loop Loop at depth 1 containing: %for.body70<header><latch><exiting>
. Latch: for.body70, Exiting block: for.body70
Has backedges: 13 (numCost: 13)
Self loop:- #backedges: 14, body cost: 202, preheader cost: 576
Self loop:- loop & preheader cost 3404 will be instrumented in post loop exit
Func cost 3619 for blake256_compress has been optimized for entry cost!
Storing cost of blake256_compress() : 3619

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake256_compress

Loops scheduled for transform for blake256_compress:- 


blake256_compress(): Self loop Loop at depth 1 containing: %for.body70<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body70

blake256_compress(): Transformed Self loop Loop at depth 1 containing: %for.body70<header><latch><exiting>

Func cost 2 for blake256_final has been optimized for entry cost!
Storing cost of blake256_final() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake256_final

Loops scheduled for transform for blake256_final:- 

Func cost 423 for blake256_final_h has been optimized for entry cost!
Storing cost of blake256_final_h() : 423

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake256_final_h

Loops scheduled for transform for blake256_final_h:- 

Func cost 736 for blake256_hash has been optimized for entry cost!
Storing cost of blake256_hash() : 736

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake256_hash

Loops scheduled for transform for blake256_hash:- 

Func cost 106 for blake256_init has been optimized for entry cost!
Storing cost of blake256_init() : 106

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake256_init

Loops scheduled for transform for blake256_init:- 

blake256_update(): Transformed branch between land.lhs.true and if.end17 in the forward direction
blake256_update(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header>,%if.then27,%if.end31<latch><exiting>
. Latch: if.end31, Exiting block: if.end31
Direct branch from land.lhs.true needs to be instrumented
Instrumenting loop with body cost: 3630
Non-header-colocated-exit loop will be transformed, & body cost is 3630 for loop with header while.body
Direct branch from while.end needs to be instrumented
Func cost 2 for blake256_update has been optimized for entry cost!
Storing cost of blake256_update() : 2

Instrumenting loops (self loop count: 0, sese loop count: 1) for function blake256_update

Loops scheduled for transform for blake256_update:- 
Sese Loop: Loop at depth 1 containing: %while.body<header>,%if.then27,%if.end31<latch><exiting>



blake256_update(): Max depth loop Loop at depth 1 containing: %while.body<header>,%if.then27,%if.end31<latch><exiting>


This seseloop will not be transformed because of too low iteration count --> while.body( blake256_update() ). SESE Loop cost: 3630. Iterations: 1

blake256_update(): Transformed loop Loop at depth 1 containing: %while.body<header>,%if.then27,%if.end31<latch><exiting>

Func cost 1058 for hmac_blake224_final has been optimized for entry cost!
Storing cost of hmac_blake224_final() : 1058

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hmac_blake224_final

Loops scheduled for transform for hmac_blake224_final:- 

Func cost 1267 for hmac_blake224_hash has been optimized for entry cost!
Storing cost of hmac_blake224_hash() : 1267

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hmac_blake224_hash

Loops scheduled for transform for hmac_blake224_hash:- 

hmac_blake224_init(): Transformed branch between for.body.preheader and for.end in the forward direction
hmac_blake224_init(): Transformed branch between for.body.for.body_crit_edge.lr.ph and for.end_dummy in the forward direction
hmac_blake224_init(): Transformed branch between for.body13.preheader and for.end22 in the forward direction
hmac_blake224_init(): Transformed branch between for.body13.for.body13_crit_edge.lr.ph and for.end22_dummy in the forward direction
hmac_blake224_init(): Checking if simple for Loop Loop at depth 1 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
hmac_blake224_init(): Checking if simple for Loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>
. Latch: for.body.for.body_crit_edge, Exiting block: for.body.for.body_crit_edge
hmac_blake224_init(): Checking if simple for Loop Loop at depth 1 containing: %vector.body78<header><latch><exiting>
. Latch: vector.body78, Exiting block: vector.body78
hmac_blake224_init(): Checking if simple for Loop Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>
. Latch: for.body13.for.body13_crit_edge, Exiting block: for.body13.for.body13_crit_edge
Pred cost for for.end_dummy_dummy is 1
Pred cost for for.end22_dummy_dummy is 1
Pred cost for for.end22_dummy is 1
Direct branch from entry needs to be instrumented
Func cost 209 for hmac_blake224_init has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 40, preheader cost: 2
Self loop will be transformed, & body cost is 40 for loop Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 1
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 40, preheader cost: 2
Self loop will be transformed, & body cost is 40 for loop Loop at depth 1 containing: %vector.body78<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 1
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>

Func cost 206 for hmac_blake224_init has been optimized for exit cost!
Storing cost of hmac_blake224_init() : 415

Instrumenting loops (self loop count: 4, sese loop count: 0) for function hmac_blake224_init

Loops scheduled for transform for hmac_blake224_init:- 
Self Loop: Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body78<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body<header><latch><exiting>



hmac_blake224_init(): Self loop Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body13.for.body13_crit_edge( hmac_blake224_init() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body13.for.body13_crit_edge of hmac_blake224_init with 400 inner loop iterations --> Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>
Found local ind var:   %inc2163 = phi i64 [ %inc21, %selfLoopOptExitBlock ], [ %inc2163.ph, %for.body13.for.body13_crit_edge.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %64 = add i64 400, %inc2163
Applied self loop transform on for.body13.for.body13_crit_edge( hmac_blake224_init() )

hmac_blake224_init(): Transformed Self loop Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


hmac_blake224_init(): Self loop Loop at depth 1 containing: %vector.body78<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body78( hmac_blake224_init() ). Self Loop cost: 40. Iterations: 100
Self loop is not canonical. Going for generic transformation with 100 iterations.
Attempting to transform self loop vector.body78 of hmac_blake224_init with 100 inner loop iterations --> Loop at depth 1 containing: %vector.body78<header><latch><exiting>
Found local ind var:   %index85 = phi i64 [ 0, %vector.ph82 ], [ %index.next86, %selfLoopOptExitBlock2 ], mapping it to   %phiIVClone3 = phi i64 
User in header block to replace Phi:   %39 = add i64 12800, %index85
Applied self loop transform on vector.body78( hmac_blake224_init() )

hmac_blake224_init(): Transformed Self loop Loop at depth 1 containing: %vector.body78<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock1<header><latch><exiting>


hmac_blake224_init(): Self loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.for.body_crit_edge( hmac_blake224_init() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body.for.body_crit_edge of hmac_blake224_init with 400 inner loop iterations --> Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>
Found local ind var:   %inc67 = phi i64 [ %inc, %selfLoopOptExitBlock9 ], [ %inc67.ph, %for.body.for.body_crit_edge.preheader ], mapping it to   %phiIVClone10 = phi i64 
User in header block to replace Phi:   %34 = add i64 400, %inc67
Applied self loop transform on for.body.for.body_crit_edge( hmac_blake224_init() )

hmac_blake224_init(): Transformed Self loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header>,%selfLoopOptBlock8,%selfLoopOptExitBlock9<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock8<header><latch><exiting>


hmac_blake224_init(): Self loop Loop at depth 1 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( hmac_blake224_init() ). Self Loop cost: 40. Iterations: 100
Self loop is not canonical. Going for generic transformation with 100 iterations.
Attempting to transform self loop vector.body of hmac_blake224_init with 100 inner loop iterations --> Loop at depth 1 containing: %vector.body<header><latch><exiting>
Found local ind var:   %index = phi i64 [ 0, %vector.ph ], [ %index.next, %selfLoopOptExitBlock16 ], mapping it to   %phiIVClone17 = phi i64 
User in header block to replace Phi:   %9 = add i64 12800, %index
Applied self loop transform on vector.body( hmac_blake224_init() )

hmac_blake224_init(): Transformed Self loop Loop at depth 1 containing: %vector.body<header>,%selfLoopOptBlock15,%selfLoopOptExitBlock16<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock15<header><latch><exiting>

Func cost 5 for hmac_blake224_update has been optimized for entry cost!
Storing cost of hmac_blake224_update() : 5

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hmac_blake224_update

Loops scheduled for transform for hmac_blake224_update:- 

Func cost 1058 for hmac_blake256_final has been optimized for entry cost!
Storing cost of hmac_blake256_final() : 1058

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hmac_blake256_final

Loops scheduled for transform for hmac_blake256_final:- 

Func cost 1267 for hmac_blake256_hash has been optimized for entry cost!
Storing cost of hmac_blake256_hash() : 1267

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hmac_blake256_hash

Loops scheduled for transform for hmac_blake256_hash:- 

hmac_blake256_init(): Transformed branch between for.body.preheader and for.end in the forward direction
hmac_blake256_init(): Transformed branch between for.body.for.body_crit_edge.lr.ph and for.end_dummy in the forward direction
hmac_blake256_init(): Transformed branch between for.body13.preheader and for.end22 in the forward direction
hmac_blake256_init(): Transformed branch between for.body13.for.body13_crit_edge.lr.ph and for.end22_dummy in the forward direction
hmac_blake256_init(): Checking if simple for Loop Loop at depth 1 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
hmac_blake256_init(): Checking if simple for Loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>
. Latch: for.body.for.body_crit_edge, Exiting block: for.body.for.body_crit_edge
hmac_blake256_init(): Checking if simple for Loop Loop at depth 1 containing: %vector.body78<header><latch><exiting>
. Latch: vector.body78, Exiting block: vector.body78
hmac_blake256_init(): Checking if simple for Loop Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>
. Latch: for.body13.for.body13_crit_edge, Exiting block: for.body13.for.body13_crit_edge
Pred cost for for.end_dummy_dummy is 1
Pred cost for for.end22_dummy_dummy is 1
Pred cost for for.end22_dummy is 1
Direct branch from entry needs to be instrumented
Func cost 209 for hmac_blake256_init has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 40, preheader cost: 2
Self loop will be transformed, & body cost is 40 for loop Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 1
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 40, preheader cost: 2
Self loop will be transformed, & body cost is 40 for loop Loop at depth 1 containing: %vector.body78<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 1
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>

Func cost 206 for hmac_blake256_init has been optimized for exit cost!
Storing cost of hmac_blake256_init() : 415

Instrumenting loops (self loop count: 4, sese loop count: 0) for function hmac_blake256_init

Loops scheduled for transform for hmac_blake256_init:- 
Self Loop: Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body78<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body<header><latch><exiting>



hmac_blake256_init(): Self loop Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body13.for.body13_crit_edge( hmac_blake256_init() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body13.for.body13_crit_edge of hmac_blake256_init with 400 inner loop iterations --> Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header><latch><exiting>
Found local ind var:   %inc2163 = phi i64 [ %inc21, %selfLoopOptExitBlock ], [ %inc2163.ph, %for.body13.for.body13_crit_edge.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %64 = add i64 400, %inc2163
Applied self loop transform on for.body13.for.body13_crit_edge( hmac_blake256_init() )

hmac_blake256_init(): Transformed Self loop Loop at depth 1 containing: %for.body13.for.body13_crit_edge<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


hmac_blake256_init(): Self loop Loop at depth 1 containing: %vector.body78<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body78( hmac_blake256_init() ). Self Loop cost: 40. Iterations: 100
Self loop is not canonical. Going for generic transformation with 100 iterations.
Attempting to transform self loop vector.body78 of hmac_blake256_init with 100 inner loop iterations --> Loop at depth 1 containing: %vector.body78<header><latch><exiting>
Found local ind var:   %index85 = phi i64 [ 0, %vector.ph82 ], [ %index.next86, %selfLoopOptExitBlock2 ], mapping it to   %phiIVClone3 = phi i64 
User in header block to replace Phi:   %39 = add i64 12800, %index85
Applied self loop transform on vector.body78( hmac_blake256_init() )

hmac_blake256_init(): Transformed Self loop Loop at depth 1 containing: %vector.body78<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock1<header><latch><exiting>


hmac_blake256_init(): Self loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.for.body_crit_edge( hmac_blake256_init() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body.for.body_crit_edge of hmac_blake256_init with 400 inner loop iterations --> Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>
Found local ind var:   %inc67 = phi i64 [ %inc, %selfLoopOptExitBlock9 ], [ %inc67.ph, %for.body.for.body_crit_edge.preheader ], mapping it to   %phiIVClone10 = phi i64 
User in header block to replace Phi:   %34 = add i64 400, %inc67
Applied self loop transform on for.body.for.body_crit_edge( hmac_blake256_init() )

hmac_blake256_init(): Transformed Self loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header>,%selfLoopOptBlock8,%selfLoopOptExitBlock9<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock8<header><latch><exiting>


hmac_blake256_init(): Self loop Loop at depth 1 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( hmac_blake256_init() ). Self Loop cost: 40. Iterations: 100
Self loop is not canonical. Going for generic transformation with 100 iterations.
Attempting to transform self loop vector.body of hmac_blake256_init with 100 inner loop iterations --> Loop at depth 1 containing: %vector.body<header><latch><exiting>
Found local ind var:   %index = phi i64 [ 0, %vector.ph ], [ %index.next, %selfLoopOptExitBlock16 ], mapping it to   %phiIVClone17 = phi i64 
User in header block to replace Phi:   %9 = add i64 12800, %index
Applied self loop transform on vector.body( hmac_blake256_init() )

hmac_blake256_init(): Transformed Self loop Loop at depth 1 containing: %vector.body<header>,%selfLoopOptBlock15,%selfLoopOptExitBlock16<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock15<header><latch><exiting>

Func cost 5 for hmac_blake256_update has been optimized for entry cost!
Storing cost of hmac_blake256_update() : 5

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hmac_blake256_update

Loops scheduled for transform for hmac_blake256_update:- 

Total functions: 18, uninstrumented functions: 15
Optimized 20 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-c_blake256.o `test -f 'crypto/cpuminer-c_blake256.ll' || echo './'`crypto/cpuminer-c_blake256.ll
mv -f crypto/.deps/cpuminer-c_blake256.Tpo crypto/.deps/cpuminer-c_blake256.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-c_jh.ll -MD -MP -MF crypto/.deps/cpuminer-c_jh.Tpo -c -o crypto/llvm_cpuminer-c_jh.ll `test -f 'crypto/c_jh.c' || echo './'`crypto/c_jh.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/c_jh.c:16:
In file included from crypto/c_jh.h:18:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-c_jh.ll > crypto/opt_cpuminer-c_jh.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-c_jh.ll > crypto/cpuminer-c_jh.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: F8
Function: jh_hash
F8(): Checking if simple for Loop Loop at depth 1 containing: %for.cond1.preheader.i<header><latch><exiting>
. Latch: for.cond1.preheader.i, Exiting block: for.cond1.preheader.i
Has backedges: 5 (numCost: 5)
Self loop:- #backedges: 6, body cost: 1217, preheader cost: 42
Self loop will be transformed, & body cost is 1217 for loop Loop at depth 1 containing: %for.cond1.preheader.i<header><latch><exiting>

Func cost 61 for F8 has been optimized for entry cost!
Storing cost of F8() : 61

Instrumenting loops (self loop count: 1, sese loop count: 0) for function F8

Loops scheduled for transform for F8:- 
Self Loop: Loop at depth 1 containing: %for.cond1.preheader.i<header><latch><exiting>



F8(): Self loop Loop at depth 1 containing: %for.cond1.preheader.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.cond1.preheader.i( F8() ). Self Loop cost: 1217. Iterations: 3

F8(): Transformed Self loop Loop at depth 1 containing: %for.cond1.preheader.i<header><latch><exiting>

jh_hash(): Transformed branch between for.cond64.preheader.i and if.end.i in the forward direction
jh_hash(): Transformed branch between if.end132.i and cleanup in the forward direction
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- if.then (1)
Succs are:- cleanup (26)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- cleanup (26)
Succs are:- if.then (1)
jh_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- cleanup (26)
Succs are:- if.then (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- cleanup (26)
Succs are:- if.then (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- cleanup (26)
Succs are:- if.then (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- cleanup (26)
Succs are:- if.then (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- cleanup (26)
Succs are:- if.then (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- cleanup (26)
Succs are:- if.then (1)
WARNING: Number of successor branches & containers should be same! This can happen when two cases of a switch point to the same code.
#branches: 5, #successors: 2
Succs are:- cleanup (26)
Succs are:- if.then (1)
Func cost 108 for jh_hash has been optimized for entry cost!
Direct branch from if.then needs to be instrumented
Has backedges: (/ (+ -512 (ARG: 2) ) 512 ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 168, preheader cost: 6
Self loop will be transformed, & body cost is 168 for loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Direct branch from for.end.i needs to be instrumented
Direct branch from for.cond64.preheader.i needs to be instrumented
Direct branch from if.end132.i needs to be instrumented
Func cost 102 for jh_hash has been optimized for exit cost!
Storing cost of jh_hash() : 210

Instrumenting loops (self loop count: 1, sese loop count: 0) for function jh_hash

Loops scheduled for transform for jh_hash:- 
Self Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>



jh_hash(): Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i( jh_hash() ). Self Loop cost: 168. Iterations: 23
Self loop is not canonical. Going for generic transformation with 23 iterations.
Attempting to transform self loop for.body.i of jh_hash with 23 inner loop iterations --> Loop at depth 1 containing: %for.body.i<header><latch><exiting>
Found local ind var:   %databitlen.addr.24.i = phi i64 [ %databitlen, %for.body.lr.ph.i ], [ %sub50.i, %selfLoopOptExitBlock ], mapping it to   %phiIVClone1 = phi i64 
User in header block to replace Phi:   %10 = add i64 -11776, %databitlen.addr.24.i
Applied self loop transform on for.body.i( jh_hash() )

jh_hash(): Transformed Self loop Loop at depth 1 containing: %for.body.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-c_jh.o `test -f 'crypto/cpuminer-c_jh.ll' || echo './'`crypto/cpuminer-c_jh.ll
mv -f crypto/.deps/cpuminer-c_jh.Tpo crypto/.deps/cpuminer-c_jh.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-c_skein.ll -MD -MP -MF crypto/.deps/cpuminer-c_skein.Tpo -c -o crypto/llvm_cpuminer-c_skein.ll `test -f 'crypto/c_skein.c' || echo './'`crypto/c_skein.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/c_skein.c:15:
In file included from crypto/c_skein.h:30:
In file included from crypto/skein_port.h:6:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-c_skein.ll > crypto/opt_cpuminer-c_skein.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-c_skein.ll > crypto/cpuminer-c_skein.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: Skein1024_Process_Block
Function: Skein_256_Process_Block
Function: Skein_512_Process_Block
Function: skein_hash
Skein1024_Process_Block(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%for.body,%for.end<exiting>,%for.end.do.body_crit_edge<latch>
    Loop at depth 2 containing: %for.body<header><latch><exiting>
. Latch: for.end.do.body_crit_edge, Exiting block: for.end
Skein1024_Process_Block(): Checking if simple for Loop Loop at depth 2 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Skein1024_Process_Block(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%for.body,%for.end<exiting>,%for.end.do.body_crit_edge<latch>
    Loop at depth 2 containing: %for.body<header><latch><exiting>
. Latch: for.end.do.body_crit_edge, Exiting block: for.end
Func cost 162 for Skein1024_Process_Block has been optimized for entry cost!
Has backedges: 9 (numCost: 9)
Self loop:- #backedges: 10, body cost: 425, preheader cost: 103
Self loop will be transformed, & body cost is 425 for loop Loop at depth 2 containing: %for.body<header><latch><exiting>

Func cost 105 for Skein1024_Process_Block has been optimized for exit cost!
Storing cost of Skein1024_Process_Block() : 267

Instrumenting loops (self loop count: 1, sese loop count: 0) for function Skein1024_Process_Block

Loops scheduled for transform for Skein1024_Process_Block:- 
Self Loop: Loop at depth 2 containing: %for.body<header><latch><exiting>



Skein1024_Process_Block(): Self loop Loop at depth 2 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( Skein1024_Process_Block() ). Self Loop cost: 425. Iterations: 9

Skein1024_Process_Block(): Transformed Self loop Loop at depth 2 containing: %for.body<header><latch><exiting>


Skein1024_Process_Block(): Max depth loop Loop at depth 1 containing: %do.body<header>,%for.body,%for.end<exiting>,%for.end.do.body_crit_edge<latch>
    Loop at depth 2 containing: %for.body<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> do.body

Skein1024_Process_Block(): Transformed loop Loop at depth 1 containing: %do.body<header>,%for.body,%for.end<exiting>,%for.end.do.body_crit_edge<latch>
    Loop at depth 2 containing: %for.body<header><latch><exiting>

Skein_256_Process_Block(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header><latch><exiting>
. Latch: do.body, Exiting block: do.body
Has backedges: (+ -1 (ARG: 2) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 859, preheader cost: 13
Self loop will be transformed, & body cost is 859 for loop Loop at depth 1 containing: %do.body<header><latch><exiting>

Func cost 16 for Skein_256_Process_Block has been optimized for entry cost!
Storing cost of Skein_256_Process_Block() : 16

Instrumenting loops (self loop count: 1, sese loop count: 0) for function Skein_256_Process_Block

Loops scheduled for transform for Skein_256_Process_Block:- 
Self Loop: Loop at depth 1 containing: %do.body<header><latch><exiting>



Skein_256_Process_Block(): Self loop Loop at depth 1 containing: %do.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body( Skein_256_Process_Block() ). Self Loop cost: 859. Iterations: 4

Skein_256_Process_Block(): Transformed Self loop Loop at depth 1 containing: %do.body<header><latch><exiting>

Skein_512_Process_Block(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header><latch><exiting>
. Latch: do.body, Exiting block: do.body
Has backedges: (+ -1 (ARG: 2) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 1673, preheader cost: 21
Self loop will be transformed, & body cost is 1673 for loop Loop at depth 1 containing: %do.body<header><latch><exiting>

Func cost 24 for Skein_512_Process_Block has been optimized for entry cost!
Storing cost of Skein_512_Process_Block() : 24

Instrumenting loops (self loop count: 1, sese loop count: 0) for function Skein_512_Process_Block

Loops scheduled for transform for Skein_512_Process_Block:- 
Self Loop: Loop at depth 1 containing: %do.body<header><latch><exiting>



Skein_512_Process_Block(): Self loop Loop at depth 1 containing: %do.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> do.body( Skein_512_Process_Block() ). Self Loop cost: 1673. Iterations: 2

Skein_512_Process_Block(): Transformed Self loop Loop at depth 1 containing: %do.body<header><latch><exiting>

skein_hash(): Transformed branch between if.then.i7 and Update.exit in the forward direction
skein_hash(): Transformed branch between if.end25.i.i and Update.exit_dummy in the forward direction
skein_hash(): Transformed branch between if.end25.i110.i and Update.exit_dummy in the forward direction
skein_hash(): Transformed branch between if.end25.i144.i and Update.exit_dummy in the forward direction
skein_hash(): Transformed branch between Skein_512_Update.exit182.i and sw.epilog.i in the forward direction
skein_hash(): Transformed branch between Skein_256_Update.exit252.i and sw.epilog.i in the forward direction
skein_hash(): Transformed branch between Skein1024_Update.exit322.i and sw.epilog.i in the forward direction
skein_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>
. Latch: for.body.i.i, Exiting block: for.body.i.i
skein_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i23.i<header><latch><exiting>
. Latch: for.body.i23.i, Exiting block: for.body.i23.i
skein_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i52.i<header><latch><exiting>
. Latch: for.body.i52.i, Exiting block: for.body.i52.i
Pred cost for sw.epilog.i_dummy4 is 1
Pred cost for sw.epilog.i_dummy3 is 1
Pred cost for sw.epilog.i_dummy is 1
manageDanglingLCCs(V shape): Removing cost 1 of predecessor sw.epilog.i_dummy for merge node sw.epilog.i
manageDanglingLCCs(V shape): Removing cost 1 of predecessor sw.epilog.i_dummy3 for merge node sw.epilog.i
manageDanglingLCCs(V shape): Removing cost 1 of predecessor sw.epilog.i_dummy4 for merge node sw.epilog.i
manageDanglingLCCs(V shape): Settting average cost 1 as initial cost for merge node sw.epilog.i
Pred cost for sw.epilog.i is 6
Func cost 110 for skein_hash has been optimized for entry cost!
Direct branch from if.end25.i.i needs to be instrumented
Direct branch from if.end25.i110.i needs to be instrumented
Direct branch from sw.bb7.i needs to be instrumented
Direct branch from if.end25.i144.i needs to be instrumented
Direct branch from if.end25.i178.i needs to be instrumented
Direct branch from if.then3.i190.i needs to be instrumented
Direct branch from if.end25.i248.i needs to be instrumented
Direct branch from if.then3.i260.i needs to be instrumented
Direct branch from sw.bb39.i needs to be instrumented
Direct branch from if.end25.i318.i needs to be instrumented
Direct branch from if.then3.i330.i needs to be instrumented
Direct branch from sw.bb.i18 needs to be instrumented
Self loop:- #backedges: 0, body cost: 238, preheader cost: 241
Self loop will be transformed, & body cost is 238 for loop Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>

Direct branch from sw.bb1.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 229, preheader cost: 231
Self loop will be transformed, & body cost is 229 for loop Loop at depth 1 containing: %for.body.i23.i<header><latch><exiting>

Direct branch from sw.bb4.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 481, preheader cost: 484
Self loop will be transformed, & body cost is 481 for loop Loop at depth 1 containing: %for.body.i52.i<header><latch><exiting>

Direct branch from Update.exit needs to be instrumented
Func cost 102 for skein_hash has been optimized for exit cost!
Storing cost of skein_hash() : 212

Instrumenting loops (self loop count: 3, sese loop count: 0) for function skein_hash

Loops scheduled for transform for skein_hash:- 
Self Loop: Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i23.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i52.i<header><latch><exiting>



skein_hash(): Self loop Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i.i( skein_hash() ). Self Loop cost: 238. Iterations: 16
Self loop is canonical. Going for special transformation with 16 iterations.
Attempting to transform self loop for.body.i.i of skein_hash with 16 inner loop iterations --> Loop at depth 1 containing: %for.body.i.i<header><latch><exiting>
Found local ind var:   %i.03.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %selfLoopOptExitBlock ], mapping it to   %phiIVClone5 = phi i64 
User in header block to replace Phi:   %76 = add i64 16, %i.03.i.i
Applied self loop transform on for.body.i.i( skein_hash() )

skein_hash(): Transformed Self loop Loop at depth 1 containing: %for.body.i.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


skein_hash(): Self loop Loop at depth 1 containing: %for.body.i23.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i23.i( skein_hash() ). Self Loop cost: 229. Iterations: 17
Self loop is not canonical. Going for generic transformation with 17 iterations.
Attempting to transform self loop for.body.i23.i of skein_hash with 17 inner loop iterations --> Loop at depth 1 containing: %for.body.i23.i<header><latch><exiting>
Found local ind var:   %i.03.i20.i = phi i64 [ 0, %for.body.lr.ph.i19.i ], [ %add39.i.i, %selfLoopOptExitBlock7 ], mapping it to   %phiIVClone8 = phi i64 
User in header block to replace Phi:   %88 = add i64 544, %i.03.i20.i
Applied self loop transform on for.body.i23.i( skein_hash() )

skein_hash(): Transformed Self loop Loop at depth 1 containing: %for.body.i23.i<header>,%selfLoopOptBlock6,%selfLoopOptExitBlock7<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock6<header><latch><exiting>


skein_hash(): Self loop Loop at depth 1 containing: %for.body.i52.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body.i52.i( skein_hash() ). Self Loop cost: 481. Iterations: 8

skein_hash(): Transformed Self loop Loop at depth 1 containing: %for.body.i52.i<header><latch><exiting>

Total functions: 4, uninstrumented functions: 0
Optimized 6 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-c_skein.o `test -f 'crypto/cpuminer-c_skein.ll' || echo './'`crypto/cpuminer-c_skein.ll
mv -f crypto/.deps/cpuminer-c_skein.Tpo crypto/.deps/cpuminer-c_skein.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-hash.ll -MD -MP -MF crypto/.deps/cpuminer-hash.Tpo -c -o crypto/llvm_cpuminer-hash.ll `test -f 'crypto/hash.c' || echo './'`crypto/hash.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/hash.c:9:
In file included from crypto/hash-ops.h:14:
In file included from crypto/int-util.h:18:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-hash.ll > crypto/opt_cpuminer-hash.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-hash.ll > crypto/cpuminer-hash.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: cn_fast_hash
Function: hash_permutation
Function: hash_process
Func cost 407 for cn_fast_hash has been optimized for entry cost!
Storing cost of cn_fast_hash() : 407

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cn_fast_hash

Loops scheduled for transform for cn_fast_hash:- 

Func cost 103 for hash_permutation has been optimized for entry cost!
Storing cost of hash_permutation() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hash_permutation

Loops scheduled for transform for hash_permutation:- 

Func cost 103 for hash_process has been optimized for entry cost!
Storing cost of hash_process() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function hash_process

Loops scheduled for transform for hash_process:- 

Total functions: 3, uninstrumented functions: 3
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-hash.o `test -f 'crypto/cpuminer-hash.ll' || echo './'`crypto/cpuminer-hash.ll
mv -f crypto/.deps/cpuminer-hash.Tpo crypto/.deps/cpuminer-hash.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT crypto/llvm_cpuminer-aesb.ll -MD -MP -MF crypto/.deps/cpuminer-aesb.Tpo -c -o crypto/llvm_cpuminer-aesb.ll `test -f 'crypto/aesb.c' || echo './'`crypto/aesb.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from crypto/aesb.c:22:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < crypto/llvm_cpuminer-aesb.ll > crypto/opt_cpuminer-aesb.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < crypto/opt_cpuminer-aesb.ll > crypto/cpuminer-aesb.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: aesb_pseudo_round_mut
Function: aesb_single_round
Func cost 1031 for aesb_pseudo_round_mut has been optimized for entry cost!
Storing cost of aesb_pseudo_round_mut() : 1031

Instrumenting loops (self loop count: 0, sese loop count: 0) for function aesb_pseudo_round_mut

Loops scheduled for transform for aesb_pseudo_round_mut:- 

Func cost 134 for aesb_single_round has been optimized for entry cost!
Storing cost of aesb_single_round() : 134

Instrumenting loops (self loop count: 0, sese loop count: 0) for function aesb_single_round

Loops scheduled for transform for aesb_single_round:- 

Total functions: 2, uninstrumented functions: 2
Optimized 2 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o crypto/cpuminer-aesb.o `test -f 'crypto/cpuminer-aesb.ll' || echo './'`crypto/cpuminer-aesb.ll
mv -f crypto/.deps/cpuminer-aesb.Tpo crypto/.deps/cpuminer-aesb.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT lyra2/llvm_cpuminer-Lyra2.ll -MD -MP -MF lyra2/.deps/cpuminer-Lyra2.Tpo -c -o lyra2/llvm_cpuminer-Lyra2.ll `test -f 'lyra2/Lyra2.c' || echo './'`lyra2/Lyra2.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from lyra2/Lyra2.c:25:
In file included from lyra2/Lyra2.h:24:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < lyra2/llvm_cpuminer-Lyra2.ll > lyra2/opt_cpuminer-Lyra2.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < lyra2/opt_cpuminer-Lyra2.ll > lyra2/cpuminer-Lyra2.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: LYRA2
Function: LYRA2_3
LYRA2(): Transformed branch between if.end and cleanup118 in the forward direction
LYRA2(): Transformed branch between for.end.loopexit.unr-lcssa and for.end in the forward direction
LYRA2(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
LYRA2(): Checking if simple for Loop Loop at depth 1 containing: %for.body.epil<header><latch><exiting>
. Latch: for.body.epil, Exiting block: for.body.epil
LYRA2(): Checking if simple for Loop Loop at depth 1 containing: %for.body49<header><latch><exiting>
. Latch: for.body49, Exiting block: for.body49
Sign Extend: operand (%pwdlen + %saltlen), type i64, scev (sext i32 (%pwdlen + %saltlen) to i64)
Sign Extend: operand (%pwdlen + %saltlen), type i64, scev (sext i32 (%pwdlen + %saltlen) to i64)
LYRA2(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%if.then72,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>
. Latch: do.cond.do.body_crit_edge, Exiting block: do.cond
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
LYRA2(): Checking if simple for Loop Loop at depth 1 containing: %for.body83<header>,%do.body91,%for.inc111<latch><exiting>
    Loop at depth 2 containing: %do.body91<header><latch><exiting>
. Latch: for.inc111, Exiting block: for.inc111
LYRA2(): Checking if simple for Loop Loop at depth 2 containing: %do.body91<header><latch><exiting>
. Latch: do.body91, Exiting block: do.body91
LYRA2(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%if.then72,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>
. Latch: do.cond.do.body_crit_edge, Exiting block: do.cond
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
LYRA2(): Checking if simple for Loop Loop at depth 1 containing: %for.body83<header>,%do.body91,%for.inc111<latch><exiting>
    Loop at depth 2 containing: %do.body91<header><latch><exiting>
. Latch: for.inc111, Exiting block: for.inc111
LYRA2(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%if.then72,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>
. Latch: do.cond.do.body_crit_edge, Exiting block: do.cond
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
LYRA2(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%if.then72,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>
. Latch: do.cond.do.body_crit_edge, Exiting block: do.cond
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Pred cost for cleanup118_dummy is 1
Func cost 113 for LYRA2 has been optimized for entry cost!
Has backedges: (/ (+ 48 (sext (+ (ARG: 3) (ARG: 5) ) i64) ) 64 ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 35, preheader cost: 8
Self loop will be transformed, & body cost is 35 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Has backedges: (+ -1 (zext (trunc (ARG: 7) i3) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 7, preheader cost: 10
Self loop will be transformed, & body cost is 7 for loop Loop at depth 1 containing: %for.body.epil<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 105, preheader cost: 551
Self loop will be transformed, & body cost is 105 for loop Loop at depth 1 containing: %for.body49<header><latch><exiting>

Has backedges: (+ -1 (ARG: 6) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 111, preheader cost: 4
Self loop will be transformed, & body cost is 111 for loop Loop at depth 2 containing: %do.body91<header><latch><exiting>

Instrumenting loop with body cost: 7
Non-header-colocated-exit loop will be transformed, & body cost is 7 for loop with header for.body83
Func cost 1 for LYRA2 has been optimized for exit cost!
Storing cost of LYRA2() : 114

Instrumenting loops (self loop count: 4, sese loop count: 1) for function LYRA2

Loops scheduled for transform for LYRA2:- 
Self Loop: Loop at depth 1 containing: %for.body.epil<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %do.body91<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body49<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body83<header>,%do.body91,%for.inc111<latch><exiting>
    Loop at depth 2 containing: %do.body91<header><latch><exiting>



LYRA2(): Self loop Loop at depth 1 containing: %for.body.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.epil( LYRA2() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop for.body.epil of LYRA2 with 571 inner loop iterations --> Loop at depth 1 containing: %for.body.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i64 [ %epil.iter.sub, %selfLoopOptExitBlock ], [ %xtraiter, %for.body.epil.preheader ], mapping it to   %phiIVClone2 = phi i64 
User in header block to replace Phi:   %4 = add i64 -571, %epil.iter
Applied self loop transform on for.body.epil( LYRA2() )

LYRA2(): Transformed Self loop Loop at depth 1 containing: %for.body.epil<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


LYRA2(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( LYRA2() ). Self Loop cost: 35. Iterations: 114
Self loop is not canonical. Going for generic transformation with 114 iterations.
Attempting to transform self loop for.body of LYRA2 with 114 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %for.body.preheader.new ], [ %niter.nsub.7, %selfLoopOptExitBlock4 ], mapping it to   %phiIVClone7 = phi i64 
User in header block to replace Phi:   %4 = add i64 -912, %niter
Applied self loop transform on for.body( LYRA2() )

LYRA2(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock3,%selfLoopOptExitBlock4<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock3<header><latch><exiting>


LYRA2(): Self loop Loop at depth 2 containing: %do.body91<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> do.body91( LYRA2() )

LYRA2(): Transformed Self loop Loop at depth 2 containing: %do.body91<header><latch><exiting>


LYRA2(): Self loop Loop at depth 1 containing: %for.body49<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body49( LYRA2() ). Self Loop cost: 105. Iterations: 38
Self loop is canonical. Going for special transformation with 38 iterations.
Attempting to transform self loop for.body49 of LYRA2 with 38 inner loop iterations --> Loop at depth 1 containing: %for.body49<header><latch><exiting>
Found local ind var:   %i.1246 = phi i64 [ 0, %for.end ], [ %inc53, %selfLoopOptExitBlock13 ], mapping it to   %phiIVClone15 = phi i64 
User in header block to replace Phi:   %11 = add i64 38, %i.1246
Applied self loop transform on for.body49( LYRA2() )

LYRA2(): Transformed Self loop Loop at depth 1 containing: %for.body49<header>,%selfLoopOptBlock12,%selfLoopOptExitBlock13<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock12<header><latch><exiting>


LYRA2(): Max depth loop Loop at depth 1 containing: %do.body<header>,%if.then72,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> do.body

LYRA2(): Transformed loop Loop at depth 1 containing: %do.body<header>,%if.then72,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>


LYRA2(): Max depth loop Loop at depth 1 containing: %for.body83<header>,%do.body91,%for.inc111<latch><exiting>
    Loop at depth 2 containing: %do.body91<header><latch><exiting>


This seseloop will be transformed & instrumented --> for.body83( LYRA2() ). SESE Loop cost: 7. Iterations: 571
Found local ind var:   %tau.0244 = phi i64 [ 1, %for.body83.lr.ph ], [ %inc112, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone20 = phi i64 
User in header block to replace Phi:   %20 = add i64 571, %tau.0244
Applied sese loop transform on for.body83( LYRA2() )

LYRA2(): Transformed loop Loop at depth 1 containing: %for.body83<header>,%do.body91,%for.inc111,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%for.inc111<latch><exiting>,%do.body91
        Loop at depth 3 containing: %do.body91<header><latch><exiting>

LYRA2_3(): Transformed branch between if.end and cleanup116 in the forward direction
LYRA2_3(): Transformed branch between for.end.loopexit.unr-lcssa and for.end in the forward direction
LYRA2_3(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
LYRA2_3(): Checking if simple for Loop Loop at depth 1 containing: %for.body.epil<header><latch><exiting>
. Latch: for.body.epil, Exiting block: for.body.epil
LYRA2_3(): Checking if simple for Loop Loop at depth 1 containing: %for.body45<header><latch><exiting>
. Latch: for.body45, Exiting block: for.body45
Sign Extend: operand (%pwdlen + %saltlen), type i64, scev (sext i32 (%pwdlen + %saltlen) to i64)
Sign Extend: operand (%pwdlen + %saltlen), type i64, scev (sext i32 (%pwdlen + %saltlen) to i64)
LYRA2_3(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%if.then68,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>
. Latch: do.cond.do.body_crit_edge, Exiting block: do.cond
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
LYRA2_3(): Checking if simple for Loop Loop at depth 1 containing: %for.body79<header>,%do.body86,%for.inc109<latch><exiting>
    Loop at depth 2 containing: %do.body86<header><latch><exiting>
. Latch: for.inc109, Exiting block: for.inc109
LYRA2_3(): Checking if simple for Loop Loop at depth 2 containing: %do.body86<header><latch><exiting>
. Latch: do.body86, Exiting block: do.body86
LYRA2_3(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%if.then68,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>
. Latch: do.cond.do.body_crit_edge, Exiting block: do.cond
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
LYRA2_3(): Checking if simple for Loop Loop at depth 1 containing: %for.body79<header>,%do.body86,%for.inc109<latch><exiting>
    Loop at depth 2 containing: %do.body86<header><latch><exiting>
. Latch: for.inc109, Exiting block: for.inc109
LYRA2_3(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%if.then68,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>
. Latch: do.cond.do.body_crit_edge, Exiting block: do.cond
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
LYRA2_3(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header>,%if.then68,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>
. Latch: do.cond.do.body_crit_edge, Exiting block: do.cond
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Sign Extend: operand %nRows, type i64, scev (sext i16 %nRows to i64)
Pred cost for cleanup116_dummy is 1
Func cost 111 for LYRA2_3 has been optimized for entry cost!
Has backedges: (/ (+ 48 (sext (+ (ARG: 3) (ARG: 5) ) i64) ) 64 ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 35, preheader cost: 8
Self loop will be transformed, & body cost is 35 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Has backedges: (+ -1 (zext (trunc (ARG: 7) i3) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 7, preheader cost: 10
Self loop will be transformed, & body cost is 7 for loop Loop at depth 1 containing: %for.body.epil<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 105, preheader cost: 551
Self loop will be transformed, & body cost is 105 for loop Loop at depth 1 containing: %for.body45<header><latch><exiting>

Has backedges: (+ -1 (ARG: 6) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 116, preheader cost: 4
Self loop will be transformed, & body cost is 116 for loop Loop at depth 2 containing: %do.body86<header><latch><exiting>

Instrumenting loop with body cost: 7
Non-header-colocated-exit loop will be transformed, & body cost is 7 for loop with header for.body79
Func cost 1 for LYRA2_3 has been optimized for exit cost!
Storing cost of LYRA2_3() : 112

Instrumenting loops (self loop count: 4, sese loop count: 1) for function LYRA2_3

Loops scheduled for transform for LYRA2_3:- 
Self Loop: Loop at depth 1 containing: %for.body.epil<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %do.body86<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body45<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body79<header>,%do.body86,%for.inc109<latch><exiting>
    Loop at depth 2 containing: %do.body86<header><latch><exiting>



LYRA2_3(): Self loop Loop at depth 1 containing: %for.body.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.epil( LYRA2_3() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop for.body.epil of LYRA2_3 with 571 inner loop iterations --> Loop at depth 1 containing: %for.body.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i64 [ %epil.iter.sub, %selfLoopOptExitBlock ], [ %xtraiter, %for.body.epil.preheader ], mapping it to   %phiIVClone2 = phi i64 
User in header block to replace Phi:   %4 = add i64 -571, %epil.iter
Applied self loop transform on for.body.epil( LYRA2_3() )

LYRA2_3(): Transformed Self loop Loop at depth 1 containing: %for.body.epil<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


LYRA2_3(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( LYRA2_3() ). Self Loop cost: 35. Iterations: 114
Self loop is not canonical. Going for generic transformation with 114 iterations.
Attempting to transform self loop for.body of LYRA2_3 with 114 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %for.body.preheader.new ], [ %niter.nsub.7, %selfLoopOptExitBlock4 ], mapping it to   %phiIVClone7 = phi i64 
User in header block to replace Phi:   %4 = add i64 -912, %niter
Applied self loop transform on for.body( LYRA2_3() )

LYRA2_3(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock3,%selfLoopOptExitBlock4<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock3<header><latch><exiting>


LYRA2_3(): Self loop Loop at depth 2 containing: %do.body86<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> do.body86( LYRA2_3() )

LYRA2_3(): Transformed Self loop Loop at depth 2 containing: %do.body86<header><latch><exiting>


LYRA2_3(): Self loop Loop at depth 1 containing: %for.body45<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body45( LYRA2_3() ). Self Loop cost: 105. Iterations: 38
Self loop is canonical. Going for special transformation with 38 iterations.
Attempting to transform self loop for.body45 of LYRA2_3 with 38 inner loop iterations --> Loop at depth 1 containing: %for.body45<header><latch><exiting>
Found local ind var:   %i.1248 = phi i64 [ 0, %for.end ], [ %inc49, %selfLoopOptExitBlock13 ], mapping it to   %phiIVClone15 = phi i64 
User in header block to replace Phi:   %11 = add i64 38, %i.1248
Applied self loop transform on for.body45( LYRA2_3() )

LYRA2_3(): Transformed Self loop Loop at depth 1 containing: %for.body45<header>,%selfLoopOptBlock12,%selfLoopOptExitBlock13<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock12<header><latch><exiting>


LYRA2_3(): Max depth loop Loop at depth 1 containing: %do.body<header>,%if.then68,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> do.body

LYRA2_3(): Transformed loop Loop at depth 1 containing: %do.body<header>,%if.then68,%do.cond<exiting>,%do.cond.do.body_crit_edge<latch>


LYRA2_3(): Max depth loop Loop at depth 1 containing: %for.body79<header>,%do.body86,%for.inc109<latch><exiting>
    Loop at depth 2 containing: %do.body86<header><latch><exiting>


This seseloop will be transformed & instrumented --> for.body79( LYRA2_3() ). SESE Loop cost: 7. Iterations: 571
Found local ind var:   %tau.0246 = phi i64 [ 1, %for.body79.lr.ph ], [ %inc110, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone20 = phi i64 
User in header block to replace Phi:   %20 = add i64 571, %tau.0246
Applied sese loop transform on for.body79( LYRA2_3() )

LYRA2_3(): Transformed loop Loop at depth 1 containing: %for.body79<header>,%do.body86,%for.inc109,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%for.inc109<latch><exiting>,%do.body86
        Loop at depth 3 containing: %do.body86<header><latch><exiting>

Total functions: 2, uninstrumented functions: 0
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o lyra2/cpuminer-Lyra2.o `test -f 'lyra2/cpuminer-Lyra2.ll' || echo './'`lyra2/cpuminer-Lyra2.ll
mv -f lyra2/.deps/cpuminer-Lyra2.Tpo lyra2/.deps/cpuminer-Lyra2.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT lyra2/llvm_cpuminer-Sponge.ll -MD -MP -MF lyra2/.deps/cpuminer-Sponge.Tpo -c -o lyra2/llvm_cpuminer-Sponge.ll `test -f 'lyra2/Sponge.c' || echo './'`lyra2/Sponge.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from lyra2/Sponge.c:25:
In file included from lyra2/Lyra2.h:24:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < lyra2/llvm_cpuminer-Sponge.ll > lyra2/opt_cpuminer-Sponge.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < lyra2/opt_cpuminer-Sponge.ll > lyra2/cpuminer-Sponge.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: absorbBlock
Function: absorbBlockBlake2Safe
Function: blake2bLyra
Function: initState
Function: printArray
Function: reducedBlake2bLyra
Function: reducedDuplexRow
Function: reducedDuplexRow1
Function: reducedDuplexRowSetup
Function: reducedSqueezeRow0
Function: squeeze
Func cost 72 for absorbBlock has been optimized for entry cost!
Storing cost of absorbBlock() : 72

Instrumenting loops (self loop count: 0, sese loop count: 0) for function absorbBlock

Loops scheduled for transform for absorbBlock:- 

Func cost 48 for absorbBlockBlake2Safe has been optimized for entry cost!
Storing cost of absorbBlockBlake2Safe() : 48

Instrumenting loops (self loop count: 0, sese loop count: 0) for function absorbBlockBlake2Safe

Loops scheduled for transform for absorbBlockBlake2Safe:- 

Func cost 2099 for blake2bLyra has been optimized for entry cost!
Storing cost of blake2bLyra() : 2099

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2bLyra

Loops scheduled for transform for blake2bLyra:- 

Func cost 109 for initState has been optimized for entry cost!
Storing cost of initState() : 109

Instrumenting loops (self loop count: 0, sese loop count: 0) for function initState

Loops scheduled for transform for initState:- 

printArray(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (zext (ARG: 1) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 107, preheader cost: 105
Self loop will be transformed, & body cost is 107 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 206 for printArray has been optimized for entry cost!
Storing cost of printArray() : 206

Instrumenting loops (self loop count: 1, sese loop count: 0) for function printArray

Loops scheduled for transform for printArray:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



printArray(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( printArray() ). Self Loop cost: 107. Iterations: 37
Self loop is canonical. Going for special transformation with 37 iterations.
Attempting to transform self loop for.body of printArray with 37 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %0 = add i64 37, %indvars.iv
Applied self loop transform on for.body( printArray() )

printArray(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

Func cost 156 for reducedBlake2bLyra has been optimized for entry cost!
Storing cost of reducedBlake2bLyra() : 156

Instrumenting loops (self loop count: 0, sese loop count: 0) for function reducedBlake2bLyra

Loops scheduled for transform for reducedBlake2bLyra:- 

reducedDuplexRow(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (zext (ARG: 4) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 364, preheader cost: 14
Self loop will be transformed, & body cost is 364 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 11 for reducedDuplexRow has been optimized for entry cost!
Storing cost of reducedDuplexRow() : 11

Instrumenting loops (self loop count: 1, sese loop count: 0) for function reducedDuplexRow

Loops scheduled for transform for reducedDuplexRow:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



reducedDuplexRow(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( reducedDuplexRow() ). Self Loop cost: 364. Iterations: 10

reducedDuplexRow(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

reducedDuplexRow1(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (zext (ARG: 3) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 280, preheader cost: 18
Self loop will be transformed, & body cost is 280 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 13 for reducedDuplexRow1 has been optimized for entry cost!
Storing cost of reducedDuplexRow1() : 13

Instrumenting loops (self loop count: 1, sese loop count: 0) for function reducedDuplexRow1

Loops scheduled for transform for reducedDuplexRow1:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



reducedDuplexRow1(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( reducedDuplexRow1() ). Self Loop cost: 280. Iterations: 14
Self loop is canonical. Going for special transformation with 14 iterations.
Attempting to transform self loop for.body of reducedDuplexRow1 with 14 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %i.0153 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i32 
User in header block to replace Phi:   %1 = add i32 14, %i.0153
Applied self loop transform on for.body( reducedDuplexRow1() )

reducedDuplexRow1(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

reducedDuplexRowSetup(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (zext (ARG: 4) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 364, preheader cost: 18
Self loop will be transformed, & body cost is 364 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 13 for reducedDuplexRowSetup has been optimized for entry cost!
Storing cost of reducedDuplexRowSetup() : 13

Instrumenting loops (self loop count: 1, sese loop count: 0) for function reducedDuplexRowSetup

Loops scheduled for transform for reducedDuplexRowSetup:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



reducedDuplexRowSetup(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( reducedDuplexRowSetup() ). Self Loop cost: 364. Iterations: 10

reducedDuplexRowSetup(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

reducedSqueezeRow0(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (zext (ARG: 2) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 196, preheader cost: 18
Self loop will be transformed, & body cost is 196 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 13 for reducedSqueezeRow0 has been optimized for entry cost!
Storing cost of reducedSqueezeRow0() : 13

Instrumenting loops (self loop count: 1, sese loop count: 0) for function reducedSqueezeRow0

Loops scheduled for transform for reducedSqueezeRow0:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



reducedSqueezeRow0(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( reducedSqueezeRow0() ). Self Loop cost: 196. Iterations: 20
Self loop is canonical. Going for special transformation with 20 iterations.
Attempting to transform self loop for.body of reducedSqueezeRow0 with 20 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %i.055 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i32 
User in header block to replace Phi:   %1 = add i32 20, %i.055
Applied self loop transform on for.body( reducedSqueezeRow0() )

reducedSqueezeRow0(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

squeeze(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: (+ -1 (umax 1 (/ (zext (ARG: 2) i64) 96 ) ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 2205, preheader cost: 6
Self loop will be transformed, & body cost is 2205 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 109 for squeeze has been optimized for entry cost!
Storing cost of squeeze() : 109

Instrumenting loops (self loop count: 1, sese loop count: 0) for function squeeze

Loops scheduled for transform for squeeze:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



squeeze(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( squeeze() ). Self Loop cost: 2205. Iterations: 1

squeeze(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Total functions: 11, uninstrumented functions: 5
Optimized 11 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o lyra2/cpuminer-Sponge.o `test -f 'lyra2/cpuminer-Sponge.ll' || echo './'`lyra2/cpuminer-Sponge.ll
mv -f lyra2/.deps/cpuminer-Sponge.Tpo lyra2/.deps/cpuminer-Sponge.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT yescrypt/llvm_cpuminer-yescrypt-common.ll -MD -MP -MF yescrypt/.deps/cpuminer-yescrypt-common.Tpo -c -o yescrypt/llvm_cpuminer-yescrypt-common.ll `test -f 'yescrypt/yescrypt-common.c' || echo './'`yescrypt/yescrypt-common.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from yescrypt/yescrypt-common.c:27:
In file included from yescrypt/yescrypt.h:40:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < yescrypt/llvm_cpuminer-yescrypt-common.ll > yescrypt/opt_cpuminer-yescrypt-common.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < yescrypt/opt_cpuminer-yescrypt-common.ll > yescrypt/cpuminer-yescrypt-common.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: decode64_uint32
Function: yescrypt
Function: yescrypt_gensalt
Function: yescrypt_gensalt_r
Function: yescrypt_hash
Function: yescrypt_r
Function: yescrypthash
decode64_uint32(): Transformed branch between for.inc and cleanup1 in the forward direction
decode64_uint32(): Transformed branch between for.inc.1 and cleanup1_dummy in the forward direction
decode64_uint32(): Transformed branch between for.inc.2 and cleanup1_dummy_dummy in the forward direction
decode64_uint32(): Transformed branch between for.inc.3 and cleanup1_dummy_dummy_dummy in the forward direction
Direct branch from for.inc.2 needs to be instrumented
Direct branch from for.inc.1 needs to be instrumented
Direct branch from for.inc needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 2 for decode64_uint32 has been optimized for entry cost!
Storing cost of decode64_uint32() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function decode64_uint32

Loops scheduled for transform for decode64_uint32:- 

yescrypt(): Transformed branch between if.end and cleanup in the forward direction
yescrypt(): Transformed branch between if.end6 and cleanup_dummy in the forward direction
Direct branch from entry needs to be instrumented
Func cost 203 for yescrypt has been optimized for entry cost!
Storing cost of yescrypt() : 203

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypt

Loops scheduled for transform for yescrypt:- 

Func cost 2 for yescrypt_gensalt has been optimized for entry cost!
Storing cost of yescrypt_gensalt() : 2

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypt_gensalt

Loops scheduled for transform for yescrypt_gensalt:- 

yescrypt_gensalt_r(): Transformed branch between if.end10 and cleanup in the forward direction
yescrypt_gensalt_r(): Transformed branch between lor.lhs.false20 and cleanup_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.then29 and if.end36 in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end36 and cleanup_dummy_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i and cleanup_dummy_dummy_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i137 and cleanup_dummy_dummy_dummy_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between encode64.exit and cleanup_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i137.1 and cleanup_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i137.2 and cleanup_dummy_dummy_dummy_dummy_dummy_dummy1 in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i137.3 and cleanup_dummy_dummy_dummy_dummy_dummy_dummy1_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i137.4 and cleanup_dummy_dummy_dummy_dummy_dummy_dummy1_dummy_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i.1 and cleanup_dummy_dummy_dummy_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i.2 and cleanup_dummy_dummy_dummy_dummy_dummy3 in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i.3 and cleanup_dummy_dummy_dummy_dummy_dummy3_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between if.end.i.4 and cleanup_dummy_dummy_dummy_dummy_dummy3_dummy_dummy in the forward direction
yescrypt_gensalt_r(): Transformed branch between do.body.i.1 and for.body.i.i in the forward direction
Pred cost for if.end5 is 3
Pred cost for if.end.i.i.3 is 7
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy1_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy1_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy1_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy_dummy1 is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy3_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy3_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy3_dummy is 1
Pred cost for cleanup_dummy_dummy_dummy_dummy_dummy3 is 1
Pred cost for cleanup_dummy_dummy_dummy is 1
Pred cost for cleanup_dummy_dummy is 1
Pred cost for cleanup_dummy is 1
Func cost 8 for yescrypt_gensalt_r has been optimized for entry cost!
Func cost 1 for yescrypt_gensalt_r has been optimized for exit cost!
Storing cost of yescrypt_gensalt_r() : 9

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypt_gensalt_r

Loops scheduled for transform for yescrypt_gensalt_r:- 

manageDanglingLCCs(inverted V shape): Removing cost 103 of if.end.i
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end.i to successor if.then6.i
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end.i to successor if.end8.i
Pred cost for if.end8.i is 105
Pred cost for if.end9.i is 102
Pred cost for if.then6.i is 205
Func cost 3 for yescrypt_hash has been optimized for entry cost!
Func cost 1 for yescrypt_hash has been optimized for exit cost!
Storing cost of yescrypt_hash() : 4

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypt_hash

Loops scheduled for transform for yescrypt_hash:- 

yescrypt_r(): Transformed branch between if.end and cleanup110 in the forward direction
yescrypt_r(): Transformed branch between sw.epilog and cleanup110_dummy in the forward direction
yescrypt_r(): Transformed branch between if.end40 and cleanup110_dummy_dummy in the forward direction
yescrypt_r(): Transformed branch between cleanup.cont50 and cleanup110_dummy_dummy_dummy in the forward direction
yescrypt_r(): Transformed branch between if.end55 and cleanup110_dummy_dummy_dummy_dummy in the forward direction
yescrypt_r(): Transformed branch between if.end68 and cleanup110_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_r(): Transformed branch between if.end84 and cleanup110_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_r(): Transformed branch between do.body.i.1 and for.body.i.i in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 104 of if.then26
manageDanglingLCCs(inverted V shape): Adding pred cost 104 of if.then26 to successor if.then28
manageDanglingLCCs(inverted V shape): Adding pred cost 104 of if.then26 to successor if.end31
manageDanglingLCCs(inverted V shape): Removing cost 106 of if.end40
manageDanglingLCCs(inverted V shape): Adding pred cost 106 of if.end40 to successor cleanup48
manageDanglingLCCs(inverted V shape): Adding pred cost 106 of if.end40 to successor cleanup.cont50
manageDanglingLCCs(inverted V shape): Removing cost 116 of cleanup.cont50
manageDanglingLCCs(inverted V shape): Adding pred cost 116 of cleanup.cont50 to successor if.then53
manageDanglingLCCs(inverted V shape): Adding pred cost 116 of cleanup.cont50 to successor if.end55
manageDanglingLCCs(inverted V shape): Removing cost 105 of if.end84
manageDanglingLCCs(inverted V shape): Adding pred cost 105 of if.end84 to successor if.then87
manageDanglingLCCs(inverted V shape): Adding pred cost 105 of if.end84 to successor if.end90
Pred cost for sw.bb16 is 2
Pred cost for if.end.i.i.3 is 7
Pred cost for if.then105.loopexit is 1
Pred cost for if.then87 is 309
Pred cost for if.then105 is 102
Pred cost for if.end107 is 205
manageDanglingLCCs(V shape): Removing cost 309 of predecessor if.then87 for merge node cleanup110_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then105 for merge node cleanup110_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 205 of predecessor if.end107 for merge node cleanup110_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 205 as initial cost for merge node cleanup110_dummy_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for sw.bb16 is 2
Pred cost for if.end.i.i.3 is 7
Pred cost for cleanup110_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 206
Pred cost for if.then77 is 308
manageDanglingLCCs(V shape): Removing cost 308 of predecessor if.then77 for merge node cleanup110_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 206 of predecessor cleanup110_dummy_dummy_dummy_dummy_dummy_dummy_dummy for merge node cleanup110_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 257 as initial cost for merge node cleanup110_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for sw.bb16 is 2
Pred cost for if.end.i.i.3 is 7
Pred cost for cleanup110_dummy_dummy_dummy_dummy_dummy_dummy is 258
Pred cost for if.then58 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then58 for merge node cleanup110_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 258 of predecessor cleanup110_dummy_dummy_dummy_dummy_dummy_dummy for merge node cleanup110_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 180 as initial cost for merge node cleanup110_dummy_dummy_dummy_dummy_dummy
Pred cost for sw.bb16 is 2
Pred cost for if.end.i.i.3 is 7
Pred cost for cleanup110_dummy_dummy_dummy_dummy_dummy is 181
Pred cost for if.then53 is 218
manageDanglingLCCs(V shape): Removing cost 218 of predecessor if.then53 for merge node cleanup110_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 181 of predecessor cleanup110_dummy_dummy_dummy_dummy_dummy for merge node cleanup110_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 199 as initial cost for merge node cleanup110_dummy_dummy_dummy_dummy
Pred cost for sw.bb16 is 2
Pred cost for if.end.i.i.3 is 7
Pred cost for cleanup110_dummy_dummy_dummy_dummy is 200
Pred cost for cleanup48 is 208
manageDanglingLCCs(V shape): Removing cost 208 of predecessor cleanup48 for merge node cleanup110_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 200 of predecessor cleanup110_dummy_dummy_dummy_dummy for merge node cleanup110_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 204 as initial cost for merge node cleanup110_dummy_dummy_dummy
Pred cost for sw.bb16 is 2
Pred cost for if.end.i.i.3 is 7
Pred cost for cleanup110_dummy_dummy_dummy is 205
Pred cost for if.then36 is 204
Pred cost for if.then28 is 308
manageDanglingLCCs(V shape): Removing cost 308 of predecessor if.then28 for merge node cleanup110_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 204 of predecessor if.then36 for merge node cleanup110_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 205 of predecessor cleanup110_dummy_dummy_dummy for merge node cleanup110_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 239 as initial cost for merge node cleanup110_dummy_dummy
Pred cost for sw.bb16 is 2
Pred cost for if.end.i.i.3 is 7
Pred cost for cleanup110_dummy_dummy is 240
Pred cost for sw.default is 204
manageDanglingLCCs(V shape): Removing cost 204 of predecessor sw.default for merge node cleanup110_dummy
manageDanglingLCCs(V shape): Removing cost 240 of predecessor cleanup110_dummy_dummy for merge node cleanup110_dummy
manageDanglingLCCs(V shape): Settting average cost 222 as initial cost for merge node cleanup110_dummy
Pred cost for sw.bb16 is 2
Pred cost for if.end.i.i.3 is 7
Pred cost for cleanup110_dummy is 223
Pred cost for if.then is 204
manageDanglingLCCs(V shape): Removing cost 204 of predecessor if.then for merge node cleanup110
manageDanglingLCCs(V shape): Removing cost 223 of predecessor cleanup110_dummy for merge node cleanup110
manageDanglingLCCs(V shape): Settting average cost 213 as initial cost for merge node cleanup110
Pred cost for sw.bb16 is 2
Pred cost for if.end.i.i.3 is 7
Func cost 515 for yescrypt_r has been optimized for entry cost!
Func cost 517 for yescrypt_r has been optimized for exit cost!
Storing cost of yescrypt_r() : 1032

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypt_r

Loops scheduled for transform for yescrypt_r:- 

manageDanglingLCCs(inverted V shape): Removing cost 103 of if.end.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end.i.i to successor if.then6.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 103 of if.end.i.i to successor if.end8.i.i
Pred cost for if.end8.i.i is 105
Pred cost for if.end9.i.i is 102
Pred cost for if.then6.i.i is 205
Func cost 2 for yescrypthash has been optimized for entry cost!
Func cost 1 for yescrypthash has been optimized for exit cost!
Storing cost of yescrypthash() : 3

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypthash

Loops scheduled for transform for yescrypthash:- 

Total functions: 7, uninstrumented functions: 1
Optimized 11 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o yescrypt/cpuminer-yescrypt-common.o `test -f 'yescrypt/cpuminer-yescrypt-common.ll' || echo './'`yescrypt/cpuminer-yescrypt-common.ll
mv -f yescrypt/.deps/cpuminer-yescrypt-common.Tpo yescrypt/.deps/cpuminer-yescrypt-common.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT yescrypt/llvm_cpuminer-yescrypt-best.ll -MD -MP -MF yescrypt/.deps/cpuminer-yescrypt-best.Tpo -c -o yescrypt/llvm_cpuminer-yescrypt-best.ll `test -f 'yescrypt/yescrypt-best.c' || echo './'`yescrypt/yescrypt-best.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from yescrypt/yescrypt-best.c:2:
In file included from yescrypt/yescrypt-simd.c:50:
In file included from yescrypt/sha256_Y.h:35:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
In file included from yescrypt/yescrypt-best.c:2:
yescrypt/yescrypt-simd.c:1214:8: warning: result of comparison of constant 2251799813685247 with expression of type 'uint32_t' (aka 'unsigned int') is always false [-Wtautological-constant-out-of-range-compare]
            p > SIZE_MAX / S_SIZE_ALL) {
            ~ ^ ~~~~~~~~~~~~~~~~~~~~~
2 warnings generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < yescrypt/llvm_cpuminer-yescrypt-best.ll > yescrypt/opt_cpuminer-yescrypt-best.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < yescrypt/opt_cpuminer-yescrypt-best.ll > yescrypt/cpuminer-yescrypt-best.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blockmix
Function: blockmix_xor
Function: blockmix_xor_save
Function: smix
Function: smix1
Function: smix2
Function: yescrypt_free_local
Function: yescrypt_free_shared
Function: yescrypt_init_local
Function: yescrypt_init_shared
Function: yescrypt_kdf
blockmix(): Transformed branch between for.end.i.loopexit.unr-lcssa and for.end.i in the forward direction
blockmix(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
blockmix(): Checking if simple for Loop Loop at depth 1 containing: %for.body274.i<header><latch><exiting>
. Latch: for.body274.i, Exiting block: for.body274.i
blockmix(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
blockmix(): Checking if simple for Loop Loop at depth 1 containing: %for.cond13<header><exiting>,%for.body15<latch>
. Latch: for.body15, Exiting block: for.cond13
Has backedges: (+ -1 (* 2 (ARG: 2) ) ) (numCost: -1)
Has backedges: (+ -1 (umax 1 (+ -1 (* 2 (ARG: 2) ) ) ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 106, preheader cost: 108
Self loop will be transformed, & body cost is 106 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Header-colocated-exit loop will be transformed, & body cost is 456 for loop with header for.cond13
Self loop:- #backedges: 0, body cost: 421, preheader cost: 115
Self loop will be transformed, & body cost is 421 for loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Direct branch from for.end.i.loopexit.unr-lcssa needs to be instrumented
Direct branch from if.then needs to be instrumented
Has backedges: (+ -2 (ARG: 2) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 470, preheader cost: 345
Self loop will be transformed, & body cost is 470 for loop Loop at depth 1 containing: %for.body274.i<header><latch><exiting>

Func cost 24 for blockmix has been optimized for entry cost!
Storing cost of blockmix() : 24

Instrumenting loops (self loop count: 3, sese loop count: 1) for function blockmix

Loops scheduled for transform for blockmix:- 
Self Loop: Loop at depth 1 containing: %for.body274.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.cond13<header><exiting>,%for.body15<latch>



blockmix(): Self loop Loop at depth 1 containing: %for.body274.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body274.i( blockmix() ). Self Loop cost: 470. Iterations: 8

blockmix(): Transformed Self loop Loop at depth 1 containing: %for.body274.i<header><latch><exiting>


blockmix(): Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body.i( blockmix() ). Self Loop cost: 421. Iterations: 9

blockmix(): Transformed Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


blockmix(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( blockmix() ). Self Loop cost: 106. Iterations: 37
Self loop is canonical. Going for special transformation with 37 iterations.
Attempting to transform self loop for.body of blockmix with 37 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %i.01860 = phi i64 [ 0, %if.end ], [ %inc, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %418 = add i64 37, %i.01860
Applied self loop transform on for.body( blockmix() )

blockmix(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


blockmix(): Max depth loop Loop at depth 1 containing: %for.cond13<header><exiting>,%for.body15<latch>


This seseloop will not be transformed since it has no induction variable --> for.cond13( blockmix() )

blockmix(): Transformed loop Loop at depth 1 containing: %for.cond13<header><exiting>,%for.body15<latch>

blockmix_xor(): Transformed branch between if.then.i and if.end.i in the forward direction
blockmix_xor(): Transformed branch between if.else.i and if.end.i in the forward direction
blockmix_xor(): Transformed branch between if.end.i.loopexit.unr-lcssa and if.end.i_dummy1 in the forward direction
blockmix_xor(): Transformed branch between if.end.i.loopexit1976.unr-lcssa and if.end.i_dummy in the forward direction
blockmix_xor(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
blockmix_xor(): Checking if simple for Loop Loop at depth 1 containing: %for.body24.i<header><latch><exiting>
. Latch: for.body24.i, Exiting block: for.body24.i
blockmix_xor(): Checking if simple for Loop Loop at depth 1 containing: %for.body348.i<header><latch><exiting>
. Latch: for.body348.i, Exiting block: for.body348.i
blockmix_xor(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
blockmix_xor(): Checking if simple for Loop Loop at depth 1 containing: %for.body10<header><latch><exiting>
. Latch: for.body10, Exiting block: for.body10
blockmix_xor(): Checking if simple for Loop Loop at depth 1 containing: %for.cond44<header><exiting>,%for.body46<latch>
. Latch: for.body46, Exiting block: for.cond44
Self loop:- #backedges: 0, body cost: 833, preheader cost: 220
Self loop will be transformed, & body cost is 833 for loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Direct branch from if.end.i.loopexit1976.unr-lcssa needs to be instrumented
Direct branch from if.then.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 833, preheader cost: 220
Self loop will be transformed, & body cost is 833 for loop Loop at depth 1 containing: %for.body24.i<header><latch><exiting>

Direct branch from if.end.i.loopexit.unr-lcssa needs to be instrumented
Direct branch from if.else.i needs to be instrumented
Has backedges: (+ -2 (ARG: 3) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 494, preheader cost: 474
Self loop will be transformed, & body cost is 494 for loop Loop at depth 1 containing: %for.body348.i<header><latch><exiting>

Has backedges: (+ -1 (* 2 (ARG: 3) ) ) (numCost: -1)
Has backedges: (+ -1 (umax 1 (+ -1 (* 2 (ARG: 3) ) ) ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 209, preheader cost: 216
Self loop will be transformed, & body cost is 209 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Has backedges: (+ -1 (umax 1 (+ -1 (* 2 (ARG: 3) ) ) ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 209, preheader cost: 216
Self loop will be transformed, & body cost is 209 for loop Loop at depth 1 containing: %for.body10<header><latch><exiting>

Header-colocated-exit loop will be transformed, & body cost is 468 for loop with header for.cond44
Func cost 5 for blockmix_xor has been optimized for entry cost!
Storing cost of blockmix_xor() : 5

Instrumenting loops (self loop count: 5, sese loop count: 1) for function blockmix_xor

Loops scheduled for transform for blockmix_xor:- 
Self Loop: Loop at depth 1 containing: %for.body24.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body348.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body10<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.cond44<header><exiting>,%for.body46<latch>



blockmix_xor(): Self loop Loop at depth 1 containing: %for.body24.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body24.i( blockmix_xor() ). Self Loop cost: 833. Iterations: 4

blockmix_xor(): Transformed Self loop Loop at depth 1 containing: %for.body24.i<header><latch><exiting>


blockmix_xor(): Self loop Loop at depth 1 containing: %for.body348.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body348.i( blockmix_xor() ). Self Loop cost: 494. Iterations: 8

blockmix_xor(): Transformed Self loop Loop at depth 1 containing: %for.body348.i<header><latch><exiting>


blockmix_xor(): Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body.i( blockmix_xor() ). Self Loop cost: 833. Iterations: 4

blockmix_xor(): Transformed Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


blockmix_xor(): Self loop Loop at depth 1 containing: %for.body10<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10( blockmix_xor() ). Self Loop cost: 209. Iterations: 19
Self loop is canonical. Going for special transformation with 19 iterations.
Attempting to transform self loop for.body10 of blockmix_xor with 19 inner loop iterations --> Loop at depth 1 containing: %for.body10<header><latch><exiting>
Found local ind var:   %i.11971 = phi i64 [ 0, %if.else ], [ %inc14, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %468 = add i64 19, %i.11971
Applied self loop transform on for.body10( blockmix_xor() )

blockmix_xor(): Transformed Self loop Loop at depth 1 containing: %for.body10<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


blockmix_xor(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( blockmix_xor() ). Self Loop cost: 209. Iterations: 19
Self loop is canonical. Going for special transformation with 19 iterations.
Attempting to transform self loop for.body of blockmix_xor with 19 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %i.01972 = phi i64 [ 0, %if.then2 ], [ %inc, %selfLoopOptExitBlock3 ], mapping it to   %phiIVClone4 = phi i64 
User in header block to replace Phi:   %465 = add i64 19, %i.01972
Applied self loop transform on for.body( blockmix_xor() )

blockmix_xor(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock2<header><latch><exiting>


blockmix_xor(): Max depth loop Loop at depth 1 containing: %for.cond44<header><exiting>,%for.body46<latch>


This seseloop will not be transformed since it has no induction variable --> for.cond44( blockmix_xor() )

blockmix_xor(): Transformed loop Loop at depth 1 containing: %for.cond44<header><exiting>,%for.body46<latch>

blockmix_xor_save(): Transformed branch between for.end.i.loopexit.unr-lcssa and for.end.i in the forward direction
blockmix_xor_save(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
blockmix_xor_save(): Checking if simple for Loop Loop at depth 1 containing: %for.body336.i<header><latch><exiting>
. Latch: for.body336.i, Exiting block: for.body336.i
blockmix_xor_save(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
blockmix_xor_save(): Checking if simple for Loop Loop at depth 1 containing: %for.cond31<header><exiting>,%for.body33<latch>
. Latch: for.body33, Exiting block: for.cond31
Self loop:- #backedges: 0, body cost: 833, preheader cost: 218
Self loop will be transformed, & body cost is 833 for loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Direct branch from for.end.i.loopexit.unr-lcssa needs to be instrumented
Direct branch from if.then needs to be instrumented
Has backedges: (+ -2 (ARG: 3) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 502, preheader cost: 476
Self loop will be transformed, & body cost is 502 for loop Loop at depth 1 containing: %for.body336.i<header><latch><exiting>

Has backedges: (+ -1 (* 2 (ARG: 3) ) ) (numCost: -1)
Has backedges: (+ -1 (umax 1 (+ -1 (* 2 (ARG: 3) ) ) ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 209, preheader cost: 211
Self loop will be transformed, & body cost is 209 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Header-colocated-exit loop will be transformed, & body cost is 472 for loop with header for.cond31
Func cost 5 for blockmix_xor_save has been optimized for entry cost!
Storing cost of blockmix_xor_save() : 5

Instrumenting loops (self loop count: 3, sese loop count: 1) for function blockmix_xor_save

Loops scheduled for transform for blockmix_xor_save:- 
Self Loop: Loop at depth 1 containing: %for.body336.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.cond31<header><exiting>,%for.body33<latch>



blockmix_xor_save(): Self loop Loop at depth 1 containing: %for.body336.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body336.i( blockmix_xor_save() ). Self Loop cost: 502. Iterations: 7

blockmix_xor_save(): Transformed Self loop Loop at depth 1 containing: %for.body336.i<header><latch><exiting>


blockmix_xor_save(): Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body.i( blockmix_xor_save() ). Self Loop cost: 833. Iterations: 4

blockmix_xor_save(): Transformed Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


blockmix_xor_save(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( blockmix_xor_save() ). Self Loop cost: 209. Iterations: 19
Self loop is canonical. Going for special transformation with 19 iterations.
Attempting to transform self loop for.body of blockmix_xor_save with 19 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %i.01987 = phi i64 [ 0, %if.end ], [ %inc, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %454 = add i64 19, %i.01987
Applied self loop transform on for.body( blockmix_xor_save() )

blockmix_xor_save(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


blockmix_xor_save(): Max depth loop Loop at depth 1 containing: %for.cond31<header><exiting>,%for.body33<latch>


This seseloop will not be transformed since it has no induction variable --> for.cond31( blockmix_xor_save() )

blockmix_xor_save(): Transformed loop Loop at depth 1 containing: %for.cond31<header><exiting>,%for.body33<latch>

smix(): Transformed branch between if.end23 and if.end34 in the forward direction
smix(): Transformed branch between for.end and if.end95 in the forward direction
smix(): Transformed branch between for.body74.lr.ph and if.end95_dummy in the forward direction
smix(): Checking if simple for Loop Loop at depth 1 containing: %for.body.us<header>,%if.then63.us,%if.end64.us,%while.cond.i.us,%p2floor.exit.us<latch><exiting>
    Loop at depth 2 containing: %while.cond.i.us<header><latch><exiting>
. Latch: p2floor.exit.us, Exiting block: p2floor.exit.us
smix(): Checking if simple for Loop Loop at depth 2 containing: %while.cond.i.us<header><latch><exiting>
. Latch: while.cond.i.us, Exiting block: while.cond.i.us
smix(): Checking if simple for Loop Loop at depth 1 containing: %for.body.us<header>,%if.then63.us,%if.end64.us,%while.cond.i.us,%p2floor.exit.us<latch><exiting>
    Loop at depth 2 containing: %while.cond.i.us<header><latch><exiting>
. Latch: p2floor.exit.us, Exiting block: p2floor.exit.us
smix(): Checking if simple for Loop Loop at depth 1 containing: %if.end60<header>,%if.then63,%if.end64,%while.cond.i,%p2floor.exit<latch><exiting>
    Loop at depth 2 containing: %while.cond.i<header><latch><exiting>
. Latch: p2floor.exit, Exiting block: p2floor.exit
smix(): Checking if simple for Loop Loop at depth 2 containing: %while.cond.i<header><latch><exiting>
. Latch: while.cond.i, Exiting block: while.cond.i
smix(): Checking if simple for Loop Loop at depth 1 containing: %if.end60<header>,%if.then63,%if.end64,%while.cond.i,%p2floor.exit<latch><exiting>
    Loop at depth 2 containing: %while.cond.i<header><latch><exiting>
. Latch: p2floor.exit, Exiting block: p2floor.exit
smix(): Checking if simple for Loop Loop at depth 1 containing: %for.body74.us<header><latch><exiting>
. Latch: for.body74.us, Exiting block: for.body74.us
smix(): Checking if simple for Loop Loop at depth 1 containing: %for.body74<header><latch><exiting>
. Latch: for.body74, Exiting block: for.body74
Pred cost for if.then15 is 4
Pred cost for if.end19 is 3
Func cost 6 for smix has been optimized for entry cost!
Has backedges: (+ -1 (zext (ARG: 3) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 4, preheader cost: 14
Self loop will be transformed, & body cost is 4 for loop Loop at depth 2 containing: %while.cond.i.us<header><latch><exiting>

Instrumenting loop with body cost: 19
Non-header-colocated-exit loop will be transformed, & body cost is 19 for loop with header for.body.us
Has backedges: (+ -1 (zext (ARG: 3) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 4, preheader cost: 19
Self loop will be transformed, & body cost is 4 for loop Loop at depth 2 containing: %while.cond.i<header><latch><exiting>

Instrumenting loop with body cost: 24
Non-header-colocated-exit loop will be transformed, & body cost is 24 for loop with header if.end60
Has backedges: (+ -1 (zext (ARG: 3) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 6, preheader cost: 28
Self loop will be transformed, & body cost is 6 for loop Loop at depth 1 containing: %for.body74.us<header><latch><exiting>

Has backedges: (+ -1 (zext (ARG: 3) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 9, preheader cost: 28
Self loop will be transformed, & body cost is 9 for loop Loop at depth 1 containing: %for.body74<header><latch><exiting>

Func cost 19 for smix has been optimized for exit cost!
Storing cost of smix() : 25

Instrumenting loops (self loop count: 4, sese loop count: 2) for function smix

Loops scheduled for transform for smix:- 
Self Loop: Loop at depth 2 containing: %while.cond.i.us<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body74.us<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body74<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %while.cond.i<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body.us<header>,%if.then63.us,%if.end64.us,%while.cond.i.us,%p2floor.exit.us<latch><exiting>
    Loop at depth 2 containing: %while.cond.i.us<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %if.end60<header>,%if.then63,%if.end64,%while.cond.i,%p2floor.exit<latch><exiting>
    Loop at depth 2 containing: %while.cond.i<header><latch><exiting>



smix(): Self loop Loop at depth 2 containing: %while.cond.i.us<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.cond.i.us( smix() )

smix(): Transformed Self loop Loop at depth 2 containing: %while.cond.i.us<header><latch><exiting>


smix(): Self loop Loop at depth 1 containing: %for.body74.us<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body74.us( smix() ). Self Loop cost: 6. Iterations: 666
Self loop is canonical. Going for special transformation with 666 iterations.
Attempting to transform self loop for.body74.us of smix with 666 inner loop iterations --> Loop at depth 1 containing: %for.body74.us<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ %indvars.iv.next, %selfLoopOptExitBlock ], [ 0, %for.body74.us.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %4 = add i64 666, %indvars.iv
Applied self loop transform on for.body74.us( smix() )

smix(): Transformed Self loop Loop at depth 1 containing: %for.body74.us<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


smix(): Self loop Loop at depth 1 containing: %for.body74<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body74( smix() ). Self Loop cost: 9. Iterations: 444
Self loop is canonical. Going for special transformation with 444 iterations.
Attempting to transform self loop for.body74 of smix with 444 inner loop iterations --> Loop at depth 1 containing: %for.body74<header><latch><exiting>
Found local ind var:   %indvars.iv193 = phi i64 [ %indvars.iv.next194, %selfLoopOptExitBlock2 ], [ 0, %for.body74.preheader ], mapping it to   %phiIVClone3 = phi i64 
User in header block to replace Phi:   %6 = add i64 444, %indvars.iv193
Applied self loop transform on for.body74( smix() )

smix(): Transformed Self loop Loop at depth 1 containing: %for.body74<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock1<header><latch><exiting>


smix(): Self loop Loop at depth 2 containing: %while.cond.i<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.cond.i( smix() )

smix(): Transformed Self loop Loop at depth 2 containing: %while.cond.i<header><latch><exiting>


smix(): Max depth loop Loop at depth 1 containing: %if.end60<header>,%if.then63,%if.end64,%while.cond.i,%p2floor.exit<latch><exiting>
    Loop at depth 2 containing: %while.cond.i<header><latch><exiting>


This seseloop will be transformed & instrumented --> if.end60( smix() ). SESE Loop cost: 24. Iterations: 166
Found local ind var:   %indvars.iv201 = phi i64 [ %indvars.iv.next202, %seseLoopOptHNCExitBlock ], [ 0, %if.end60.preheader ], mapping it to   %phiIVClone7 = phi i64 
User in header block to replace Phi:   %2 = add i64 166, %indvars.iv201
Applied sese loop transform on if.end60( smix() )

smix(): Transformed loop Loop at depth 1 containing: %if.end60<header>,%if.then63,%if.end64,%while.cond.i,%p2floor.exit,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%if.end64,%while.cond.i,%p2floor.exit<latch><exiting>,%if.then63
        Loop at depth 3 containing: %while.cond.i<header><latch><exiting>


smix(): Max depth loop Loop at depth 1 containing: %for.body.us<header>,%if.then63.us,%if.end64.us,%while.cond.i.us,%p2floor.exit.us<latch><exiting>
    Loop at depth 2 containing: %while.cond.i.us<header><latch><exiting>


This seseloop will be transformed & instrumented --> for.body.us( smix() ). SESE Loop cost: 19. Iterations: 210
Found local ind var:   %indvars.iv197 = phi i64 [ %indvars.iv.next198, %seseLoopOptHNCExitBlock11 ], [ 0, %for.body.us.preheader ], mapping it to   %phiIVClone12 = phi i64 
User in header block to replace Phi:   %1 = add i64 210, %indvars.iv197
Applied sese loop transform on for.body.us( smix() )

smix(): Transformed loop Loop at depth 1 containing: %for.body.us<header>,%if.then63.us,%if.end64.us,%while.cond.i.us,%p2floor.exit.us,%seseLoopOptBlock10,%seseLoopOptHNCExitBlock11<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock10<header>,%if.end64.us,%while.cond.i.us,%p2floor.exit.us<latch><exiting>,%if.then63.us
        Loop at depth 3 containing: %while.cond.i.us<header><latch><exiting>

smix1(): Transformed branch between if.else116 and if.end219 in the forward direction
smix1(): Checking if simple for Loop Loop at depth 1 containing: %for.cond2.preheader<header><latch><exiting>
. Latch: for.cond2.preheader, Exiting block: for.cond2.preheader
smix1(): Checking if simple for Loop Loop at depth 1 containing: %for.body31<header>,%for.body42.lr.ph,%for.body42,%for.end79.loopexit,%for.end79<latch><exiting>
    Loop at depth 2 containing: %for.body42<header><latch><exiting>
. Latch: for.end79, Exiting block: for.end79
smix1(): Checking if simple for Loop Loop at depth 2 containing: %for.body42<header><latch><exiting>
. Latch: for.body42, Exiting block: for.body42
smix1(): Checking if simple for Loop Loop at depth 1 containing: %for.body31<header>,%for.body42.lr.ph,%for.body42,%for.end79.loopexit,%for.end79<latch><exiting>
    Loop at depth 2 containing: %for.body42<header><latch><exiting>
. Latch: for.end79, Exiting block: for.end79
smix1(): Checking if simple for Loop Loop at depth 1 containing: %for.body130<header>,%for.body147.lr.ph,%for.body147,%for.end172.loopexit,%for.end172<latch><exiting>
    Loop at depth 2 containing: %for.body147<header><latch><exiting>
. Latch: for.end172, Exiting block: for.end172
smix1(): Checking if simple for Loop Loop at depth 2 containing: %for.body147<header><latch><exiting>
. Latch: for.body147, Exiting block: for.body147
smix1(): Checking if simple for Loop Loop at depth 1 containing: %for.body130<header>,%for.body147.lr.ph,%for.body147,%for.end172.loopexit,%for.end172<latch><exiting>
    Loop at depth 2 containing: %for.body147<header><latch><exiting>
. Latch: for.end172, Exiting block: for.end172
smix1(): Checking if simple for Loop Loop at depth 1 containing: %for.body204<header><latch><exiting>
. Latch: for.body204, Exiting block: for.body204
smix1(): Checking if simple for Loop Loop at depth 1 containing: %for.cond225.preheader<header><latch><exiting>
. Latch: for.cond225.preheader, Exiting block: for.cond225.preheader
Has backedges: (+ -1 (* 2 (ARG: 1) ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 359, preheader cost: 9
Self loop will be transformed, & body cost is 359 for loop Loop at depth 1 containing: %for.cond2.preheader<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 39, preheader cost: 11
Self loop will be transformed, & body cost is 39 for loop Loop at depth 2 containing: %for.body42<header><latch><exiting>

Instrumenting loop with body cost: 13
Non-header-colocated-exit loop will be transformed, & body cost is 13 for loop with header for.body31
Self loop:- #backedges: 0, body cost: 33, preheader cost: 11
Self loop will be transformed, & body cost is 33 for loop Loop at depth 2 containing: %for.body147<header><latch><exiting>

Instrumenting loop with body cost: 13
Non-header-colocated-exit loop will be transformed, & body cost is 13 for loop with header for.body130
Self loop:- #backedges: 0, body cost: 60, preheader cost: 48
Self loop will be transformed, & body cost is 60 for loop Loop at depth 1 containing: %for.body204<header><latch><exiting>

Has backedges: (+ -1 (* 2 (ARG: 1) ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 311, preheader cost: 96
Self loop will be transformed, & body cost is 311 for loop Loop at depth 1 containing: %for.cond225.preheader<header><latch><exiting>

Func cost 97 for smix1 has been optimized for entry cost!
Storing cost of smix1() : 97

Instrumenting loops (self loop count: 5, sese loop count: 2) for function smix1

Loops scheduled for transform for smix1:- 
Self Loop: Loop at depth 1 containing: %for.body204<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body147<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.cond225.preheader<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body42<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.cond2.preheader<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body130<header>,%for.body147.lr.ph,%for.body147,%for.end172.loopexit,%for.end172<latch><exiting>
    Loop at depth 2 containing: %for.body147<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body31<header>,%for.body42.lr.ph,%for.body42,%for.end79.loopexit,%for.end79<latch><exiting>
    Loop at depth 2 containing: %for.body42<header><latch><exiting>



smix1(): Self loop Loop at depth 1 containing: %for.body204<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body204( smix1() ). Self Loop cost: 60. Iterations: 66
Self loop is not canonical. Going for generic transformation with 66 iterations.
Attempting to transform self loop for.body204 of smix1 with 66 inner loop iterations --> Loop at depth 1 containing: %for.body204<header><latch><exiting>
Found local ind var:   %i.3506 = phi i32 [ %add213, %selfLoopOptExitBlock ], [ 1, %for.body204.preheader ], mapping it to   %phiIVClone1 = phi i32 
User in header block to replace Phi:   %77 = add i32 132, %i.3506
Applied self loop transform on for.body204( smix1() )

smix1(): Transformed Self loop Loop at depth 1 containing: %for.body204<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


smix1(): Self loop Loop at depth 2 containing: %for.body147<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body147( smix1() ). Self Loop cost: 33. Iterations: 121
Self loop is not canonical. Going for generic transformation with 121 iterations.
Attempting to transform self loop for.body147 of smix1 with 121 inner loop iterations --> Loop at depth 2 containing: %for.body147<header><latch><exiting>
Found local ind var:   %i.2511 = phi i32 [ 1, %for.body147.lr.ph ], [ %add171, %selfLoopOptExitBlock3 ], mapping it to   %phiIVClone5 = phi i32 
User in header block to replace Phi:   %77 = add i32 242, %i.2511
Applied self loop transform on for.body147( smix1() )

smix1(): Transformed Self loop Loop at depth 2 containing: %for.body147<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock2<header><latch><exiting>


smix1(): Self loop Loop at depth 1 containing: %for.cond225.preheader<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.cond225.preheader( smix1() ). Self Loop cost: 311. Iterations: 12
Self loop is canonical. Going for special transformation with 12 iterations.
Attempting to transform self loop for.cond225.preheader of smix1 with 12 inner loop iterations --> Loop at depth 1 containing: %for.cond225.preheader<header><latch><exiting>
Found local ind var:   %k.1503 = phi i64 [ %inc244, %selfLoopOptExitBlock13 ], [ 0, %for.cond225.preheader.preheader ], mapping it to   %phiIVClone14 = phi i64 
User in header block to replace Phi:   %81 = add i64 12, %k.1503
Applied self loop transform on for.cond225.preheader( smix1() )

smix1(): Transformed Self loop Loop at depth 1 containing: %for.cond225.preheader<header>,%selfLoopOptBlock12,%selfLoopOptExitBlock13<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock12<header><latch><exiting>


smix1(): Self loop Loop at depth 2 containing: %for.body42<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body42( smix1() ). Self Loop cost: 39. Iterations: 102
Self loop is not canonical. Going for generic transformation with 102 iterations.
Attempting to transform self loop for.body42 of smix1 with 102 inner loop iterations --> Loop at depth 2 containing: %for.body42<header><latch><exiting>
Found local ind var:   %i.1525 = phi i32 [ 1, %for.body42.lr.ph ], [ %add78, %selfLoopOptExitBlock19 ], mapping it to   %phiIVClone21 = phi i32 
User in header block to replace Phi:   %73 = add i32 204, %i.1525
Applied self loop transform on for.body42( smix1() )

smix1(): Transformed Self loop Loop at depth 2 containing: %for.body42<header>,%selfLoopOptBlock18,%selfLoopOptExitBlock19<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock18<header><latch><exiting>


smix1(): Self loop Loop at depth 1 containing: %for.cond2.preheader<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.cond2.preheader( smix1() ). Self Loop cost: 359. Iterations: 11
Self loop is canonical. Going for special transformation with 11 iterations.
Attempting to transform self loop for.cond2.preheader of smix1 with 11 inner loop iterations --> Loop at depth 1 containing: %for.cond2.preheader<header><latch><exiting>
Found local ind var:   %k.0540 = phi i64 [ %inc11, %selfLoopOptExitBlock29 ], [ 0, %for.cond2.preheader.preheader ], mapping it to   %phiIVClone30 = phi i64 
User in header block to replace Phi:   %3 = add i64 11, %k.0540
Applied self loop transform on for.cond2.preheader( smix1() )

smix1(): Transformed Self loop Loop at depth 1 containing: %for.cond2.preheader<header>,%selfLoopOptBlock28,%selfLoopOptExitBlock29<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock28<header><latch><exiting>


smix1(): Max depth loop Loop at depth 1 containing: %for.body31<header>,%for.body42.lr.ph,%for.body42,%for.end79.loopexit,%for.end79<latch><exiting>,%selfLoopOptBlock18,%selfLoopOptExitBlock19
    Loop at depth 2 containing: %for.body42<header>,%selfLoopOptBlock18,%selfLoopOptExitBlock19<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock18<header><latch><exiting>


This seseloop will not be transformed since it has no induction variable --> for.body31( smix1() )

smix1(): Transformed loop Loop at depth 1 containing: %for.body31<header>,%for.body42.lr.ph,%for.body42,%for.end79.loopexit,%for.end79<latch><exiting>,%selfLoopOptBlock18,%selfLoopOptExitBlock19
    Loop at depth 2 containing: %for.body42<header>,%selfLoopOptBlock18,%selfLoopOptExitBlock19<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock18<header><latch><exiting>


smix1(): Max depth loop Loop at depth 1 containing: %for.body130<header>,%for.body147.lr.ph,%for.body147,%for.end172.loopexit,%for.end172<latch><exiting>,%selfLoopOptBlock2,%selfLoopOptExitBlock3
    Loop at depth 2 containing: %for.body147<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock2<header><latch><exiting>


This seseloop will not be transformed since it has no induction variable --> for.body130( smix1() )

smix1(): Transformed loop Loop at depth 1 containing: %for.body130<header>,%for.body147.lr.ph,%for.body147,%for.end172.loopexit,%for.end172<latch><exiting>,%selfLoopOptBlock2,%selfLoopOptExitBlock3
    Loop at depth 2 containing: %for.body147<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock2<header><latch><exiting>

smix2(): Transformed branch between if.else52 and if.end130 in the forward direction
smix2(): Transformed branch between if.else91 and if.end130_dummy in the forward direction
smix2(): Transformed branch between if.end130 and cleanup in the forward direction
smix2(): Checking if simple for Loop Loop at depth 1 containing: %for.cond3.preheader<header><latch><exiting>
. Latch: for.cond3.preheader, Exiting block: for.cond3.preheader
smix2(): Checking if simple for Loop Loop at depth 1 containing: %for.body21<header>,%if.else,%if.then30,%if.end43<latch><exiting>
. Latch: if.end43, Exiting block: if.end43
smix2(): Checking if simple for Loop Loop at depth 1 containing: %for.body58<header><latch><exiting>
. Latch: for.body58, Exiting block: for.body58
smix2(): Checking if simple for Loop Loop at depth 1 containing: %do.body<header><latch><exiting>
. Latch: do.body, Exiting block: do.body
smix2(): Checking if simple for Loop Loop at depth 1 containing: %do.body110<header><latch><exiting>
. Latch: do.body110, Exiting block: do.body110
smix2(): Checking if simple for Loop Loop at depth 1 containing: %for.cond136.preheader<header><latch><exiting>
. Latch: for.cond136.preheader, Exiting block: for.cond136.preheader
Has backedges: (+ -1 (* 2 (ARG: 1) ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 359, preheader cost: 12
Self loop will be transformed, & body cost is 359 for loop Loop at depth 1 containing: %for.cond3.preheader<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 28, preheader cost: 30
Self loop will be transformed, & body cost is 28 for loop Loop at depth 1 containing: %for.body58<header><latch><exiting>

Has backedges: (+ -1 (/ (ARG: 3) 2 ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 23, preheader cost: 29
Self loop will be transformed, & body cost is 23 for loop Loop at depth 1 containing: %do.body<header><latch><exiting>

Has backedges: (+ -1 (/ (ARG: 3) 2 ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 23, preheader cost: 29
Self loop will be transformed, & body cost is 23 for loop Loop at depth 1 containing: %do.body110<header><latch><exiting>

Instrumenting loop with body cost: 28
Non-header-colocated-exit loop will be transformed, & body cost is 28 for loop with header for.body21
Has backedges: (+ -1 (* 2 (ARG: 1) ) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 311, preheader cost: 33
Self loop will be transformed, & body cost is 311 for loop Loop at depth 1 containing: %for.cond136.preheader<header><latch><exiting>

Func cost 25 for smix2 has been optimized for entry cost!
Storing cost of smix2() : 25

Instrumenting loops (self loop count: 5, sese loop count: 1) for function smix2

Loops scheduled for transform for smix2:- 
Self Loop: Loop at depth 1 containing: %for.body58<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %do.body110<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %do.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.cond136.preheader<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.cond3.preheader<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body21<header>,%if.else,%if.then30,%if.end43<latch><exiting>



smix2(): Self loop Loop at depth 1 containing: %for.body58<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body58( smix2() ). Self Loop cost: 28. Iterations: 142
Self loop is not canonical. Going for generic transformation with 142 iterations.
Attempting to transform self loop for.body58 of smix2 with 142 inner loop iterations --> Loop at depth 1 containing: %for.body58<header><latch><exiting>
Found local ind var:   %i.2315 = phi i64 [ 0, %for.body58.lr.ph ], [ %add89, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %72 = add i64 284, %i.2315
Applied self loop transform on for.body58( smix2() )

smix2(): Transformed Self loop Loop at depth 1 containing: %for.body58<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


smix2(): Self loop Loop at depth 1 containing: %do.body110<header><latch><exiting>


This selfloop will be transformed & instrumented --> do.body110( smix2() ). Self Loop cost: 23. Iterations: 173
Self loop is not canonical. Going for generic transformation with 173 iterations.
Attempting to transform self loop do.body110 of smix2 with 173 inner loop iterations --> Loop at depth 1 containing: %do.body110<header><latch><exiting>
Found local ind var:   %i.4 = phi i64 [ %dec125, %selfLoopOptExitBlock3 ], [ %div, %do.body110.preheader ], mapping it to   %phiIVClone5 = phi i64 
User in header block to replace Phi:   %74 = add i64 -173, %i.4
Applied self loop transform on do.body110( smix2() )

smix2(): Transformed Self loop Loop at depth 1 containing: %do.body110<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock2<header><latch><exiting>


smix2(): Self loop Loop at depth 1 containing: %do.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> do.body( smix2() ). Self Loop cost: 23. Iterations: 173
Self loop is not canonical. Going for generic transformation with 173 iterations.
Attempting to transform self loop do.body of smix2 with 173 inner loop iterations --> Loop at depth 1 containing: %do.body<header><latch><exiting>
Found local ind var:   %i.3 = phi i64 [ %dec, %selfLoopOptExitBlock11 ], [ %div, %do.body.preheader ], mapping it to   %phiIVClone13 = phi i64 
User in header block to replace Phi:   %74 = add i64 -173, %i.3
Applied self loop transform on do.body( smix2() )

smix2(): Transformed Self loop Loop at depth 1 containing: %do.body<header>,%selfLoopOptBlock10,%selfLoopOptExitBlock11<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock10<header><latch><exiting>


smix2(): Self loop Loop at depth 1 containing: %for.cond136.preheader<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.cond136.preheader( smix2() ). Self Loop cost: 311. Iterations: 12
Self loop is canonical. Going for special transformation with 12 iterations.
Attempting to transform self loop for.cond136.preheader of smix2 with 12 inner loop iterations --> Loop at depth 1 containing: %for.cond136.preheader<header><latch><exiting>
Found local ind var:   %k.1312 = phi i64 [ %inc153, %selfLoopOptExitBlock19 ], [ 0, %for.cond136.preheader.preheader ], mapping it to   %phiIVClone20 = phi i64 
User in header block to replace Phi:   %78 = add i64 12, %k.1312
Applied self loop transform on for.cond136.preheader( smix2() )

smix2(): Transformed Self loop Loop at depth 1 containing: %for.cond136.preheader<header>,%selfLoopOptBlock18,%selfLoopOptExitBlock19<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock18<header><latch><exiting>


smix2(): Self loop Loop at depth 1 containing: %for.cond3.preheader<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.cond3.preheader( smix2() ). Self Loop cost: 359. Iterations: 11
Self loop is canonical. Going for special transformation with 11 iterations.
Attempting to transform self loop for.cond3.preheader of smix2 with 11 inner loop iterations --> Loop at depth 1 containing: %for.cond3.preheader<header><latch><exiting>
Found local ind var:   %k.0321 = phi i64 [ %inc13, %selfLoopOptExitBlock25 ], [ 0, %for.cond3.preheader.preheader ], mapping it to   %phiIVClone26 = phi i64 
User in header block to replace Phi:   %3 = add i64 11, %k.0321
Applied self loop transform on for.cond3.preheader( smix2() )

smix2(): Transformed Self loop Loop at depth 1 containing: %for.cond3.preheader<header>,%selfLoopOptBlock24,%selfLoopOptExitBlock25<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock24<header><latch><exiting>


smix2(): Max depth loop Loop at depth 1 containing: %for.body21<header>,%if.else,%if.then30,%if.end43<latch><exiting>


This seseloop will be transformed & instrumented --> for.body21( smix2() ). SESE Loop cost: 28. Iterations: 142
Found local ind var:   %i.1318 = phi i64 [ 0, %for.body21.lr.ph ], [ %add50, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone30 = phi i64 
User in header block to replace Phi:   %74 = add i64 284, %i.1318
Applied sese loop transform on for.body21( smix2() )

smix2(): Transformed loop Loop at depth 1 containing: %for.body21<header>,%if.else,%if.then30,%if.end43,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%if.then30,%if.end43<latch><exiting>,%if.else

Direct branch from entry needs to be instrumented
Func cost 103 for yescrypt_free_local has been optimized for entry cost!
Storing cost of yescrypt_free_local() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypt_free_local

Loops scheduled for transform for yescrypt_free_local:- 

Direct branch from entry needs to be instrumented
Func cost 103 for yescrypt_free_shared has been optimized for entry cost!
Storing cost of yescrypt_free_shared() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypt_free_shared

Loops scheduled for transform for yescrypt_free_shared:- 

Func cost 103 for yescrypt_init_local has been optimized for entry cost!
Storing cost of yescrypt_init_local() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypt_init_local

Loops scheduled for transform for yescrypt_init_local:- 

yescrypt_init_shared(): Transformed branch between if.end5 and cleanup in the forward direction
yescrypt_init_shared(): Transformed branch between if.end19 and cleanup_dummy in the forward direction
yescrypt_init_shared(): Transformed branch between out and cleanup_dummy_dummy in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 416 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 416 of entry to successor if.then
manageDanglingLCCs(inverted V shape): Adding pred cost 416 of entry to successor if.else
Pred cost for if.else is 519
Pred cost for cleanup_dummy_dummy is 1
Pred cost for cleanup_dummy is 1
Direct branch from if.then62 needs to be instrumented
Direct branch from out needs to be instrumented
Func cost 405 for yescrypt_init_shared has been optimized for exit cost!
Storing cost of yescrypt_init_shared() : 405

Instrumenting loops (self loop count: 0, sese loop count: 0) for function yescrypt_init_shared

Loops scheduled for transform for yescrypt_init_shared:- 

yescrypt_kdf(): Transformed branch between if.end3 and cleanup231 in the forward direction
yescrypt_kdf(): Transformed branch between if.end7 and cleanup231_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end13 and cleanup231_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end18 and cleanup231_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end32 and cleanup231_dummy_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end40 and cleanup231_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end53 and cleanup231_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end90 and cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end119 and cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end128 and cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end136 and cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.end152 and cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Transformed branch between if.else.i407 and alloc_region.exit421 in the forward direction
yescrypt_kdf(): Transformed branch between if.end226 and cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
yescrypt_kdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
manageDanglingLCCs(inverted V shape): Removing cost 112 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 112 of entry to successor if.then2
manageDanglingLCCs(inverted V shape): Adding pred cost 112 of entry to successor if.end3
manageDanglingLCCs(inverted V shape): Removing cost 114 of if.end3
manageDanglingLCCs(inverted V shape): Adding pred cost 114 of if.end3 to successor if.then5
manageDanglingLCCs(inverted V shape): Adding pred cost 114 of if.end3 to successor if.end7
manageDanglingLCCs(inverted V shape): Removing cost 119 of if.end7
manageDanglingLCCs(inverted V shape): Adding pred cost 119 of if.end7 to successor if.then11
manageDanglingLCCs(inverted V shape): Adding pred cost 119 of if.end7 to successor if.end13
manageDanglingLCCs(inverted V shape): Removing cost 121 of if.end13
manageDanglingLCCs(inverted V shape): Adding pred cost 121 of if.end13 to successor if.then16
manageDanglingLCCs(inverted V shape): Adding pred cost 121 of if.end13 to successor if.end18
manageDanglingLCCs(inverted V shape): Removing cost 230 of if.end18
manageDanglingLCCs(inverted V shape): Adding pred cost 230 of if.end18 to successor if.then30
manageDanglingLCCs(inverted V shape): Adding pred cost 230 of if.end18 to successor if.end32
manageDanglingLCCs(inverted V shape): Removing cost 6 of if.end53
manageDanglingLCCs(inverted V shape): Adding pred cost 6 of if.end53 to successor if.end53.if.end90_crit_edge
manageDanglingLCCs(inverted V shape): Adding pred cost 6 of if.end53 to successor if.then67
manageDanglingLCCs(inverted V shape): Removing cost 12 of if.then67
manageDanglingLCCs(inverted V shape): Adding pred cost 12 of if.then67 to successor if.then74
manageDanglingLCCs(inverted V shape): Adding pred cost 12 of if.then67 to successor if.end76
manageDanglingLCCs(inverted V shape): Removing cost 4 of if.then96
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then96 to successor if.then96.if.end117_crit_edge
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.then96 to successor if.then100
manageDanglingLCCs(inverted V shape): Removing cost 4 of if.end119
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.end119 to successor if.then126
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of if.end119 to successor if.end128
manageDanglingLCCs(inverted V shape): Removing cost 8 of if.end128
manageDanglingLCCs(inverted V shape): Adding pred cost 8 of if.end128 to successor if.then134
manageDanglingLCCs(inverted V shape): Adding pred cost 8 of if.end128 to successor if.end136
manageDanglingLCCs(inverted V shape): Removing cost 1 of if.end152
manageDanglingLCCs(inverted V shape): Adding pred cost 1 of if.end152 to successor if.then155
manageDanglingLCCs(inverted V shape): Adding pred cost 1 of if.end152 to successor if.else
manageDanglingLCCs(inverted V shape): Removing cost 3 of if.then155
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.then155 to successor if.then.i380
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of if.then155 to successor if.else.i384
Pred cost for cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for if.then149 is 103
manageDanglingLCCs(V shape): Removing cost 103 of predecessor if.then149 for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 52 as initial cost for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 53
Pred cost for if.then134 is 111
manageDanglingLCCs(V shape): Removing cost 111 of predecessor if.then134 for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 53 of predecessor cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 82 as initial cost for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 83
Pred cost for if.then126 is 107
manageDanglingLCCs(V shape): Removing cost 107 of predecessor if.then126 for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 83 of predecessor cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 95 as initial cost for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 96
Pred cost for cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 1
Pred cost for if.then74 is 115
Pred cost for if.then87 is 103
manageDanglingLCCs(V shape): Removing cost 115 of predecessor if.then74 for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 103 of predecessor if.then87 for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 73 as initial cost for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy is 74
Pred cost for if.then51 is 103
manageDanglingLCCs(V shape): Removing cost 103 of predecessor if.then51 for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 74 of predecessor cleanup231_dummy_dummy_dummy_dummy_dummy_dummy_dummy for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 88 as initial cost for merge node cleanup231_dummy_dummy_dummy_dummy_dummy_dummy
Pred cost for cleanup231_dummy_dummy_dummy_dummy_dummy_dummy is 89
Pred cost for if.then38 is 103
manageDanglingLCCs(V shape): Removing cost 103 of predecessor if.then38 for merge node cleanup231_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 89 of predecessor cleanup231_dummy_dummy_dummy_dummy_dummy_dummy for merge node cleanup231_dummy_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 96 as initial cost for merge node cleanup231_dummy_dummy_dummy_dummy_dummy
Pred cost for cleanup231_dummy_dummy_dummy_dummy_dummy is 97
Pred cost for if.then30 is 333
manageDanglingLCCs(V shape): Removing cost 333 of predecessor if.then30 for merge node cleanup231_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 97 of predecessor cleanup231_dummy_dummy_dummy_dummy_dummy for merge node cleanup231_dummy_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 215 as initial cost for merge node cleanup231_dummy_dummy_dummy_dummy
Pred cost for cleanup231_dummy_dummy_dummy_dummy is 216
Pred cost for if.then16 is 224
manageDanglingLCCs(V shape): Removing cost 224 of predecessor if.then16 for merge node cleanup231_dummy_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 216 of predecessor cleanup231_dummy_dummy_dummy_dummy for merge node cleanup231_dummy_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 220 as initial cost for merge node cleanup231_dummy_dummy_dummy
Pred cost for cleanup231_dummy_dummy_dummy is 221
Pred cost for if.then11 is 222
manageDanglingLCCs(V shape): Removing cost 222 of predecessor if.then11 for merge node cleanup231_dummy_dummy
manageDanglingLCCs(V shape): Removing cost 221 of predecessor cleanup231_dummy_dummy_dummy for merge node cleanup231_dummy_dummy
manageDanglingLCCs(V shape): Settting average cost 221 as initial cost for merge node cleanup231_dummy_dummy
Pred cost for cleanup231_dummy_dummy is 222
Pred cost for if.then5 is 217
manageDanglingLCCs(V shape): Removing cost 217 of predecessor if.then5 for merge node cleanup231_dummy
manageDanglingLCCs(V shape): Removing cost 222 of predecessor cleanup231_dummy_dummy for merge node cleanup231_dummy
manageDanglingLCCs(V shape): Settting average cost 219 as initial cost for merge node cleanup231_dummy
Pred cost for cleanup231_dummy is 220
Pred cost for if.then2 is 215
manageDanglingLCCs(V shape): Removing cost 215 of predecessor if.then2 for merge node cleanup231
manageDanglingLCCs(V shape): Removing cost 220 of predecessor cleanup231_dummy for merge node cleanup231
manageDanglingLCCs(V shape): Settting average cost 217 as initial cost for merge node cleanup231
Direct branch from if.then164 needs to be instrumented
Has backedges: (+ -1 (zext (ARG: 8) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 31, preheader cost: 5
Self loop will be transformed, & body cost is 31 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Direct branch from if.end214 needs to be instrumented
Direct branch from if.end226 needs to be instrumented
Func cost 319 for yescrypt_kdf has been optimized for exit cost!
Storing cost of yescrypt_kdf() : 319

Instrumenting loops (self loop count: 1, sese loop count: 0) for function yescrypt_kdf

Loops scheduled for transform for yescrypt_kdf:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



yescrypt_kdf(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( yescrypt_kdf() ). Self Loop cost: 31. Iterations: 129
Self loop is canonical. Going for special transformation with 129 iterations.
Attempting to transform self loop for.body of yescrypt_kdf with 129 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ %indvars.iv.next, %selfLoopOptExitBlock ], [ 0, %for.body.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %23 = add i64 129, %indvars.iv
Applied self loop transform on for.body( yescrypt_kdf() )

yescrypt_kdf(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

Total functions: 11, uninstrumented functions: 1
Optimized 12 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o yescrypt/cpuminer-yescrypt-best.o `test -f 'yescrypt/cpuminer-yescrypt-best.ll' || echo './'`yescrypt/cpuminer-yescrypt-best.ll
mv -f yescrypt/.deps/cpuminer-yescrypt-best.Tpo yescrypt/.deps/cpuminer-yescrypt-best.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT yescrypt/llvm_cpuminer-sha256_Y.ll -MD -MP -MF yescrypt/.deps/cpuminer-sha256_Y.Tpo -c -o yescrypt/llvm_cpuminer-sha256_Y.ll `test -f 'yescrypt/sha256_Y.c' || echo './'`yescrypt/sha256_Y.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from yescrypt/sha256_Y.c:34:
In file included from yescrypt/sha256_Y.h:35:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < yescrypt/llvm_cpuminer-sha256_Y.ll > yescrypt/opt_cpuminer-sha256_Y.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < yescrypt/opt_cpuminer-sha256_Y.ll > yescrypt/cpuminer-sha256_Y.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: HMAC_SHA256_Final_Y
Function: HMAC_SHA256_Init_Y
Function: HMAC_SHA256_Update_Y
Function: PBKDF2_SHA256
Function: SHA256_Final_Y
Function: SHA256_Init_Y
Function: SHA256_Transform
Function: SHA256_Update_Y
HMAC_SHA256_Final_Y(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>
. Latch: while.body.i, Exiting block: while.body.i
Self loop:- #backedges: 0, body cost: 5, preheader cost: 233
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>

Func cost 103 for HMAC_SHA256_Final_Y has been optimized for entry cost!
Storing cost of HMAC_SHA256_Final_Y() : 103

Instrumenting loops (self loop count: 1, sese loop count: 0) for function HMAC_SHA256_Final_Y

Loops scheduled for transform for HMAC_SHA256_Final_Y:- 
Self Loop: Loop at depth 1 containing: %while.body.i<header><latch><exiting>



HMAC_SHA256_Final_Y(): Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i( HMAC_SHA256_Final_Y() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

HMAC_SHA256_Final_Y(): Transformed Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>

HMAC_SHA256_Init_Y(): Transformed branch between for.body.preheader and SHA256_Update_Y.exit131 in the forward direction
HMAC_SHA256_Init_Y(): Transformed branch between for.body.for.body_crit_edge.lr.ph and SHA256_Update_Y.exit131_dummy in the forward direction
HMAC_SHA256_Init_Y(): Transformed branch between for.body16.preheader and SHA256_Update_Y.exit in the forward direction
HMAC_SHA256_Init_Y(): Transformed branch between for.body16.for.body16_crit_edge.lr.ph and SHA256_Update_Y.exit_dummy in the forward direction
HMAC_SHA256_Init_Y(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i81<header><latch><exiting>
. Latch: while.body.i81, Exiting block: while.body.i81
HMAC_SHA256_Init_Y(): Checking if simple for Loop Loop at depth 1 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
HMAC_SHA256_Init_Y(): Checking if simple for Loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>
. Latch: for.body.for.body_crit_edge, Exiting block: for.body.for.body_crit_edge
HMAC_SHA256_Init_Y(): Checking if simple for Loop Loop at depth 1 containing: %vector.body166<header><latch><exiting>
. Latch: vector.body166, Exiting block: vector.body166
HMAC_SHA256_Init_Y(): Checking if simple for Loop Loop at depth 1 containing: %for.body16.for.body16_crit_edge<header><latch><exiting>
. Latch: for.body16.for.body16_crit_edge, Exiting block: for.body16.for.body16_crit_edge
Pred cost for SHA256_Update_Y.exit131_dummy_dummy is 1
Pred cost for SHA256_Update_Y.exit_dummy_dummy is 1
Pred cost for SHA256_Update_Y.exit_dummy is 1
Has backedges: (/ (+ -128 (ARG: 2) ) 64 ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 5, preheader cost: 328
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body.i81<header><latch><exiting>

Direct branch from entry needs to be instrumented
Func cost 110 for HMAC_SHA256_Init_Y has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 40, preheader cost: 2
Self loop will be transformed, & body cost is 40 for loop Loop at depth 1 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 1
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 40, preheader cost: 2
Self loop will be transformed, & body cost is 40 for loop Loop at depth 1 containing: %vector.body166<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 1
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body16.for.body16_crit_edge<header><latch><exiting>

Func cost 307 for HMAC_SHA256_Init_Y has been optimized for exit cost!
Storing cost of HMAC_SHA256_Init_Y() : 417

Instrumenting loops (self loop count: 5, sese loop count: 0) for function HMAC_SHA256_Init_Y

Loops scheduled for transform for HMAC_SHA256_Init_Y:- 
Self Loop: Loop at depth 1 containing: %while.body.i81<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body16.for.body16_crit_edge<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body166<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body<header><latch><exiting>



HMAC_SHA256_Init_Y(): Self loop Loop at depth 1 containing: %while.body.i81<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i81( HMAC_SHA256_Init_Y() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

HMAC_SHA256_Init_Y(): Transformed Self loop Loop at depth 1 containing: %while.body.i81<header><latch><exiting>


HMAC_SHA256_Init_Y(): Self loop Loop at depth 1 containing: %for.body16.for.body16_crit_edge<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body16.for.body16_crit_edge( HMAC_SHA256_Init_Y() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body16.for.body16_crit_edge of HMAC_SHA256_Init_Y with 400 inner loop iterations --> Loop at depth 1 containing: %for.body16.for.body16_crit_edge<header><latch><exiting>
Found local ind var:   %inc24151 = phi i64 [ %inc24, %selfLoopOptExitBlock ], [ %inc24151.ph, %for.body16.for.body16_crit_edge.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %61 = add i64 400, %inc24151
Applied self loop transform on for.body16.for.body16_crit_edge( HMAC_SHA256_Init_Y() )

HMAC_SHA256_Init_Y(): Transformed Self loop Loop at depth 1 containing: %for.body16.for.body16_crit_edge<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


HMAC_SHA256_Init_Y(): Self loop Loop at depth 1 containing: %vector.body166<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body166( HMAC_SHA256_Init_Y() ). Self Loop cost: 40. Iterations: 100
Self loop is not canonical. Going for generic transformation with 100 iterations.
Attempting to transform self loop vector.body166 of HMAC_SHA256_Init_Y with 100 inner loop iterations --> Loop at depth 1 containing: %vector.body166<header><latch><exiting>
Found local ind var:   %index173 = phi i64 [ 0, %vector.ph170 ], [ %index.next174, %selfLoopOptExitBlock2 ], mapping it to   %phiIVClone3 = phi i64 
User in header block to replace Phi:   %36 = add i64 12800, %index173
Applied self loop transform on vector.body166( HMAC_SHA256_Init_Y() )

HMAC_SHA256_Init_Y(): Transformed Self loop Loop at depth 1 containing: %vector.body166<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock1<header><latch><exiting>


HMAC_SHA256_Init_Y(): Self loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.for.body_crit_edge( HMAC_SHA256_Init_Y() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body.for.body_crit_edge of HMAC_SHA256_Init_Y with 400 inner loop iterations --> Loop at depth 1 containing: %for.body.for.body_crit_edge<header><latch><exiting>
Found local ind var:   %inc155 = phi i64 [ %inc, %selfLoopOptExitBlock9 ], [ %inc155.ph, %for.body.for.body_crit_edge.preheader ], mapping it to   %phiIVClone10 = phi i64 
User in header block to replace Phi:   %32 = add i64 400, %inc155
Applied self loop transform on for.body.for.body_crit_edge( HMAC_SHA256_Init_Y() )

HMAC_SHA256_Init_Y(): Transformed Self loop Loop at depth 1 containing: %for.body.for.body_crit_edge<header>,%selfLoopOptBlock8,%selfLoopOptExitBlock9<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock8<header><latch><exiting>


HMAC_SHA256_Init_Y(): Self loop Loop at depth 1 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( HMAC_SHA256_Init_Y() ). Self Loop cost: 40. Iterations: 100
Self loop is not canonical. Going for generic transformation with 100 iterations.
Attempting to transform self loop vector.body of HMAC_SHA256_Init_Y with 100 inner loop iterations --> Loop at depth 1 containing: %vector.body<header><latch><exiting>
Found local ind var:   %index = phi i64 [ 0, %vector.ph ], [ %index.next, %selfLoopOptExitBlock16 ], mapping it to   %phiIVClone17 = phi i64 
User in header block to replace Phi:   %7 = add i64 12800, %index
Applied self loop transform on vector.body( HMAC_SHA256_Init_Y() )

HMAC_SHA256_Init_Y(): Transformed Self loop Loop at depth 1 containing: %vector.body<header>,%selfLoopOptBlock15,%selfLoopOptExitBlock16<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock15<header><latch><exiting>

HMAC_SHA256_Update_Y(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>
. Latch: while.body.i, Exiting block: while.body.i
Self loop:- #backedges: 0, body cost: 5, preheader cost: 132
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>

Func cost 1 for HMAC_SHA256_Update_Y has been optimized for entry cost!
Storing cost of HMAC_SHA256_Update_Y() : 1

Instrumenting loops (self loop count: 1, sese loop count: 0) for function HMAC_SHA256_Update_Y

Loops scheduled for transform for HMAC_SHA256_Update_Y:- 
Self Loop: Loop at depth 1 containing: %while.body.i<header><latch><exiting>



HMAC_SHA256_Update_Y(): Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i( HMAC_SHA256_Update_Y() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

HMAC_SHA256_Update_Y(): Transformed Self loop Loop at depth 1 containing: %while.body.i<header><latch><exiting>

PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>
. Latch: while.body.i.i, Exiting block: while.body.i.i
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
. Latch: while.body.i.i75, Exiting block: while.body.i.i75
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
. Latch: while.body.i.i107, Exiting block: while.body.i.i107
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
    Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
    Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: HMAC_SHA256_Final_Y.exit178, Exiting block: HMAC_SHA256_Final_Y.exit178
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
. Latch: while.body.i.i138, Exiting block: while.body.i.i138
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
    Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
    Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: HMAC_SHA256_Final_Y.exit178, Exiting block: HMAC_SHA256_Final_Y.exit178
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
    Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
    Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: HMAC_SHA256_Final_Y.exit178, Exiting block: HMAC_SHA256_Final_Y.exit178
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: while.body.i.i173, Exiting block: while.body.i.i173
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
    Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
    Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: HMAC_SHA256_Final_Y.exit178, Exiting block: HMAC_SHA256_Final_Y.exit178
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
    Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
    Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: HMAC_SHA256_Final_Y.exit178, Exiting block: HMAC_SHA256_Final_Y.exit178
PBKDF2_SHA256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>
. Latch: for.end22, Exiting block: for.end22
Self loop:- #backedges: 0, body cost: 5, preheader cost: 1067
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 5, preheader cost: 237
Self loop will be transformed, & body cost is 5 for loop Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 5, preheader cost: 225
Self loop will be transformed, & body cost is 5 for loop Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 5, preheader cost: 541
Self loop will be transformed, & body cost is 5 for loop Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 5, preheader cost: 225
Self loop will be transformed, & body cost is 5 for loop Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>

Instrumenting loop with body cost: 113
Non-header-colocated-exit loop will be transformed, & body cost is 113 for loop with header for.body8
Instrumenting loop with body cost: 313
Non-header-colocated-exit loop will be transformed, & body cost is 313 for loop with header for.body
Func cost 523 for PBKDF2_SHA256 has been optimized for entry cost!
Storing cost of PBKDF2_SHA256() : 523

Instrumenting loops (self loop count: 5, sese loop count: 2) for function PBKDF2_SHA256

Loops scheduled for transform for PBKDF2_SHA256:- 
Self Loop: Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>

Self Loop: Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>

Sese Loop: Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
    Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
    Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
        Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>



PBKDF2_SHA256(): Self loop Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i.i173( PBKDF2_SHA256() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

PBKDF2_SHA256(): Transformed Self loop Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>


PBKDF2_SHA256(): Self loop Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i.i138( PBKDF2_SHA256() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

PBKDF2_SHA256(): Transformed Self loop Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>


PBKDF2_SHA256(): Self loop Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i.i107( PBKDF2_SHA256() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

PBKDF2_SHA256(): Transformed Self loop Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>


PBKDF2_SHA256(): Self loop Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i.i75( PBKDF2_SHA256() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

PBKDF2_SHA256(): Transformed Self loop Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>


PBKDF2_SHA256(): Self loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i.i( PBKDF2_SHA256() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

PBKDF2_SHA256(): Transformed Self loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>


PBKDF2_SHA256(): Max depth loop Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>
    Loop at depth 3 containing: %while.body.i.i138<header><latch><exiting>
    Loop at depth 3 containing: %while.body.i.i173<header><latch><exiting>


This seseloop will be transformed & instrumented --> for.body8( PBKDF2_SHA256() ). SESE Loop cost: 113. Iterations: 35
Found local ind var:   %j.0181 = phi i64 [ %inc21, %seseLoopOptHNCExitBlock ], [ 2, %for.body8.preheader ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %26 = add i64 35, %j.0181
Applied sese loop transform on for.body8( PBKDF2_SHA256() )

PBKDF2_SHA256(): Transformed loop Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 3 containing: %seseLoopOptBlock<header>,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>,%if.then.i.i119
        Loop at depth 4 containing: %while.body.i.i138<header><latch><exiting>
        Loop at depth 4 containing: %while.body.i.i173<header><latch><exiting>


PBKDF2_SHA256(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>,%seseLoopOptBlock,%seseLoopOptHNCExitBlock
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
        Loop at depth 3 containing: %seseLoopOptBlock<header>,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>,%if.then.i.i119
            Loop at depth 4 containing: %while.body.i.i138<header><latch><exiting>
            Loop at depth 4 containing: %while.body.i.i173<header><latch><exiting>


This seseloop will be transformed & instrumented --> for.body( PBKDF2_SHA256() ). SESE Loop cost: 313. Iterations: 12
No step value present. Cannot transform loop.
SESE loop cannot be transformed. Therefore instrumenting it.

PBKDF2_SHA256(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i56,%if.end.i.i62,%if.end21.i.i69,%while.body.i.i75.preheader,%while.body.i.i75,%while.end.loopexit.i.i76,%while.end.i.i79,%if.then19.i.i63,%HMAC_SHA256_Update_Y.exit80,%if.then.i.i88,%if.end.i.i94,%if.end21.i.i101,%while.body.i.i107.preheader,%while.body.i.i107,%while.end.loopexit.i.i108,%while.end.i.i111,%if.then19.i.i95,%HMAC_SHA256_Final_Y.exit,%for.body8.preheader,%for.body8,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%for.end22.loopexit,%for.end22<latch><exiting>,%seseLoopOptBlock,%seseLoopOptHNCExitBlock
    Loop at depth 2 containing: %while.body.i.i75<header><latch><exiting>
    Loop at depth 2 containing: %while.body.i.i107<header><latch><exiting>
    Loop at depth 2 containing: %for.body8<header>,%if.then.i.i119,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
        Loop at depth 3 containing: %seseLoopOptBlock<header>,%if.end.i.i125,%if.end21.i.i132,%while.body.i.i138.preheader,%while.body.i.i138,%while.end.loopexit.i.i139,%while.end.i.i142,%if.then19.i.i126,%HMAC_SHA256_Update_Y.exit143,%if.then.i.i154,%if.end.i.i160,%if.end21.i.i167,%while.body.i.i173.preheader,%while.body.i.i173,%while.end.loopexit.i.i174,%while.end.i.i177,%if.then19.i.i161,%HMAC_SHA256_Final_Y.exit178<latch><exiting>,%if.then.i.i119
            Loop at depth 4 containing: %while.body.i.i138<header><latch><exiting>
            Loop at depth 4 containing: %while.body.i.i173<header><latch><exiting>

SHA256_Final_Y(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i43.i<header><latch><exiting>
. Latch: while.body.i43.i, Exiting block: while.body.i43.i
SHA256_Final_Y(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>
. Latch: while.body.i.i, Exiting block: while.body.i.i
Self loop:- #backedges: 0, body cost: 5, preheader cost: 267
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body.i43.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 5, preheader cost: 123
Self loop will be transformed, & body cost is 5 for loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>

Func cost 339 for SHA256_Final_Y has been optimized for entry cost!
Storing cost of SHA256_Final_Y() : 339

Instrumenting loops (self loop count: 2, sese loop count: 0) for function SHA256_Final_Y

Loops scheduled for transform for SHA256_Final_Y:- 
Self Loop: Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body.i43.i<header><latch><exiting>



SHA256_Final_Y(): Self loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i.i( SHA256_Final_Y() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

SHA256_Final_Y(): Transformed Self loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>


SHA256_Final_Y(): Self loop Loop at depth 1 containing: %while.body.i43.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> while.body.i43.i( SHA256_Final_Y() ). Self Loop cost: 5. Iterations: 800
Self loop is not canonical. Going for generic transformation with 800 iterations.
Bounds are not present. Cannot transform!
Self loop cannot be transformed. Therefore instrumenting it.

SHA256_Final_Y(): Transformed Self loop Loop at depth 1 containing: %while.body.i43.i<header><latch><exiting>

Func cost 7 for SHA256_Init_Y has been optimized for entry cost!
Storing cost of SHA256_Init_Y() : 7

Instrumenting loops (self loop count: 0, sese loop count: 0) for function SHA256_Init_Y

Loops scheduled for transform for SHA256_Init_Y:- 

SHA256_Transform(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: 47 (numCost: 47)
Self loop:- #backedges: 48, body cost: 35, preheader cost: 451
Self loop:- loop & preheader cost 2131 will be instrumented in post loop exit
Func cost 1024 for SHA256_Transform has been optimized for entry cost!
Storing cost of SHA256_Transform() : 1024

Instrumenting loops (self loop count: 0, sese loop count: 0) for function SHA256_Transform

Loops scheduled for transform for SHA256_Transform:- 


SHA256_Transform(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

SHA256_Transform(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

SHA256_Update_Y(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Self loop:- #backedges: 0, body cost: 1029, preheader cost: 1158
Self loop will be transformed, & body cost is 1029 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Func cost 1 for SHA256_Update_Y has been optimized for entry cost!
Storing cost of SHA256_Update_Y() : 1

Instrumenting loops (self loop count: 1, sese loop count: 0) for function SHA256_Update_Y

Loops scheduled for transform for SHA256_Update_Y:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>



SHA256_Update_Y(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body( SHA256_Update_Y() ). Self Loop cost: 1029. Iterations: 3

SHA256_Update_Y(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Total functions: 8, uninstrumented functions: 1
Optimized 9 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o yescrypt/cpuminer-sha256_Y.o `test -f 'yescrypt/cpuminer-sha256_Y.ll' || echo './'`yescrypt/cpuminer-sha256_Y.ll
mv -f yescrypt/.deps/cpuminer-sha256_Y.Tpo yescrypt/.deps/cpuminer-sha256_Y.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-allium.ll -MD -MP -MF algo/.deps/cpuminer-allium.Tpo -c -o algo/llvm_cpuminer-allium.ll `test -f 'algo/allium.c' || echo './'`algo/allium.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/allium.c:7:
In file included from ./sha3/sph_blake.h:45:
In file included from ./sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-allium.ll > algo/opt_cpuminer-allium.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-allium.ll > algo/cpuminer-allium.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: allium_hash
Function: scanhash_allium
Func cost 3247 for allium_hash has been optimized for entry cost!
Storing cost of allium_hash() : 3247

Instrumenting loops (self loop count: 0, sese loop count: 0) for function allium_hash

Loops scheduled for transform for allium_hash:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then13 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then13 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 565 for scanhash_allium has been optimized for entry cost!
Func cost 259 for scanhash_allium has been optimized for exit cost!
Storing cost of scanhash_allium() : 824

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_allium

Loops scheduled for transform for scanhash_allium:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-allium.o `test -f 'algo/cpuminer-allium.ll' || echo './'`algo/cpuminer-allium.ll
mv -f algo/.deps/cpuminer-allium.Tpo algo/.deps/cpuminer-allium.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-axiom.ll -MD -MP -MF algo/.deps/cpuminer-axiom.Tpo -c -o algo/llvm_cpuminer-axiom.ll `test -f 'algo/axiom.c' || echo './'`algo/axiom.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/axiom.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-axiom.ll > algo/opt_cpuminer-axiom.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-axiom.ll > algo/cpuminer-axiom.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: axiomhash
Function: scanhash_axiom
axiomhash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
axiomhash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header><latch><exiting>
. Latch: for.body7, Exiting block: for.body7
Has backedges: 65535 (numCost: 65535)
Has backedges: 65534 (numCost: 65534)
Self loop:- #backedges: 65535, body cost: 210, preheader cost: 408
Self loop will be transformed, & body cost is 210 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Self loop:- #backedges: 65536, body cost: 626, preheader cost: 411
Self loop will be transformed, & body cost is 626 for loop Loop at depth 1 containing: %for.body7<header><latch><exiting>

Func cost 614 for axiomhash has been optimized for entry cost!
Storing cost of axiomhash() : 614

Instrumenting loops (self loop count: 2, sese loop count: 0) for function axiomhash

Loops scheduled for transform for axiomhash:- 
Self Loop: Loop at depth 1 containing: %for.body7<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



axiomhash(): Self loop Loop at depth 1 containing: %for.body7<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body7( axiomhash() ). Self Loop cost: 626. Iterations: 6

axiomhash(): Transformed Self loop Loop at depth 1 containing: %for.body7<header><latch><exiting>


axiomhash(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( axiomhash() ). Self Loop cost: 210. Iterations: 19
Self loop is not canonical. Going for generic transformation with 19 iterations.
Attempting to transform self loop for.body of axiomhash with 19 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %indvars.iv47 = phi i64 [ 1, %entry ], [ %indvars.iv.next48, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %2 = add i64 19, %indvars.iv47
Applied self loop transform on for.body( axiomhash() )

axiomhash(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 561 for scanhash_axiom has been optimized for entry cost!
Func cost 259 for scanhash_axiom has been optimized for exit cost!
Storing cost of scanhash_axiom() : 820

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_axiom

Loops scheduled for transform for scanhash_axiom:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-axiom.o `test -f 'algo/cpuminer-axiom.ll' || echo './'`algo/cpuminer-axiom.ll
mv -f algo/.deps/cpuminer-axiom.Tpo algo/.deps/cpuminer-axiom.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-bastion.ll -MD -MP -MF algo/.deps/cpuminer-bastion.Tpo -c -o algo/llvm_cpuminer-bastion.ll `test -f 'algo/bastion.c' || echo './'`algo/bastion.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/bastion.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-bastion.ll > algo/opt_cpuminer-bastion.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-bastion.ll > algo/cpuminer-bastion.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: bastionhash
Function: scanhash_bastion
Func cost 1012 for bastionhash has been optimized for entry cost!
Storing cost of bastionhash() : 1012

Instrumenting loops (self loop count: 0, sese loop count: 0) for function bastionhash

Loops scheduled for transform for bastionhash:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 561 for scanhash_bastion has been optimized for entry cost!
Func cost 259 for scanhash_bastion has been optimized for exit cost!
Storing cost of scanhash_bastion() : 820

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_bastion

Loops scheduled for transform for scanhash_bastion:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-bastion.o `test -f 'algo/cpuminer-bastion.ll' || echo './'`algo/cpuminer-bastion.ll
mv -f algo/.deps/cpuminer-bastion.Tpo algo/.deps/cpuminer-bastion.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-blake.ll -MD -MP -MF algo/.deps/cpuminer-blake.Tpo -c -o algo/llvm_cpuminer-blake.ll `test -f 'algo/blake.c' || echo './'`algo/blake.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/blake.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-blake.ll > algo/opt_cpuminer-blake.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-blake.ll > algo/cpuminer-blake.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blakehash
Function: scanhash_blake
Direct branch from entry needs to be instrumented
Func cost 405 for blakehash has been optimized for entry cost!
Storing cost of blakehash() : 405

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blakehash

Loops scheduled for transform for blakehash:- 

Pred cost for do.end is 6
Pred cost for if.then is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 6 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup
Func cost 566 for scanhash_blake has been optimized for entry cost!
Direct branch from do.body needs to be instrumented
Func cost 259 for scanhash_blake has been optimized for exit cost!
Storing cost of scanhash_blake() : 825

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_blake

Loops scheduled for transform for scanhash_blake:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-blake.o `test -f 'algo/cpuminer-blake.ll' || echo './'`algo/cpuminer-blake.ll
mv -f algo/.deps/cpuminer-blake.Tpo algo/.deps/cpuminer-blake.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-blakecoin.ll -MD -MP -MF algo/.deps/cpuminer-blakecoin.Tpo -c -o algo/llvm_cpuminer-blakecoin.ll `test -f 'algo/blakecoin.c' || echo './'`algo/blakecoin.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/blakecoin.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-blakecoin.ll > algo/opt_cpuminer-blakecoin.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-blakecoin.ll > algo/cpuminer-blakecoin.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blakecoinhash
Function: scanhash_blakecoin
Direct branch from entry needs to be instrumented
Func cost 405 for blakecoinhash has been optimized for entry cost!
Storing cost of blakecoinhash() : 405

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blakecoinhash

Loops scheduled for transform for blakecoinhash:- 

Pred cost for do.end is 6
Pred cost for if.then is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 6 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup
Func cost 566 for scanhash_blakecoin has been optimized for entry cost!
Direct branch from do.body needs to be instrumented
Func cost 259 for scanhash_blakecoin has been optimized for exit cost!
Storing cost of scanhash_blakecoin() : 825

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_blakecoin

Loops scheduled for transform for scanhash_blakecoin:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-blakecoin.o `test -f 'algo/cpuminer-blakecoin.ll' || echo './'`algo/cpuminer-blakecoin.ll
mv -f algo/.deps/cpuminer-blakecoin.Tpo algo/.deps/cpuminer-blakecoin.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-blake2.ll -MD -MP -MF algo/.deps/cpuminer-blake2.Tpo -c -o algo/llvm_cpuminer-blake2.ll `test -f 'algo/blake2.c' || echo './'`algo/blake2.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/blake2.c:6:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-blake2.ll > algo/opt_cpuminer-blake2.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-blake2.ll > algo/cpuminer-blake2.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blake2s_hash
Function: scanhash_blake2s
Func cost 813 for blake2s_hash has been optimized for entry cost!
Storing cost of blake2s_hash() : 813

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2s_hash

Loops scheduled for transform for blake2s_hash:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 864 for scanhash_blake2s has been optimized for entry cost!
Func cost 259 for scanhash_blake2s has been optimized for exit cost!
Storing cost of scanhash_blake2s() : 1123

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_blake2s

Loops scheduled for transform for scanhash_blake2s:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-blake2.o `test -f 'algo/cpuminer-blake2.ll' || echo './'`algo/cpuminer-blake2.ll
mv -f algo/.deps/cpuminer-blake2.Tpo algo/.deps/cpuminer-blake2.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-bmw256.ll -MD -MP -MF algo/.deps/cpuminer-bmw256.Tpo -c -o algo/llvm_cpuminer-bmw256.ll `test -f 'algo/bmw256.c' || echo './'`algo/bmw256.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/bmw256.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-bmw256.ll > algo/opt_cpuminer-bmw256.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-bmw256.ll > algo/cpuminer-bmw256.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: bmwhash
Function: scanhash_bmw
Func cost 813 for bmwhash has been optimized for entry cost!
Storing cost of bmwhash() : 813

Instrumenting loops (self loop count: 0, sese loop count: 0) for function bmwhash

Loops scheduled for transform for bmwhash:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 565 for scanhash_bmw has been optimized for entry cost!
Func cost 259 for scanhash_bmw has been optimized for exit cost!
Storing cost of scanhash_bmw() : 824

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_bmw

Loops scheduled for transform for scanhash_bmw:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-bmw256.o `test -f 'algo/cpuminer-bmw256.ll' || echo './'`algo/cpuminer-bmw256.ll
mv -f algo/.deps/cpuminer-bmw256.Tpo algo/.deps/cpuminer-bmw256.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-c11.ll -MD -MP -MF algo/.deps/cpuminer-c11.Tpo -c -o algo/llvm_cpuminer-c11.ll `test -f 'algo/c11.c' || echo './'`algo/c11.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/c11.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-c11.ll > algo/opt_cpuminer-c11.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-c11.ll > algo/cpuminer-c11.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: c11hash
Function: scanhash_c11
Func cost 1920 for c11hash has been optimized for entry cost!
Storing cost of c11hash() : 1920

Instrumenting loops (self loop count: 0, sese loop count: 0) for function c11hash

Loops scheduled for transform for c11hash:- 

Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_c11 has been optimized for entry cost!
Func cost 259 for scanhash_c11 has been optimized for exit cost!
Storing cost of scanhash_c11() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_c11

Loops scheduled for transform for scanhash_c11:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-c11.o `test -f 'algo/cpuminer-c11.ll' || echo './'`algo/cpuminer-c11.ll
mv -f algo/.deps/cpuminer-c11.Tpo algo/.deps/cpuminer-c11.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-cryptonight.ll -MD -MP -MF algo/.deps/cpuminer-cryptonight.Tpo -c -o algo/llvm_cpuminer-cryptonight.ll `test -f 'algo/cryptonight.c' || echo './'`algo/cryptonight.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/cryptonight.c:7:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-cryptonight.ll > algo/opt_cpuminer-cryptonight.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-cryptonight.ll > algo/cpuminer-cryptonight.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: cryptonight_hash
Function: cryptonight_hash_ctx
Function: cryptonight_hash_v1
Function: do_blake_hash
Function: do_groestl_hash
Function: do_jh_hash
Function: do_skein_hash
Function: scanhash_cryptonight
Func cost 205 for cryptonight_hash has been optimized for entry cost!
Storing cost of cryptonight_hash() : 205

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cryptonight_hash

Loops scheduled for transform for cryptonight_hash:- 

cryptonight_hash_ctx(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
cryptonight_hash_ctx(): Checking if simple for Loop Loop at depth 1 containing: %for.body85.us<header><latch><exiting>
. Latch: for.body85.us, Exiting block: for.body85.us
cryptonight_hash_ctx(): Checking if simple for Loop Loop at depth 1 containing: %for.body85<header><latch><exiting>
. Latch: for.body85, Exiting block: for.body85
cryptonight_hash_ctx(): Checking if simple for Loop Loop at depth 1 containing: %for.body162<header><latch><exiting>
. Latch: for.body162, Exiting block: for.body162
Has backedges: 16383 (numCost: 16383)
Has backedges: 16383 (numCost: 16383)
Self loop:- #backedges: 16384, body cost: 953, preheader cost: 429
Self loop will be transformed, & body cost is 953 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Has backedges: 262143 (numCost: 262143)
Self loop:- #backedges: 262144, body cost: 903, preheader cost: 465
Self loop will be transformed, & body cost is 903 for loop Loop at depth 1 containing: %for.body85.us<header><latch><exiting>

Has backedges: 262143 (numCost: 262143)
Self loop:- #backedges: 262144, body cost: 871, preheader cost: 465
Self loop will be transformed, & body cost is 871 for loop Loop at depth 1 containing: %for.body85<header><latch><exiting>

Self loop:- #backedges: 16384, body cost: 906, preheader cost: 678
Self loop will be transformed, & body cost is 906 for loop Loop at depth 1 containing: %for.body162<header><latch><exiting>

Func cost 987 for cryptonight_hash_ctx has been optimized for entry cost!
Storing cost of cryptonight_hash_ctx() : 987

Instrumenting loops (self loop count: 4, sese loop count: 0) for function cryptonight_hash_ctx

Loops scheduled for transform for cryptonight_hash_ctx:- 
Self Loop: Loop at depth 1 containing: %for.body85.us<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body162<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body85<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



cryptonight_hash_ctx(): Self loop Loop at depth 1 containing: %for.body85.us<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body85.us( cryptonight_hash_ctx() ). Self Loop cost: 903. Iterations: 4

cryptonight_hash_ctx(): Transformed Self loop Loop at depth 1 containing: %for.body85.us<header><latch><exiting>


cryptonight_hash_ctx(): Self loop Loop at depth 1 containing: %for.body162<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body162( cryptonight_hash_ctx() ). Self Loop cost: 906. Iterations: 4

cryptonight_hash_ctx(): Transformed Self loop Loop at depth 1 containing: %for.body162<header><latch><exiting>


cryptonight_hash_ctx(): Self loop Loop at depth 1 containing: %for.body85<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body85( cryptonight_hash_ctx() ). Self Loop cost: 871. Iterations: 4

cryptonight_hash_ctx(): Transformed Self loop Loop at depth 1 containing: %for.body85<header><latch><exiting>


cryptonight_hash_ctx(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( cryptonight_hash_ctx() ). Self Loop cost: 953. Iterations: 4

cryptonight_hash_ctx(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 1192 for cryptonight_hash_v1 has been optimized for entry cost!
Storing cost of cryptonight_hash_v1() : 1192

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cryptonight_hash_v1

Loops scheduled for transform for cryptonight_hash_v1:- 

Func cost 102 for do_blake_hash has been optimized for entry cost!
Storing cost of do_blake_hash() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function do_blake_hash

Loops scheduled for transform for do_blake_hash:- 

Func cost 103 for do_groestl_hash has been optimized for entry cost!
Storing cost of do_groestl_hash() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function do_groestl_hash

Loops scheduled for transform for do_groestl_hash:- 

Skipping unreachable block if.else
Func cost 105 for do_jh_hash has been optimized for entry cost!
Storing cost of do_jh_hash() : 105

Instrumenting loops (self loop count: 0, sese loop count: 0) for function do_jh_hash

Loops scheduled for transform for do_jh_hash:- 

Skipping unreachable block if.else
Func cost 105 for do_skein_hash has been optimized for entry cost!
Storing cost of do_skein_hash() : 105

Instrumenting loops (self loop count: 0, sese loop count: 0) for function do_skein_hash

Loops scheduled for transform for do_skein_hash:- 

scanhash_cryptonight(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
scanhash_cryptonight(): Checking if simple for Loop Loop at depth 2 containing: %for.body85.i<header><latch><exiting>
. Latch: for.body85.i, Exiting block: for.body85.i
scanhash_cryptonight(): Checking if simple for Loop Loop at depth 2 containing: %for.body162.i<header><latch><exiting>
. Latch: for.body162.i, Exiting block: for.body162.i
manageDanglingLCCs(inverted V shape): Removing cost 215 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 215 of entry to successor do.body.preheader
manageDanglingLCCs(inverted V shape): Adding pred cost 215 of entry to successor do.body24.preheader
manageDanglingLCCs(inverted V shape): Removing cost 994 of do.body24
manageDanglingLCCs(inverted V shape): Adding pred cost 994 of do.body24 to successor if.then38
manageDanglingLCCs(inverted V shape): Adding pred cost 994 of do.body24 to successor do.cond44
Pred cost for if.end63.loopexit1 is 1
Pred cost for if.end63.loopexit is 1
manageDanglingLCCs(V shape): Removing cost 1 of predecessor if.end63.loopexit for merge node if.end63
manageDanglingLCCs(V shape): Removing cost 1 of predecessor if.end63.loopexit1 for merge node if.end63
manageDanglingLCCs(V shape): Settting average cost 1 as initial cost for merge node if.end63
Pred cost for if.end63 is 107
Pred cost for if.then38 is 1202
Pred cost for if.then6 is 208
manageDanglingLCCs(V shape): Removing cost 208 of predecessor if.then6 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1202 of predecessor if.then38 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 107 of predecessor if.end63 for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 505 as initial cost for merge node cleanup
Has backedges: 16383 (numCost: 16383)
Has backedges: 262143 (numCost: 262143)
Has backedges: 16383 (numCost: 16383)
Self loop:- #backedges: 16384, body cost: 953, preheader cost: 410
Self loop will be transformed, & body cost is 953 for loop Loop at depth 2 containing: %for.body.i<header><latch><exiting>

Self loop:- #backedges: 262144, body cost: 901, preheader cost: 421
Self loop will be transformed, & body cost is 901 for loop Loop at depth 2 containing: %for.body85.i<header><latch><exiting>

Self loop:- #backedges: 16384, body cost: 906, preheader cost: 625
Self loop will be transformed, & body cost is 906 for loop Loop at depth 2 containing: %for.body162.i<header><latch><exiting>

Func cost 607 for scanhash_cryptonight has been optimized for exit cost!
Storing cost of scanhash_cryptonight() : 607

Instrumenting loops (self loop count: 3, sese loop count: 0) for function scanhash_cryptonight

Loops scheduled for transform for scanhash_cryptonight:- 
Self Loop: Loop at depth 2 containing: %for.body162.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body85.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i<header><latch><exiting>



scanhash_cryptonight(): Self loop Loop at depth 2 containing: %for.body162.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body162.i( scanhash_cryptonight() ). Self Loop cost: 906. Iterations: 4

scanhash_cryptonight(): Transformed Self loop Loop at depth 2 containing: %for.body162.i<header><latch><exiting>


scanhash_cryptonight(): Self loop Loop at depth 2 containing: %for.body85.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body85.i( scanhash_cryptonight() ). Self Loop cost: 901. Iterations: 4

scanhash_cryptonight(): Transformed Self loop Loop at depth 2 containing: %for.body85.i<header><latch><exiting>


scanhash_cryptonight(): Self loop Loop at depth 2 containing: %for.body.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body.i( scanhash_cryptonight() ). Self Loop cost: 953. Iterations: 4

scanhash_cryptonight(): Transformed Self loop Loop at depth 2 containing: %for.body.i<header><latch><exiting>

Total functions: 8, uninstrumented functions: 4
Optimized 8 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-cryptonight.o `test -f 'algo/cpuminer-cryptonight.ll' || echo './'`algo/cpuminer-cryptonight.ll
mv -f algo/.deps/cpuminer-cryptonight.Tpo algo/.deps/cpuminer-cryptonight.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-cryptolight.ll -MD -MP -MF algo/.deps/cpuminer-cryptolight.Tpo -c -o algo/llvm_cpuminer-cryptolight.ll `test -f 'algo/cryptolight.c' || echo './'`algo/cryptolight.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/cryptolight.c:5:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-cryptolight.ll > algo/opt_cpuminer-cryptolight.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-cryptolight.ll > algo/cpuminer-cryptolight.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: cryptolight_hash
Function: cryptolight_hash_ctx
Function: do_blake_hash
Function: do_groestl_hash
Function: do_jh_hash
Function: do_skein_hash
Function: scanhash_cryptolight
Func cost 205 for cryptolight_hash has been optimized for entry cost!
Storing cost of cryptolight_hash() : 205

Instrumenting loops (self loop count: 0, sese loop count: 0) for function cryptolight_hash

Loops scheduled for transform for cryptolight_hash:- 

cryptolight_hash_ctx(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
cryptolight_hash_ctx(): Checking if simple for Loop Loop at depth 1 containing: %for.body85<header><latch><exiting>
. Latch: for.body85, Exiting block: for.body85
cryptolight_hash_ctx(): Checking if simple for Loop Loop at depth 1 containing: %for.body162<header><latch><exiting>
. Latch: for.body162, Exiting block: for.body162
Has backedges: 8191 (numCost: 8191)
Has backedges: 131071 (numCost: 131071)
Has backedges: 8191 (numCost: 8191)
Self loop:- #backedges: 8192, body cost: 953, preheader cost: 428
Self loop will be transformed, & body cost is 953 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Self loop:- #backedges: 131072, body cost: 901, preheader cost: 461
Self loop will be transformed, & body cost is 901 for loop Loop at depth 1 containing: %for.body85<header><latch><exiting>

Self loop:- #backedges: 8192, body cost: 906, preheader cost: 674
Self loop will be transformed, & body cost is 906 for loop Loop at depth 1 containing: %for.body162<header><latch><exiting>

Func cost 983 for cryptolight_hash_ctx has been optimized for entry cost!
Storing cost of cryptolight_hash_ctx() : 983

Instrumenting loops (self loop count: 3, sese loop count: 0) for function cryptolight_hash_ctx

Loops scheduled for transform for cryptolight_hash_ctx:- 
Self Loop: Loop at depth 1 containing: %for.body162<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body85<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



cryptolight_hash_ctx(): Self loop Loop at depth 1 containing: %for.body162<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body162( cryptolight_hash_ctx() ). Self Loop cost: 906. Iterations: 4

cryptolight_hash_ctx(): Transformed Self loop Loop at depth 1 containing: %for.body162<header><latch><exiting>


cryptolight_hash_ctx(): Self loop Loop at depth 1 containing: %for.body85<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body85( cryptolight_hash_ctx() ). Self Loop cost: 901. Iterations: 4

cryptolight_hash_ctx(): Transformed Self loop Loop at depth 1 containing: %for.body85<header><latch><exiting>


cryptolight_hash_ctx(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( cryptolight_hash_ctx() ). Self Loop cost: 953. Iterations: 4

cryptolight_hash_ctx(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 102 for do_blake_hash has been optimized for entry cost!
Storing cost of do_blake_hash() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function do_blake_hash

Loops scheduled for transform for do_blake_hash:- 

Func cost 103 for do_groestl_hash has been optimized for entry cost!
Storing cost of do_groestl_hash() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function do_groestl_hash

Loops scheduled for transform for do_groestl_hash:- 

Skipping unreachable block if.else
Func cost 105 for do_jh_hash has been optimized for entry cost!
Storing cost of do_jh_hash() : 105

Instrumenting loops (self loop count: 0, sese loop count: 0) for function do_jh_hash

Loops scheduled for transform for do_jh_hash:- 

Skipping unreachable block if.else
Func cost 105 for do_skein_hash has been optimized for entry cost!
Storing cost of do_skein_hash() : 105

Instrumenting loops (self loop count: 0, sese loop count: 0) for function do_skein_hash

Loops scheduled for transform for do_skein_hash:- 

scanhash_cryptolight(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
scanhash_cryptolight(): Checking if simple for Loop Loop at depth 2 containing: %for.body85.i<header><latch><exiting>
. Latch: for.body85.i, Exiting block: for.body85.i
scanhash_cryptolight(): Checking if simple for Loop Loop at depth 2 containing: %for.body162.i<header><latch><exiting>
. Latch: for.body162.i, Exiting block: for.body162.i
manageDanglingLCCs(inverted V shape): Removing cost 215 of entry
manageDanglingLCCs(inverted V shape): Adding pred cost 215 of entry to successor do.body.preheader
manageDanglingLCCs(inverted V shape): Adding pred cost 215 of entry to successor do.body24.preheader
manageDanglingLCCs(inverted V shape): Removing cost 990 of do.body24
manageDanglingLCCs(inverted V shape): Adding pred cost 990 of do.body24 to successor if.then38
manageDanglingLCCs(inverted V shape): Adding pred cost 990 of do.body24 to successor do.cond44
Pred cost for if.end63.loopexit1 is 1
Pred cost for if.end63.loopexit is 1
manageDanglingLCCs(V shape): Removing cost 1 of predecessor if.end63.loopexit for merge node if.end63
manageDanglingLCCs(V shape): Removing cost 1 of predecessor if.end63.loopexit1 for merge node if.end63
manageDanglingLCCs(V shape): Settting average cost 1 as initial cost for merge node if.end63
Pred cost for if.end63 is 107
Pred cost for if.then38 is 1198
Pred cost for if.then6 is 208
manageDanglingLCCs(V shape): Removing cost 208 of predecessor if.then6 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1198 of predecessor if.then38 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 107 of predecessor if.end63 for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 504 as initial cost for merge node cleanup
Has backedges: 8191 (numCost: 8191)
Has backedges: 131071 (numCost: 131071)
Has backedges: 8191 (numCost: 8191)
Self loop:- #backedges: 8192, body cost: 953, preheader cost: 410
Self loop will be transformed, & body cost is 953 for loop Loop at depth 2 containing: %for.body.i<header><latch><exiting>

Self loop:- #backedges: 131072, body cost: 901, preheader cost: 421
Self loop will be transformed, & body cost is 901 for loop Loop at depth 2 containing: %for.body85.i<header><latch><exiting>

Self loop:- #backedges: 8192, body cost: 906, preheader cost: 625
Self loop will be transformed, & body cost is 906 for loop Loop at depth 2 containing: %for.body162.i<header><latch><exiting>

Func cost 606 for scanhash_cryptolight has been optimized for exit cost!
Storing cost of scanhash_cryptolight() : 606

Instrumenting loops (self loop count: 3, sese loop count: 0) for function scanhash_cryptolight

Loops scheduled for transform for scanhash_cryptolight:- 
Self Loop: Loop at depth 2 containing: %for.body162.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body85.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i<header><latch><exiting>



scanhash_cryptolight(): Self loop Loop at depth 2 containing: %for.body162.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body162.i( scanhash_cryptolight() ). Self Loop cost: 906. Iterations: 4

scanhash_cryptolight(): Transformed Self loop Loop at depth 2 containing: %for.body162.i<header><latch><exiting>


scanhash_cryptolight(): Self loop Loop at depth 2 containing: %for.body85.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body85.i( scanhash_cryptolight() ). Self Loop cost: 901. Iterations: 4

scanhash_cryptolight(): Transformed Self loop Loop at depth 2 containing: %for.body85.i<header><latch><exiting>


scanhash_cryptolight(): Self loop Loop at depth 2 containing: %for.body.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body.i( scanhash_cryptolight() ). Self Loop cost: 953. Iterations: 4

scanhash_cryptolight(): Transformed Self loop Loop at depth 2 containing: %for.body.i<header><latch><exiting>

Total functions: 7, uninstrumented functions: 3
Optimized 7 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-cryptolight.o `test -f 'algo/cpuminer-cryptolight.ll' || echo './'`algo/cpuminer-cryptolight.ll
mv -f algo/.deps/cpuminer-cryptolight.Tpo algo/.deps/cpuminer-cryptolight.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-decred.ll -MD -MP -MF algo/.deps/cpuminer-decred.Tpo -c -o algo/llvm_cpuminer-decred.ll `test -f 'algo/decred.c' || echo './'`algo/decred.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/decred.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-decred.ll > algo/opt_cpuminer-decred.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-decred.ll > algo/cpuminer-decred.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: decred_hash
Function: decred_hash_simple
Function: scanhash_decred
Direct branch from entry needs to be instrumented
Func cost 405 for decred_hash has been optimized for entry cost!
Storing cost of decred_hash() : 405

Instrumenting loops (self loop count: 0, sese loop count: 0) for function decred_hash

Loops scheduled for transform for decred_hash:- 

Func cost 508 for decred_hash_simple has been optimized for entry cost!
Storing cost of decred_hash_simple() : 508

Instrumenting loops (self loop count: 0, sese loop count: 0) for function decred_hash_simple

Loops scheduled for transform for decred_hash_simple:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 325 for scanhash_decred has been optimized for entry cost!
Direct branch from do.body needs to be instrumented
Func cost 259 for scanhash_decred has been optimized for exit cost!
Storing cost of scanhash_decred() : 584

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_decred

Loops scheduled for transform for scanhash_decred:- 

Total functions: 3, uninstrumented functions: 1
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-decred.o `test -f 'algo/cpuminer-decred.ll' || echo './'`algo/cpuminer-decred.ll
mv -f algo/.deps/cpuminer-decred.Tpo algo/.deps/cpuminer-decred.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-drop.ll -MD -MP -MF algo/.deps/cpuminer-drop.Tpo -c -o algo/llvm_cpuminer-drop.ll `test -f 'algo/drop.c' || echo './'`algo/drop.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/drop.c:35:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-drop.ll > algo/opt_cpuminer-drop.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-drop.ll > algo/cpuminer-drop.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: droplp_hash
Function: scanhash_drop
Function: switchHash
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body7,%if.end.i,%if.then.i,%shiftr_lp.exit,%for.cond8.preheader,%for.body10.preheader,%for.body10,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%for.inc15.loopexit,%for.inc15<latch><exiting>
    Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit<latch><exiting>
    Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169<latch><exiting>
. Latch: for.inc15, Exiting block: for.inc15
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body7,%if.end.i,%if.then.i,%shiftr_lp.exit,%for.cond8.preheader,%for.body10.preheader,%for.body10,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%for.inc15.loopexit,%for.inc15<latch><exiting>
    Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit<latch><exiting>
    Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169<latch><exiting>
. Latch: for.inc15, Exiting block: for.inc15
droplp_hash(): Checking if simple for Loop Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit<latch><exiting>
. Latch: shiftr_lp.exit, Exiting block: shiftr_lp.exit
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body7,%if.end.i,%if.then.i,%shiftr_lp.exit,%for.cond8.preheader,%for.body10.preheader,%for.body10,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%for.inc15.loopexit,%for.inc15<latch><exiting>
    Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit<latch><exiting>
    Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169<latch><exiting>
. Latch: for.inc15, Exiting block: for.inc15
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body7,%if.end.i,%if.then.i,%shiftr_lp.exit,%for.cond8.preheader,%for.body10.preheader,%for.body10,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%for.inc15.loopexit,%for.inc15<latch><exiting>
    Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit<latch><exiting>
    Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169<latch><exiting>
. Latch: for.inc15, Exiting block: for.inc15
droplp_hash(): Checking if simple for Loop Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169<latch><exiting>
. Latch: shiftr_lp.exit169, Exiting block: shiftr_lp.exit169
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%for.body7,%if.end.i,%if.then.i,%shiftr_lp.exit,%for.cond8.preheader,%for.body10.preheader,%for.body10,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%for.inc15.loopexit,%for.inc15<latch><exiting>
    Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit<latch><exiting>
    Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169<latch><exiting>
. Latch: for.inc15, Exiting block: for.inc15
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body19<header>,%for.body23,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%for.cond28.preheader,%for.body30.preheader,%for.body30,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%for.inc35.loopexit,%for.inc35<latch><exiting>
    Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339<latch><exiting>
    Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254<latch><exiting>
. Latch: for.inc35, Exiting block: for.inc35
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body19<header>,%for.body23,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%for.cond28.preheader,%for.body30.preheader,%for.body30,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%for.inc35.loopexit,%for.inc35<latch><exiting>
    Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339<latch><exiting>
    Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254<latch><exiting>
. Latch: for.inc35, Exiting block: for.inc35
droplp_hash(): Checking if simple for Loop Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339<latch><exiting>
. Latch: shiftr_lp.exit339, Exiting block: shiftr_lp.exit339
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body19<header>,%for.body23,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%for.cond28.preheader,%for.body30.preheader,%for.body30,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%for.inc35.loopexit,%for.inc35<latch><exiting>
    Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339<latch><exiting>
    Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254<latch><exiting>
. Latch: for.inc35, Exiting block: for.inc35
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body19<header>,%for.body23,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%for.cond28.preheader,%for.body30.preheader,%for.body30,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%for.inc35.loopexit,%for.inc35<latch><exiting>
    Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339<latch><exiting>
    Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254<latch><exiting>
. Latch: for.inc35, Exiting block: for.inc35
droplp_hash(): Checking if simple for Loop Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254<latch><exiting>
. Latch: shiftr_lp.exit254, Exiting block: shiftr_lp.exit254
droplp_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body19<header>,%for.body23,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%for.cond28.preheader,%for.body30.preheader,%for.body30,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%for.inc35.loopexit,%for.inc35<latch><exiting>
    Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339<latch><exiting>
    Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254<latch><exiting>
. Latch: for.inc35, Exiting block: for.inc35
Instrumenting loop with body cost: 92
Non-header-colocated-exit loop will be transformed, & body cost is 92 for loop with header for.body7
Instrumenting loop with body cost: 92
Non-header-colocated-exit loop will be transformed, & body cost is 92 for loop with header for.body10
Instrumenting loop with body cost: 13
Non-header-colocated-exit loop will be transformed, & body cost is 13 for loop with header for.body
Instrumenting loop with body cost: 92
Non-header-colocated-exit loop will be transformed, & body cost is 92 for loop with header for.body23
Instrumenting loop with body cost: 92
Non-header-colocated-exit loop will be transformed, & body cost is 92 for loop with header for.body30
Instrumenting loop with body cost: 11
Non-header-colocated-exit loop will be transformed, & body cost is 11 for loop with header for.body19
Func cost 852 for droplp_hash has been optimized for entry cost!
Storing cost of droplp_hash() : 852

Instrumenting loops (self loop count: 0, sese loop count: 6) for function droplp_hash

Loops scheduled for transform for droplp_hash:- 
Sese Loop: Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254<latch><exiting>

Sese Loop: Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339<latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body19<header>,%for.body23,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%for.cond28.preheader,%for.body30.preheader,%for.body30,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%for.inc35.loopexit,%for.inc35<latch><exiting>
    Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339<latch><exiting>
    Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254<latch><exiting>

Sese Loop: Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169<latch><exiting>

Sese Loop: Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit<latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body<header>,%for.body7,%if.end.i,%if.then.i,%shiftr_lp.exit,%for.cond8.preheader,%for.body10.preheader,%for.body10,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%for.inc15.loopexit,%for.inc15<latch><exiting>
    Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit<latch><exiting>
    Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169<latch><exiting>



droplp_hash(): Max depth loop Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit<latch><exiting>


This seseloop will be transformed & instrumented --> for.body7( droplp_hash() ). SESE Loop cost: 92. Iterations: 43
Found local ind var:   %j.0347 = phi i32 [ %rem4.zext, %for.body ], [ %inc, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone = phi i32 
User in header block to replace Phi:   %4 = add i32 43, %j.0347
Applied sese loop transform on for.body7( droplp_hash() )

droplp_hash(): Transformed loop Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 3 containing: %seseLoopOptBlock<header>,%if.then.i,%shiftr_lp.exit<latch><exiting>,%if.end.i


droplp_hash(): Max depth loop Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169<latch><exiting>


This seseloop will be transformed & instrumented --> for.body10( droplp_hash() ). SESE Loop cost: 92. Iterations: 43
Found local ind var:   %j.1349 = phi i32 [ %inc13, %seseLoopOptHNCExitBlock2 ], [ 0, %for.body10.preheader ], mapping it to   %phiIVClone3 = phi i32 
User in header block to replace Phi:   %22 = add i32 43, %j.1349
Applied sese loop transform on for.body10( droplp_hash() )

droplp_hash(): Transformed loop Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%seseLoopOptBlock1,%seseLoopOptHNCExitBlock2<latch><exiting>
    Loop at depth 3 containing: %seseLoopOptBlock1<header>,%if.then.i86,%shiftr_lp.exit169<latch><exiting>,%if.end.i168


droplp_hash(): Max depth loop Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339<latch><exiting>


This seseloop will be transformed & instrumented --> for.body23( droplp_hash() ). SESE Loop cost: 92. Iterations: 43
Found local ind var:   %j.2341 = phi i32 [ %rem20, %for.body19 ], [ %inc26, %seseLoopOptHNCExitBlock9 ], mapping it to   %phiIVClone10 = phi i32 
User in header block to replace Phi:   %40 = add i32 43, %j.2341
Applied sese loop transform on for.body23( droplp_hash() )

droplp_hash(): Transformed loop Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%seseLoopOptBlock8,%seseLoopOptHNCExitBlock9<latch><exiting>
    Loop at depth 3 containing: %seseLoopOptBlock8<header>,%if.then.i256,%shiftr_lp.exit339<latch><exiting>,%if.end.i338


droplp_hash(): Max depth loop Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254<latch><exiting>


This seseloop will be transformed & instrumented --> for.body30( droplp_hash() ). SESE Loop cost: 92. Iterations: 43
Found local ind var:   %j.3343 = phi i32 [ %inc33, %seseLoopOptHNCExitBlock17 ], [ 0, %for.body30.preheader ], mapping it to   %phiIVClone18 = phi i32 
User in header block to replace Phi:   %58 = add i32 43, %j.3343
Applied sese loop transform on for.body30( droplp_hash() )

droplp_hash(): Transformed loop Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%seseLoopOptBlock16,%seseLoopOptHNCExitBlock17<latch><exiting>
    Loop at depth 3 containing: %seseLoopOptBlock16<header>,%if.then.i171,%shiftr_lp.exit254<latch><exiting>,%if.end.i253


droplp_hash(): Max depth loop Loop at depth 1 containing: %for.body<header>,%for.body7,%if.end.i,%if.then.i,%shiftr_lp.exit,%for.cond8.preheader,%for.body10.preheader,%for.body10,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%for.inc15.loopexit,%for.inc15<latch><exiting>,%seseLoopOptBlock,%seseLoopOptHNCExitBlock,%seseLoopOptBlock1,%seseLoopOptHNCExitBlock2
    Loop at depth 2 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
        Loop at depth 3 containing: %seseLoopOptBlock<header>,%if.then.i,%shiftr_lp.exit<latch><exiting>,%if.end.i
    Loop at depth 2 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%seseLoopOptBlock1,%seseLoopOptHNCExitBlock2<latch><exiting>
        Loop at depth 3 containing: %seseLoopOptBlock1<header>,%if.then.i86,%shiftr_lp.exit169<latch><exiting>,%if.end.i168


This seseloop will be transformed & instrumented --> for.body( droplp_hash() ). SESE Loop cost: 13. Iterations: 307
Found local ind var:   %i.0350 = phi i32 [ %rem, %entry ], [ %add, %seseLoopOptHNCExitBlock24 ], mapping it to   %phiIVClone25 = phi i32 
User in header block to replace Phi:   %4 = add i32 2763, %i.0350
Applied sese loop transform on for.body( droplp_hash() )

droplp_hash(): Transformed loop Loop at depth 1 containing: %for.body<header>,%for.body7,%if.end.i,%if.then.i,%shiftr_lp.exit,%for.cond8.preheader,%for.body10.preheader,%for.body10,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%for.inc15.loopexit,%for.inc15,%seseLoopOptBlock,%seseLoopOptHNCExitBlock,%seseLoopOptBlock1,%seseLoopOptHNCExitBlock2,%seseLoopOptBlock23,%seseLoopOptHNCExitBlock24<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock23<header>,%if.end.i,%if.then.i,%shiftr_lp.exit,%for.cond8.preheader,%for.body10.preheader,%for.body10,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%for.inc15.loopexit,%for.inc15<latch><exiting>,%seseLoopOptBlock,%seseLoopOptHNCExitBlock,%seseLoopOptBlock1,%seseLoopOptHNCExitBlock2,%for.body7
        Loop at depth 3 containing: %for.body7<header>,%if.end.i,%if.then.i,%shiftr_lp.exit,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
            Loop at depth 4 containing: %seseLoopOptBlock<header>,%if.then.i,%shiftr_lp.exit<latch><exiting>,%if.end.i
        Loop at depth 3 containing: %for.body10<header>,%if.end.i168,%if.then.i86,%shiftr_lp.exit169,%seseLoopOptBlock1,%seseLoopOptHNCExitBlock2<latch><exiting>
            Loop at depth 4 containing: %seseLoopOptBlock1<header>,%if.then.i86,%shiftr_lp.exit169<latch><exiting>,%if.end.i168


droplp_hash(): Max depth loop Loop at depth 1 containing: %for.body19<header>,%for.body23,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%for.cond28.preheader,%for.body30.preheader,%for.body30,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%for.inc35.loopexit,%for.inc35<latch><exiting>,%seseLoopOptBlock8,%seseLoopOptHNCExitBlock9,%seseLoopOptBlock16,%seseLoopOptHNCExitBlock17
    Loop at depth 2 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%seseLoopOptBlock8,%seseLoopOptHNCExitBlock9<latch><exiting>
        Loop at depth 3 containing: %seseLoopOptBlock8<header>,%if.then.i256,%shiftr_lp.exit339<latch><exiting>,%if.end.i338
    Loop at depth 2 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%seseLoopOptBlock16,%seseLoopOptHNCExitBlock17<latch><exiting>
        Loop at depth 3 containing: %seseLoopOptBlock16<header>,%if.then.i171,%shiftr_lp.exit254<latch><exiting>,%if.end.i253


This seseloop will be transformed & instrumented --> for.body19( droplp_hash() ). SESE Loop cost: 11. Iterations: 363
Found local ind var:   %i.1345 = phi i32 [ %add36, %seseLoopOptHNCExitBlock32 ], [ 0, %for.body19.preheader ], mapping it to   %phiIVClone33 = phi i32 
User in header block to replace Phi:   %42 = add i32 3267, %i.1345
Applied sese loop transform on for.body19( droplp_hash() )

droplp_hash(): Transformed loop Loop at depth 1 containing: %for.body19<header>,%for.body23,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%for.cond28.preheader,%for.body30.preheader,%for.body30,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%for.inc35.loopexit,%for.inc35,%seseLoopOptBlock8,%seseLoopOptHNCExitBlock9,%seseLoopOptBlock16,%seseLoopOptHNCExitBlock17,%seseLoopOptBlock31,%seseLoopOptHNCExitBlock32<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock31<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%for.cond28.preheader,%for.body30.preheader,%for.body30,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%for.inc35.loopexit,%for.inc35<latch><exiting>,%seseLoopOptBlock8,%seseLoopOptHNCExitBlock9,%seseLoopOptBlock16,%seseLoopOptHNCExitBlock17,%for.body23
        Loop at depth 3 containing: %for.body23<header>,%if.end.i338,%if.then.i256,%shiftr_lp.exit339,%seseLoopOptBlock8,%seseLoopOptHNCExitBlock9<latch><exiting>
            Loop at depth 4 containing: %seseLoopOptBlock8<header>,%if.then.i256,%shiftr_lp.exit339<latch><exiting>,%if.end.i338
        Loop at depth 3 containing: %for.body30<header>,%if.end.i253,%if.then.i171,%shiftr_lp.exit254,%seseLoopOptBlock16,%seseLoopOptHNCExitBlock17<latch><exiting>
            Loop at depth 4 containing: %seseLoopOptBlock16<header>,%if.then.i171,%shiftr_lp.exit254<latch><exiting>,%if.end.i253

Pred cost for cleanup.loopexit is 1
Pred cost for if.then9 is 102
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then9 for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 123 for scanhash_drop has been optimized for entry cost!
Direct branch from do.body needs to be instrumented
Func cost 158 for scanhash_drop has been optimized for exit cost!
Storing cost of scanhash_drop() : 281

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_drop

Loops scheduled for transform for scanhash_drop:- 

Direct branch from entry needs to be instrumented
Func cost 1011 for switchHash has been optimized for entry cost!
Storing cost of switchHash() : 1011

Instrumenting loops (self loop count: 0, sese loop count: 0) for function switchHash

Loops scheduled for transform for switchHash:- 

Total functions: 3, uninstrumented functions: 0
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-drop.o `test -f 'algo/cpuminer-drop.ll' || echo './'`algo/cpuminer-drop.ll
mv -f algo/.deps/cpuminer-drop.Tpo algo/.deps/cpuminer-drop.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-fresh.ll -MD -MP -MF algo/.deps/cpuminer-fresh.Tpo -c -o algo/llvm_cpuminer-fresh.ll `test -f 'algo/fresh.c' || echo './'`algo/fresh.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/fresh.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-fresh.ll > algo/opt_cpuminer-fresh.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-fresh.ll > algo/cpuminer-fresh.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: freshhash
Function: scanhash_fresh
Func cost 2435 for freshhash has been optimized for entry cost!
Storing cost of freshhash() : 2435

Instrumenting loops (self loop count: 0, sese loop count: 0) for function freshhash

Loops scheduled for transform for freshhash:- 

Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 1003 for scanhash_fresh has been optimized for entry cost!
Func cost 360 for scanhash_fresh has been optimized for exit cost!
Storing cost of scanhash_fresh() : 1363

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_fresh

Loops scheduled for transform for scanhash_fresh:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-fresh.o `test -f 'algo/cpuminer-fresh.ll' || echo './'`algo/cpuminer-fresh.ll
mv -f algo/.deps/cpuminer-fresh.Tpo algo/.deps/cpuminer-fresh.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-geek.ll -MD -MP -MF algo/.deps/cpuminer-geek.Tpo -c -o algo/llvm_cpuminer-geek.ll `test -f 'algo/geek.c' || echo './'`algo/geek.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/geek.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-geek.ll > algo/opt_cpuminer-geek.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-geek.ll > algo/cpuminer-geek.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: geekhash
Function: scanhash_geek
Func cost 910 for geekhash has been optimized for entry cost!
Storing cost of geekhash() : 910

Instrumenting loops (self loop count: 0, sese loop count: 0) for function geekhash

Loops scheduled for transform for geekhash:- 

Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_geek has been optimized for entry cost!
Func cost 259 for scanhash_geek has been optimized for exit cost!
Storing cost of scanhash_geek() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_geek

Loops scheduled for transform for scanhash_geek:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-geek.o `test -f 'algo/cpuminer-geek.ll' || echo './'`algo/cpuminer-geek.ll
mv -f algo/.deps/cpuminer-geek.Tpo algo/.deps/cpuminer-geek.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-groestl.ll -MD -MP -MF algo/.deps/cpuminer-groestl.Tpo -c -o algo/llvm_cpuminer-groestl.ll `test -f 'algo/groestl.c' || echo './'`algo/groestl.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/groestl.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-groestl.ll > algo/opt_cpuminer-groestl.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-groestl.ll > algo/cpuminer-groestl.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: groestlhash
Function: scanhash_groestl
Func cost 1015 for groestlhash has been optimized for entry cost!
Storing cost of groestlhash() : 1015

Instrumenting loops (self loop count: 0, sese loop count: 0) for function groestlhash

Loops scheduled for transform for groestlhash:- 

Pred cost for do.end is 4
Pred cost for if.then13 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then13 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 569 for scanhash_groestl has been optimized for entry cost!
Func cost 259 for scanhash_groestl has been optimized for exit cost!
Storing cost of scanhash_groestl() : 828

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_groestl

Loops scheduled for transform for scanhash_groestl:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-groestl.o `test -f 'algo/cpuminer-groestl.ll' || echo './'`algo/cpuminer-groestl.ll
mv -f algo/.deps/cpuminer-groestl.Tpo algo/.deps/cpuminer-groestl.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-heavy.ll -MD -MP -MF algo/.deps/cpuminer-heavy.Tpo -c -o algo/llvm_cpuminer-heavy.ll `test -f 'algo/heavy.c' || echo './'`algo/heavy.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/heavy.c:5:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-heavy.ll > algo/opt_cpuminer-heavy.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-heavy.ll > algo/cpuminer-heavy.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: heavyhash
Function: scanhash_heavy
heavyhash(): Checking if simple for Loop Loop at depth 1 containing: %for.cond6.preheader.i<header><latch><exiting>
. Latch: for.cond6.preheader.i, Exiting block: for.cond6.preheader.i
heavyhash(): Checking if simple for Loop Loop at depth 1 containing: %for.cond6.preheader.1.i<header><latch><exiting>
. Latch: for.cond6.preheader.1.i, Exiting block: for.cond6.preheader.1.i
Has backedges: 31 (numCost: 31)
Has backedges: 31 (numCost: 31)
Self loop:- #backedges: 32, body cost: 48, preheader cost: 2757
Self loop:- loop cost 1536 will be instrumented in post loop exit
Self loop:- #backedges: 32, body cost: 48, preheader cost: 1546
Self loop:- loop & preheader cost 3082 will be instrumented in post loop exit
Func cost 3992 for heavyhash has been optimized for entry cost!
Storing cost of heavyhash() : 3992

Instrumenting loops (self loop count: 0, sese loop count: 0) for function heavyhash

Loops scheduled for transform for heavyhash:- 


heavyhash(): Self loop Loop at depth 1 containing: %for.cond6.preheader.1.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.cond6.preheader.1.i

heavyhash(): Transformed Self loop Loop at depth 1 containing: %for.cond6.preheader.1.i<header><latch><exiting>


heavyhash(): Self loop Loop at depth 1 containing: %for.cond6.preheader.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.cond6.preheader.i

heavyhash(): Transformed Self loop Loop at depth 1 containing: %for.cond6.preheader.i<header><latch><exiting>

Pred cost for do.end is 2
Pred cost for if.then is 103
manageDanglingLCCs(V shape): Removing cost 2 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 103 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 52 as initial cost for merge node cleanup
Func cost 113 for scanhash_heavy has been optimized for entry cost!
Func cost 157 for scanhash_heavy has been optimized for exit cost!
Storing cost of scanhash_heavy() : 270

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_heavy

Loops scheduled for transform for scanhash_heavy:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-heavy.o `test -f 'algo/cpuminer-heavy.ll' || echo './'`algo/cpuminer-heavy.ll
mv -f algo/.deps/cpuminer-heavy.Tpo algo/.deps/cpuminer-heavy.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-ink.ll -MD -MP -MF algo/.deps/cpuminer-ink.Tpo -c -o algo/llvm_cpuminer-ink.ll `test -f 'algo/ink.c' || echo './'`algo/ink.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/ink.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-ink.ll > algo/opt_cpuminer-ink.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-ink.ll > algo/cpuminer-ink.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: inkhash
Function: scanhash_ink
Func cost 1116 for inkhash has been optimized for entry cost!
Storing cost of inkhash() : 1116

Instrumenting loops (self loop count: 0, sese loop count: 0) for function inkhash

Loops scheduled for transform for inkhash:- 

Pred cost for do.end is 6
Pred cost for if.then is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 6 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup
Func cost 566 for scanhash_ink has been optimized for entry cost!
Func cost 259 for scanhash_ink has been optimized for exit cost!
Storing cost of scanhash_ink() : 825

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_ink

Loops scheduled for transform for scanhash_ink:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-ink.o `test -f 'algo/cpuminer-ink.ll' || echo './'`algo/cpuminer-ink.ll
mv -f algo/.deps/cpuminer-ink.Tpo algo/.deps/cpuminer-ink.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-jha.ll -MD -MP -MF algo/.deps/cpuminer-jha.Tpo -c -o algo/llvm_cpuminer-jha.ll `test -f 'algo/jha.c' || echo './'`algo/jha.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/jha.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-jha.ll > algo/opt_cpuminer-jha.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-jha.ll > algo/cpuminer-jha.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: jha_hash
Function: scanhash_jha
Func cost 3477 for jha_hash has been optimized for entry cost!
Storing cost of jha_hash() : 3477

Instrumenting loops (self loop count: 0, sese loop count: 0) for function jha_hash

Loops scheduled for transform for jha_hash:- 

Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 770 for scanhash_jha has been optimized for entry cost!
Func cost 360 for scanhash_jha has been optimized for exit cost!
Storing cost of scanhash_jha() : 1130

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_jha

Loops scheduled for transform for scanhash_jha:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-jha.o `test -f 'algo/cpuminer-jha.ll' || echo './'`algo/cpuminer-jha.ll
mv -f algo/.deps/cpuminer-jha.Tpo algo/.deps/cpuminer-jha.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-lbry.ll -MD -MP -MF algo/.deps/cpuminer-lbry.Tpo -c -o algo/llvm_cpuminer-lbry.ll `test -f 'algo/lbry.c' || echo './'`algo/lbry.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/lbry.c:6:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-lbry.ll > algo/opt_cpuminer-lbry.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-lbry.ll > algo/cpuminer-lbry.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: lbry_hash
Function: scanhash_lbry
Func cost 2231 for lbry_hash has been optimized for entry cost!
Storing cost of lbry_hash() : 2231

Instrumenting loops (self loop count: 0, sese loop count: 0) for function lbry_hash

Loops scheduled for transform for lbry_hash:- 

Pred cost for do.end is 6
Pred cost for if.then12 is 109
manageDanglingLCCs(V shape): Removing cost 109 of predecessor if.then12 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 6 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 57 as initial cost for merge node cleanup
Direct branch from entry needs to be instrumented
Func cost 9 for scanhash_lbry has been optimized for entry cost!
Func cost 260 for scanhash_lbry has been optimized for exit cost!
Storing cost of scanhash_lbry() : 269

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_lbry

Loops scheduled for transform for scanhash_lbry:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-lbry.o `test -f 'algo/cpuminer-lbry.ll' || echo './'`algo/cpuminer-lbry.ll
mv -f algo/.deps/cpuminer-lbry.Tpo algo/.deps/cpuminer-lbry.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-luffa.ll -MD -MP -MF algo/.deps/cpuminer-luffa.Tpo -c -o algo/llvm_cpuminer-luffa.ll `test -f 'algo/luffa.c' || echo './'`algo/luffa.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/luffa.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-luffa.ll > algo/opt_cpuminer-luffa.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-luffa.ll > algo/cpuminer-luffa.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: luffahash
Function: scanhash_luffa
Func cost 813 for luffahash has been optimized for entry cost!
Storing cost of luffahash() : 813

Instrumenting loops (self loop count: 0, sese loop count: 0) for function luffahash

Loops scheduled for transform for luffahash:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 565 for scanhash_luffa has been optimized for entry cost!
Func cost 259 for scanhash_luffa has been optimized for exit cost!
Storing cost of scanhash_luffa() : 824

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_luffa

Loops scheduled for transform for scanhash_luffa:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-luffa.o `test -f 'algo/cpuminer-luffa.ll' || echo './'`algo/cpuminer-luffa.ll
mv -f algo/.deps/cpuminer-luffa.Tpo algo/.deps/cpuminer-luffa.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-lyra2re.ll -MD -MP -MF algo/.deps/cpuminer-lyra2re.Tpo -c -o algo/llvm_cpuminer-lyra2re.ll `test -f 'algo/lyra2re.c' || echo './'`algo/lyra2re.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/lyra2re.c:3:
In file included from ./sha3/sph_blake.h:45:
In file included from ./sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-lyra2re.ll > algo/opt_cpuminer-lyra2re.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-lyra2re.ll > algo/cpuminer-lyra2re.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: lyra2_hash
Function: scanhash_lyra2
Func cost 2639 for lyra2_hash has been optimized for entry cost!
Storing cost of lyra2_hash() : 2639

Instrumenting loops (self loop count: 0, sese loop count: 0) for function lyra2_hash

Loops scheduled for transform for lyra2_hash:- 

Pred cost for do.end is 4
Pred cost for if.then13 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then13 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 565 for scanhash_lyra2 has been optimized for entry cost!
Func cost 259 for scanhash_lyra2 has been optimized for exit cost!
Storing cost of scanhash_lyra2() : 824

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_lyra2

Loops scheduled for transform for scanhash_lyra2:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-lyra2re.o `test -f 'algo/cpuminer-lyra2re.ll' || echo './'`algo/cpuminer-lyra2re.ll
mv -f algo/.deps/cpuminer-lyra2re.Tpo algo/.deps/cpuminer-lyra2re.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-lyra2rev2.ll -MD -MP -MF algo/.deps/cpuminer-lyra2rev2.Tpo -c -o algo/llvm_cpuminer-lyra2rev2.ll `test -f 'algo/lyra2rev2.c' || echo './'`algo/lyra2rev2.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/lyra2rev2.c:3:
In file included from ./sha3/sph_blake.h:45:
In file included from ./sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-lyra2rev2.ll > algo/opt_cpuminer-lyra2rev2.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-lyra2rev2.ll > algo/cpuminer-lyra2rev2.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: lyra2rev2_hash
Function: scanhash_lyra2rev2
Func cost 3449 for lyra2rev2_hash has been optimized for entry cost!
Storing cost of lyra2rev2_hash() : 3449

Instrumenting loops (self loop count: 0, sese loop count: 0) for function lyra2rev2_hash

Loops scheduled for transform for lyra2rev2_hash:- 

Pred cost for do.end is 4
Pred cost for if.then13 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then13 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 565 for scanhash_lyra2rev2 has been optimized for entry cost!
Func cost 259 for scanhash_lyra2rev2 has been optimized for exit cost!
Storing cost of scanhash_lyra2rev2() : 824

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_lyra2rev2

Loops scheduled for transform for scanhash_lyra2rev2:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-lyra2rev2.o `test -f 'algo/cpuminer-lyra2rev2.ll' || echo './'`algo/cpuminer-lyra2rev2.ll
mv -f algo/.deps/cpuminer-lyra2rev2.Tpo algo/.deps/cpuminer-lyra2rev2.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-lyra2v3.ll -MD -MP -MF algo/.deps/cpuminer-lyra2v3.Tpo -c -o algo/llvm_cpuminer-lyra2v3.ll `test -f 'algo/lyra2v3.c' || echo './'`algo/lyra2v3.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/lyra2v3.c:3:
In file included from ./sha3/sph_blake.h:45:
In file included from ./sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-lyra2v3.ll > algo/opt_cpuminer-lyra2v3.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-lyra2v3.ll > algo/cpuminer-lyra2v3.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: lyra2v3_hash
Function: scanhash_lyra2v3
Func cost 2233 for lyra2v3_hash has been optimized for entry cost!
Storing cost of lyra2v3_hash() : 2233

Instrumenting loops (self loop count: 0, sese loop count: 0) for function lyra2v3_hash

Loops scheduled for transform for lyra2v3_hash:- 

Pred cost for do.end is 4
Pred cost for if.then13 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then13 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 565 for scanhash_lyra2v3 has been optimized for entry cost!
Func cost 259 for scanhash_lyra2v3 has been optimized for exit cost!
Storing cost of scanhash_lyra2v3() : 824

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_lyra2v3

Loops scheduled for transform for scanhash_lyra2v3:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-lyra2v3.o `test -f 'algo/cpuminer-lyra2v3.ll' || echo './'`algo/cpuminer-lyra2v3.ll
mv -f algo/.deps/cpuminer-lyra2v3.Tpo algo/.deps/cpuminer-lyra2v3.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-myr-groestl.ll -MD -MP -MF algo/.deps/cpuminer-myr-groestl.Tpo -c -o algo/llvm_cpuminer-myr-groestl.ll `test -f 'algo/myr-groestl.c' || echo './'`algo/myr-groestl.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/myr-groestl.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-myr-groestl.ll > algo/opt_cpuminer-myr-groestl.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-myr-groestl.ll > algo/cpuminer-myr-groestl.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: myriadhash
Function: scanhash_myriad
Func cost 1320 for myriadhash has been optimized for entry cost!
Storing cost of myriadhash() : 1320

Instrumenting loops (self loop count: 0, sese loop count: 0) for function myriadhash

Loops scheduled for transform for myriadhash:- 

Pred cost for do.end is 4
Pred cost for if.then13 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then13 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 571 for scanhash_myriad has been optimized for entry cost!
Func cost 259 for scanhash_myriad has been optimized for exit cost!
Storing cost of scanhash_myriad() : 830

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_myriad

Loops scheduled for transform for scanhash_myriad:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-myr-groestl.o `test -f 'algo/cpuminer-myr-groestl.ll' || echo './'`algo/cpuminer-myr-groestl.ll
mv -f algo/.deps/cpuminer-myr-groestl.Tpo algo/.deps/cpuminer-myr-groestl.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-keccak.ll -MD -MP -MF algo/.deps/cpuminer-keccak.Tpo -c -o algo/llvm_cpuminer-keccak.ll `test -f 'algo/keccak.c' || echo './'`algo/keccak.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/keccak.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-keccak.ll > algo/opt_cpuminer-keccak.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-keccak.ll > algo/cpuminer-keccak.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: keccakhash
Function: scanhash_keccak
Func cost 813 for keccakhash has been optimized for entry cost!
Storing cost of keccakhash() : 813

Instrumenting loops (self loop count: 0, sese loop count: 0) for function keccakhash

Loops scheduled for transform for keccakhash:- 

Pred cost for do.end is 6
Pred cost for if.then is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 6 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup
Func cost 566 for scanhash_keccak has been optimized for entry cost!
Func cost 259 for scanhash_keccak has been optimized for exit cost!
Storing cost of scanhash_keccak() : 825

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_keccak

Loops scheduled for transform for scanhash_keccak:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-keccak.o `test -f 'algo/cpuminer-keccak.ll' || echo './'`algo/cpuminer-keccak.ll
mv -f algo/.deps/cpuminer-keccak.Tpo algo/.deps/cpuminer-keccak.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-pentablake.ll -MD -MP -MF algo/.deps/cpuminer-pentablake.Tpo -c -o algo/llvm_cpuminer-pentablake.ll `test -f 'algo/pentablake.c' || echo './'`algo/pentablake.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/pentablake.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-pentablake.ll > algo/opt_cpuminer-pentablake.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-pentablake.ll > algo/cpuminer-pentablake.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: pentablakehash
Function: scanhash_pentablake
Func cost 1622 for pentablakehash has been optimized for entry cost!
Storing cost of pentablakehash() : 1622

Instrumenting loops (self loop count: 0, sese loop count: 0) for function pentablakehash

Loops scheduled for transform for pentablakehash:- 

Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 770 for scanhash_pentablake has been optimized for entry cost!
Func cost 360 for scanhash_pentablake has been optimized for exit cost!
Storing cost of scanhash_pentablake() : 1130

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_pentablake

Loops scheduled for transform for scanhash_pentablake:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-pentablake.o `test -f 'algo/cpuminer-pentablake.ll' || echo './'`algo/cpuminer-pentablake.ll
mv -f algo/.deps/cpuminer-pentablake.Tpo algo/.deps/cpuminer-pentablake.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-phi1612.ll -MD -MP -MF algo/.deps/cpuminer-phi1612.Tpo -c -o algo/llvm_cpuminer-phi1612.ll `test -f 'algo/phi1612.c' || echo './'`algo/phi1612.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/phi1612.c:7:
In file included from ./sha3/sph_skein.h:49:
In file included from ./sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-phi1612.ll > algo/opt_cpuminer-phi1612.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-phi1612.ll > algo/cpuminer-phi1612.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: phi1612_hash
Function: scanhash_phi1612
Func cost 3348 for phi1612_hash has been optimized for entry cost!
Storing cost of phi1612_hash() : 3348

Instrumenting loops (self loop count: 0, sese loop count: 0) for function phi1612_hash

Loops scheduled for transform for phi1612_hash:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then13 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then13 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 565 for scanhash_phi1612 has been optimized for entry cost!
Func cost 259 for scanhash_phi1612 has been optimized for exit cost!
Storing cost of scanhash_phi1612() : 824

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_phi1612

Loops scheduled for transform for scanhash_phi1612:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-phi1612.o `test -f 'algo/cpuminer-phi1612.ll' || echo './'`algo/cpuminer-phi1612.ll
mv -f algo/.deps/cpuminer-phi1612.Tpo algo/.deps/cpuminer-phi1612.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-phi2.ll -MD -MP -MF algo/.deps/cpuminer-phi2.Tpo -c -o algo/llvm_cpuminer-phi2.ll `test -f 'algo/phi2.c' || echo './'`algo/phi2.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/phi2.c:7:
In file included from ./sha3/sph_cubehash.h:45:
In file included from ./sha3/sph_types.h:51:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-phi2.ll > algo/opt_cpuminer-phi2.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-phi2.ll > algo/cpuminer-phi2.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: phi2_hash
Function: scanhash_phi2
Func cost 1221 for phi2_hash has been optimized for entry cost!
Storing cost of phi2_hash() : 1221

Instrumenting loops (self loop count: 0, sese loop count: 0) for function phi2_hash

Loops scheduled for transform for phi2_hash:- 

scanhash_phi2(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then11,%for.inc<latch><exiting>
. Latch: for.inc, Exiting block: for.inc
Pred cost for cleanup.loopexit is 1
Pred cost for if.then20 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then20 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Has backedges: 35 (numCost: 35)
Non-header-colocated-exit loop:- loop & preheader cost 1153 will be instrumented in post loop exit
Func cost 1162 for scanhash_phi2 has been optimized for entry cost!
Func cost 259 for scanhash_phi2 has been optimized for exit cost!
Storing cost of scanhash_phi2() : 1421

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_phi2

Loops scheduled for transform for scanhash_phi2:- 


scanhash_phi2(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.then11,%for.inc<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

scanhash_phi2(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.then11,%for.inc<latch><exiting>

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-phi2.o `test -f 'algo/cpuminer-phi2.ll' || echo './'`algo/cpuminer-phi2.ll
mv -f algo/.deps/cpuminer-phi2.Tpo algo/.deps/cpuminer-phi2.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-quark.ll -MD -MP -MF algo/.deps/cpuminer-quark.Tpo -c -o algo/llvm_cpuminer-quark.ll `test -f 'algo/quark.c' || echo './'`algo/quark.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/quark.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-quark.ll > algo/opt_cpuminer-quark.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-quark.ll > algo/cpuminer-quark.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: init_quarkhash_contexts
Function: quarkhash
Function: scanhash_quark
Func cost 1214 for init_quarkhash_contexts has been optimized for entry cost!
Storing cost of init_quarkhash_contexts() : 1214

Instrumenting loops (self loop count: 0, sese loop count: 0) for function init_quarkhash_contexts

Loops scheduled for transform for init_quarkhash_contexts:- 

Skipping unreachable block if.else
Func cost 2456 for quarkhash has been optimized for entry cost!
Storing cost of quarkhash() : 2456

Instrumenting loops (self loop count: 0, sese loop count: 0) for function quarkhash

Loops scheduled for transform for quarkhash:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 561 for scanhash_quark has been optimized for entry cost!
Func cost 259 for scanhash_quark has been optimized for exit cost!
Storing cost of scanhash_quark() : 820

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_quark

Loops scheduled for transform for scanhash_quark:- 

Total functions: 3, uninstrumented functions: 1
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-quark.o `test -f 'algo/cpuminer-quark.ll' || echo './'`algo/cpuminer-quark.ll
mv -f algo/.deps/cpuminer-quark.Tpo algo/.deps/cpuminer-quark.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-neoscrypt.ll -MD -MP -MF algo/.deps/cpuminer-neoscrypt.Tpo -c -o algo/llvm_cpuminer-neoscrypt.ll `test -f 'algo/neoscrypt.c' || echo './'`algo/neoscrypt.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/neoscrypt.c:33:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-neoscrypt.ll > algo/opt_cpuminer-neoscrypt.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-neoscrypt.ll > algo/cpuminer-neoscrypt.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blake2s_compress
Function: neoscrypt
Function: neoscrypt_blkmix
Function: neoscrypt_fastkdf
Function: neoscrypt_hash_finish_sha256
Function: neoscrypt_pbkdf2_sha256
Function: scanhash_neoscrypt
Function: sha256_blocks
Func cost 2607 for blake2s_compress has been optimized for entry cost!
Storing cost of blake2s_compress() : 2607

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2s_compress

Loops scheduled for transform for blake2s_compress:- 

neoscrypt(): Transformed branch between if.end68 and for.end109 in the forward direction
neoscrypt(): Transformed branch between for.cond87.preheader and for.end109_dummy in the forward direction
neoscrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
neoscrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body48<header><latch><exiting>
. Latch: for.body48, Exiting block: for.body48
neoscrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body74<header><latch><exiting>
. Latch: for.body74, Exiting block: for.body74
neoscrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body90<header><latch><exiting>
. Latch: for.body90, Exiting block: for.body90
Func cost 133 for neoscrypt has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 110, preheader cost: 3
Self loop will be transformed, & body cost is 110 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 111, preheader cost: 6
Self loop will be transformed, & body cost is 111 for loop Loop at depth 1 containing: %for.body48<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 110, preheader cost: 105
Self loop will be transformed, & body cost is 110 for loop Loop at depth 1 containing: %for.body74<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 111, preheader cost: 111
Self loop will be transformed, & body cost is 111 for loop Loop at depth 1 containing: %for.body90<header><latch><exiting>

Direct branch from for.end109 needs to be instrumented
Func cost 105 for neoscrypt has been optimized for exit cost!
Storing cost of neoscrypt() : 238

Instrumenting loops (self loop count: 4, sese loop count: 0) for function neoscrypt

Loops scheduled for transform for neoscrypt:- 
Self Loop: Loop at depth 1 containing: %for.body48<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body90<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body74<header><latch><exiting>



neoscrypt(): Self loop Loop at depth 1 containing: %for.body48<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body48( neoscrypt() ). Self Loop cost: 111. Iterations: 36
Self loop is canonical. Going for special transformation with 36 iterations.
Attempting to transform self loop for.body48 of neoscrypt with 36 inner loop iterations --> Loop at depth 1 containing: %for.body48<header><latch><exiting>
Found local ind var:   %i.1226 = phi i32 [ 0, %for.body48.lr.ph ], [ %inc66, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i32 
User in header block to replace Phi:   %4 = add i32 36, %i.1226
Applied self loop transform on for.body48( neoscrypt() )

neoscrypt(): Transformed Self loop Loop at depth 1 containing: %for.body48<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


neoscrypt(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( neoscrypt() ). Self Loop cost: 110. Iterations: 36
Self loop is canonical. Going for special transformation with 36 iterations.
Attempting to transform self loop for.body of neoscrypt with 36 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %indvars.iv231 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next232, %selfLoopOptExitBlock2 ], mapping it to   %phiIVClone3 = phi i64 
User in header block to replace Phi:   %2 = add i64 36, %indvars.iv231
Applied self loop transform on for.body( neoscrypt() )

neoscrypt(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock1<header><latch><exiting>


neoscrypt(): Self loop Loop at depth 1 containing: %for.body90<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body90( neoscrypt() ). Self Loop cost: 111. Iterations: 36
Self loop is canonical. Going for special transformation with 36 iterations.
Attempting to transform self loop for.body90 of neoscrypt with 36 inner loop iterations --> Loop at depth 1 containing: %for.body90<header><latch><exiting>
Found local ind var:   %i.3222 = phi i32 [ 0, %for.body90.lr.ph ], [ %inc108, %selfLoopOptExitBlock8 ], mapping it to   %phiIVClone9 = phi i32 
User in header block to replace Phi:   %12 = add i32 36, %i.3222
Applied self loop transform on for.body90( neoscrypt() )

neoscrypt(): Transformed Self loop Loop at depth 1 containing: %for.body90<header>,%selfLoopOptBlock7,%selfLoopOptExitBlock8<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock7<header><latch><exiting>


neoscrypt(): Self loop Loop at depth 1 containing: %for.body74<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body74( neoscrypt() ). Self Loop cost: 110. Iterations: 36
Self loop is canonical. Going for special transformation with 36 iterations.
Attempting to transform self loop for.body74 of neoscrypt with 36 inner loop iterations --> Loop at depth 1 containing: %for.body74<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ 0, %for.body74.preheader ], [ %indvars.iv.next, %selfLoopOptExitBlock15 ], mapping it to   %phiIVClone16 = phi i64 
User in header block to replace Phi:   %10 = add i64 36, %indvars.iv
Applied self loop transform on for.body74( neoscrypt() )

neoscrypt(): Transformed Self loop Loop at depth 1 containing: %for.body74<header>,%selfLoopOptBlock14,%selfLoopOptExitBlock15<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock14<header><latch><exiting>

neoscrypt_blkmix(): Transformed branch between for.body.lr.ph and for.cond83.preheader in the forward direction
neoscrypt_blkmix(): Transformed branch between if.then and cleanup in the forward direction
neoscrypt_blkmix(): Transformed branch between for.cond83.preheader and cleanup in the forward direction
neoscrypt_blkmix(): Transformed branch between for.cond95.preheader and cleanup_dummy1 in the forward direction
neoscrypt_blkmix(): Checking if simple for Loop Loop at depth 1 containing: %for.body.us<header>,%if.then53.us,%if.else59.us,%if.end66.us<latch><exiting>
. Latch: if.end66.us, Exiting block: if.end66.us
neoscrypt_blkmix(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then53,%if.else59,%if.end66<latch><exiting>
. Latch: if.end66, Exiting block: if.end66
neoscrypt_blkmix(): Checking if simple for Loop Loop at depth 1 containing: %for.body85<header><latch><exiting>
. Latch: for.body85, Exiting block: for.body85
neoscrypt_blkmix(): Checking if simple for Loop Loop at depth 1 containing: %for.body97<header><latch><exiting>
. Latch: for.body97, Exiting block: for.body97
Has backedges: (+ -1 (* 2 (zext (ARG: 2) i64) ) ) (numCost: -1)
Instrumenting loop with body cost: 318
Non-header-colocated-exit loop will be transformed, & body cost is 318 for loop with header for.body
Has backedges: (+ -1 (* 2 (zext (ARG: 2) i64) ) ) (numCost: -1)
Instrumenting loop with body cost: 318
Non-header-colocated-exit loop will be transformed, & body cost is 318 for loop with header for.body.us
Has backedges: (+ -1 (zext (ARG: 2) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 112, preheader cost: 17
Self loop will be transformed, & body cost is 112 for loop Loop at depth 1 containing: %for.body85<header><latch><exiting>

Has backedges: (+ -1 (zext (ARG: 2) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 115, preheader cost: 20
Self loop will be transformed, & body cost is 115 for loop Loop at depth 1 containing: %for.body97<header><latch><exiting>

Func cost 1 for neoscrypt_blkmix has been optimized for entry cost!
Storing cost of neoscrypt_blkmix() : 1

Instrumenting loops (self loop count: 2, sese loop count: 2) for function neoscrypt_blkmix

Loops scheduled for transform for neoscrypt_blkmix:- 
Self Loop: Loop at depth 1 containing: %for.body97<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body85<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body.us<header>,%if.then53.us,%if.else59.us,%if.end66.us<latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body<header>,%if.then53,%if.else59,%if.end66<latch><exiting>



neoscrypt_blkmix(): Self loop Loop at depth 1 containing: %for.body97<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body97( neoscrypt_blkmix() ). Self Loop cost: 115. Iterations: 34
Self loop is canonical. Going for special transformation with 34 iterations.
Attempting to transform self loop for.body97 of neoscrypt_blkmix with 34 inner loop iterations --> Loop at depth 1 containing: %for.body97<header><latch><exiting>
Found local ind var:   %indvars.iv = phi i64 [ 0, %for.body97.preheader ], [ %indvars.iv.next, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %24 = add i64 34, %indvars.iv
Applied self loop transform on for.body97( neoscrypt_blkmix() )

neoscrypt_blkmix(): Transformed Self loop Loop at depth 1 containing: %for.body97<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


neoscrypt_blkmix(): Self loop Loop at depth 1 containing: %for.body85<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body85( neoscrypt_blkmix() ). Self Loop cost: 112. Iterations: 35
Self loop is canonical. Going for special transformation with 35 iterations.
Attempting to transform self loop for.body85 of neoscrypt_blkmix with 35 inner loop iterations --> Loop at depth 1 containing: %for.body85<header><latch><exiting>
Found local ind var:   %indvars.iv188 = phi i64 [ 0, %for.body85.preheader ], [ %indvars.iv.next189, %selfLoopOptExitBlock3 ], mapping it to   %phiIVClone4 = phi i64 
User in header block to replace Phi:   %22 = add i64 35, %indvars.iv188
Applied self loop transform on for.body85( neoscrypt_blkmix() )

neoscrypt_blkmix(): Transformed Self loop Loop at depth 1 containing: %for.body85<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock2<header><latch><exiting>


neoscrypt_blkmix(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.then53,%if.else59,%if.end66<latch><exiting>


This seseloop will be transformed & instrumented --> for.body( neoscrypt_blkmix() ). SESE Loop cost: 318. Iterations: 12
Found local ind var:   %indvars.iv196 = phi i64 [ %indvars.iv.next197, %seseLoopOptHNCExitBlock ], [ 0, %for.body.preheader ], mapping it to   %phiIVClone8 = phi i64 
User in header block to replace Phi:   %17 = add i64 12, %indvars.iv196
Applied sese loop transform on for.body( neoscrypt_blkmix() )

neoscrypt_blkmix(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.then53,%if.else59,%if.end66,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%if.else59,%if.end66<latch><exiting>,%if.then53


neoscrypt_blkmix(): Max depth loop Loop at depth 1 containing: %for.body.us<header>,%if.then53.us,%if.else59.us,%if.end66.us<latch><exiting>


This seseloop will be transformed & instrumented --> for.body.us( neoscrypt_blkmix() ). SESE Loop cost: 318. Iterations: 12
Found local ind var:   %indvars.iv192 = phi i64 [ %indvars.iv.next193, %seseLoopOptHNCExitBlock12 ], [ 0, %for.body.us.preheader ], mapping it to   %phiIVClone13 = phi i64 
User in header block to replace Phi:   %2 = add i64 12, %indvars.iv192
Applied sese loop transform on for.body.us( neoscrypt_blkmix() )

neoscrypt_blkmix(): Transformed loop Loop at depth 1 containing: %for.body.us<header>,%if.then53.us,%if.else59.us,%if.end66.us,%seseLoopOptBlock11,%seseLoopOptHNCExitBlock12<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock11<header>,%if.else59.us,%if.end66.us<latch><exiting>,%if.then53.us

neoscrypt_fastkdf(): Transformed branch between for.body21.lr.ph.split.us and for.end28 in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.end.i225 and if.end37 in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i228 and if.end37_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.preheader.i2.i and for.end.i11.i in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i13.i and if.end.i in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i.i and neoscrypt_blake2s.exit in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.preheader.i150 and for.end.i159 in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.i156.for.body.i156_crit_edge.lr.ph and for.end.i159_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.i156.for.body.i156_crit_edge.prol.loopexit and for.end.i159_dummy_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.end.i159 and if.end70 in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i162 and if.end70_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body10.preheader.i164 and if.end70_dummy_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body10.i170.prol.loopexit and if.end70_dummy_dummy_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.preheader.i126 and for.end.i135 in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.end.i135 and for.inc80 in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i138 and for.inc80_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body10.preheader.i140 and for.inc80_dummy_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.preheader.i100 and for.end.i110 in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.i107.prol.loopexit and for.end.i110_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i113 and neoscrypt_xor.exit123 in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body10.preheader.i115 and neoscrypt_xor.exit123_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body10.i122.prol.loopexit and neoscrypt_xor.exit123_dummy_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.end.i85 and if.end111 in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i88 and if.end111_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.preheader.i50 and for.end.i60 in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.i57.prol.loopexit and for.end.i60_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i63 and neoscrypt_xor.exit73 in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body10.preheader.i65 and neoscrypt_xor.exit73_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body10.i72.prol.loopexit and neoscrypt_xor.exit73_dummy_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.preheader.i32 and for.end.i38 in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body.i35.prol.loopexit and for.end.i38_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i40 and neoscrypt_xor.exit in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body10.preheader.i42 and neoscrypt_xor.exit_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.body10.i47.prol.loopexit and neoscrypt_xor.exit_dummy_dummy in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i22 and neoscrypt_copy.exit31 in the forward direction
neoscrypt_fastkdf(): Transformed branch between for.end.i and if.end111 in the forward direction
neoscrypt_fastkdf(): Transformed branch between if.then.i and if.end111_dummy1 in the forward direction
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body21.us<header>,%for.body10.i261.us.preheader,%neoscrypt_copy.exit263.us<latch><exiting>
. Latch: neoscrypt_copy.exit263.us, Exiting block: neoscrypt_copy.exit263.us
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body21<header>,%for.body10.i261.preheader,%neoscrypt_copy.exit263<latch><exiting>
. Latch: neoscrypt_copy.exit263, Exiting block: neoscrypt_copy.exit263
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %vector.body457<header><latch><exiting>
. Latch: vector.body457, Exiting block: vector.body457
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
. Latch: for.body.i8.i, Exiting block: for.body.i8.i
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %vector.body434<header><latch><exiting>
. Latch: vector.body434, Exiting block: vector.body434
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
. Latch: for.body10.i.i, Exiting block: for.body10.i.i
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %vector.body397<header><latch><exiting>
. Latch: vector.body397, Exiting block: vector.body397
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
. Latch: for.body.i156.for.body.i156_crit_edge.prol, Exiting block: for.body.i156.for.body.i156_crit_edge.prol
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
. Latch: for.body.i156.for.body.i156_crit_edge, Exiting block: for.body.i156.for.body.i156_crit_edge
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %vector.body365<header><latch><exiting>
. Latch: vector.body365, Exiting block: vector.body365
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
. Latch: for.body10.i170.prol, Exiting block: for.body10.i170.prol
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
. Latch: for.body10.i170, Exiting block: for.body10.i170
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %vector.body344<header><latch><exiting>
. Latch: vector.body344, Exiting block: vector.body344
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
. Latch: for.body.i132, Exiting block: for.body.i132
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %vector.body<header><latch><exiting>
. Latch: vector.body, Exiting block: vector.body
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.body10.i146, Exiting block: for.body10.i146
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %vector.body478<header><latch><exiting>
. Latch: vector.body478, Exiting block: vector.body478
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i107.prol<header><latch><exiting>
. Latch: for.body.i107.prol, Exiting block: for.body.i107.prol
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i107<header><latch><exiting>
. Latch: for.body.i107, Exiting block: for.body.i107
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %vector.body512<header><latch><exiting>
. Latch: vector.body512, Exiting block: vector.body512
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body10.i122.prol<header><latch><exiting>
. Latch: for.body10.i122.prol, Exiting block: for.body10.i122.prol
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body10.i122<header><latch><exiting>
. Latch: for.body10.i122, Exiting block: for.body10.i122
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %vector.body549<header><latch><exiting>
. Latch: vector.body549, Exiting block: vector.body549
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i57.prol<header><latch><exiting>
. Latch: for.body.i57.prol, Exiting block: for.body.i57.prol
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i57<header><latch><exiting>
. Latch: for.body.i57, Exiting block: for.body.i57
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %vector.body583<header><latch><exiting>
. Latch: vector.body583, Exiting block: vector.body583
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body10.i72.prol<header><latch><exiting>
. Latch: for.body10.i72.prol, Exiting block: for.body10.i72.prol
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body10.i72<header><latch><exiting>
. Latch: for.body10.i72, Exiting block: for.body10.i72
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %vector.body620<header><latch><exiting>
. Latch: vector.body620, Exiting block: vector.body620
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i35.prol<header><latch><exiting>
. Latch: for.body.i35.prol, Exiting block: for.body.i35.prol
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i35<header><latch><exiting>
. Latch: for.body.i35, Exiting block: for.body.i35
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %vector.body655<header><latch><exiting>
. Latch: vector.body655, Exiting block: vector.body655
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body10.i47.prol<header><latch><exiting>
. Latch: for.body10.i47.prol, Exiting block: for.body10.i47.prol
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body10.i47<header><latch><exiting>
. Latch: for.body10.i47, Exiting block: for.body10.i47
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
neoscrypt_fastkdf(): Checking if simple for Loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy
    Loop at depth 2 containing: %vector.body457<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
. Latch: for.inc80, Exiting block: for.inc80
manageDanglingLCCs(inverted V shape): Removing cost 8 of for.end82
manageDanglingLCCs(inverted V shape): Adding pred cost 8 of for.end82 to successor if.then90
manageDanglingLCCs(inverted V shape): Adding pred cost 8 of for.end82 to successor if.else
Pred cost for for.end.i11.i_dummy is 1
Pred cost for for.end.i159_dummy_dummy is 1
Pred cost for for.end.i159_dummy is 1
Pred cost for if.end70_dummy_dummy_dummy is 1
Pred cost for if.end70_dummy_dummy is 1
Pred cost for for.end.i135_dummy is 1
Pred cost for for.inc80_dummy_dummy_dummy is 1
Pred cost for for.inc80_dummy_dummy is 1
Pred cost for for.inc80_dummy is 1
Pred cost for for.end.i110_dummy is 1
Pred cost for neoscrypt_xor.exit123_dummy_dummy is 1
Pred cost for for.end.i60_dummy is 1
Pred cost for neoscrypt_xor.exit73_dummy_dummy is 1
Pred cost for neoscrypt_xor.exit73_dummy is 1
Pred cost for for.end.i38_dummy is 1
Pred cost for neoscrypt_xor.exit_dummy_dummy is 1
Direct branch from for.body21.us needs to be instrumented
Instrumenting loop with body cost: 3
Non-header-colocated-exit loop will be transformed, & body cost is 3 for loop with header for.body21.us
Direct branch from for.body21 needs to be instrumented
Instrumenting loop with body cost: 3
Non-header-colocated-exit loop will be transformed, & body cost is 3 for loop with header for.body21
Direct branch from if.then32 needs to be instrumented
Direct branch from if.then.i228 needs to be instrumented
Direct branch from for.end28 needs to be instrumented
Func cost 135 for neoscrypt_fastkdf has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 53, preheader cost: 9
Self loop will be transformed, & body cost is 53 for loop Loop at depth 2 containing: %vector.body457<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 1
Self loop will be transformed, & body cost is 7 for loop Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 55, preheader cost: 10
Self loop will be transformed, & body cost is 55 for loop Loop at depth 2 containing: %vector.body434<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 1
Self loop will be transformed, & body cost is 7 for loop Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>

Direct branch from if.end.i needs to be instrumented
Direct branch from if.then.i.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 54, preheader cost: 10
Self loop will be transformed, & body cost is 54 for loop Loop at depth 2 containing: %vector.body397<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 8, preheader cost: 7
Self loop will be transformed, & body cost is 8 for loop Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 22, preheader cost: 10
Self loop will be transformed, & body cost is 22 for loop Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 55, preheader cost: 10
Self loop will be transformed, & body cost is 55 for loop Loop at depth 2 containing: %vector.body365<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 8, preheader cost: 7
Self loop will be transformed, & body cost is 8 for loop Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 22, preheader cost: 10
Self loop will be transformed, & body cost is 22 for loop Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 53, preheader cost: 9
Self loop will be transformed, & body cost is 53 for loop Loop at depth 2 containing: %vector.body344<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 1
Self loop will be transformed, & body cost is 7 for loop Loop at depth 2 containing: %for.body.i132<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 55, preheader cost: 10
Self loop will be transformed, & body cost is 55 for loop Loop at depth 2 containing: %vector.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 7, preheader cost: 1
Self loop will be transformed, & body cost is 7 for loop Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 39, preheader cost: 2
Self loop will be transformed, & body cost is 39 for loop Loop at depth 1 containing: %vector.body478<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 6
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body.i107.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 30, preheader cost: 9
Self loop will be transformed, & body cost is 30 for loop Loop at depth 1 containing: %for.body.i107<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 40, preheader cost: 2
Self loop will be transformed, & body cost is 40 for loop Loop at depth 1 containing: %vector.body512<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 7
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body10.i122.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 30, preheader cost: 10
Self loop will be transformed, & body cost is 30 for loop Loop at depth 1 containing: %for.body10.i122<header><latch><exiting>

Direct branch from neoscrypt_xor.exit123 needs to be instrumented
Direct branch from if.then.i88 needs to be instrumented
Self loop:- #backedges: 0, body cost: 39, preheader cost: 2
Self loop will be transformed, & body cost is 39 for loop Loop at depth 1 containing: %vector.body549<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 6
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body.i57.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 30, preheader cost: 9
Self loop will be transformed, & body cost is 30 for loop Loop at depth 1 containing: %for.body.i57<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 40, preheader cost: 2
Self loop will be transformed, & body cost is 40 for loop Loop at depth 1 containing: %vector.body583<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 7
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body10.i72.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 30, preheader cost: 10
Self loop will be transformed, & body cost is 30 for loop Loop at depth 1 containing: %for.body10.i72<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 39, preheader cost: 2
Self loop will be transformed, & body cost is 39 for loop Loop at depth 1 containing: %vector.body620<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 6
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body.i35.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 30, preheader cost: 9
Self loop will be transformed, & body cost is 30 for loop Loop at depth 1 containing: %for.body.i35<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 40, preheader cost: 2
Self loop will be transformed, & body cost is 40 for loop Loop at depth 1 containing: %vector.body655<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 10, preheader cost: 7
Self loop will be transformed, & body cost is 10 for loop Loop at depth 1 containing: %for.body10.i47.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 30, preheader cost: 10
Self loop will be transformed, & body cost is 30 for loop Loop at depth 1 containing: %for.body10.i47<header><latch><exiting>

Direct branch from neoscrypt_xor.exit needs to be instrumented
Direct branch from if.then.i22 needs to be instrumented
Direct branch from neoscrypt_copy.exit31 needs to be instrumented
Direct branch from if.then.i needs to be instrumented
Func cost 102 for neoscrypt_fastkdf has been optimized for exit cost!
Storing cost of neoscrypt_fastkdf() : 237

Instrumenting loops (self loop count: 32, sese loop count: 2) for function neoscrypt_fastkdf

Loops scheduled for transform for neoscrypt_fastkdf:- 
Self Loop: Loop at depth 1 containing: %for.body10.i122.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body512<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i107<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i107.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body478<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %vector.body434<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %vector.body457<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %vector.body365<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %vector.body397<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %vector.body<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body.i132<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %vector.body344<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body10.i47<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body10.i47.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body655<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i35<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i35.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body620<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body10.i72<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body10.i72.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body583<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i57<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body.i57.prol<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %vector.body549<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body10.i122<header><latch><exiting>

Sese Loop: Loop at depth 1 containing: %for.body21<header>,%for.body10.i261.preheader,%neoscrypt_copy.exit263<latch><exiting>,%for.body21DirectSucc

Sese Loop: Loop at depth 1 containing: %for.body21.us<header>,%for.body10.i261.us.preheader,%neoscrypt_copy.exit263.us<latch><exiting>,%for.body21.usDirectSucc



neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body10.i122.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i122.prol( neoscrypt_fastkdf() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body10.i122.prol of neoscrypt_fastkdf with 400 inner loop iterations --> Loop at depth 1 containing: %for.body10.i122.prol<header><latch><exiting>
Found local ind var:   %prol.iter712 = phi i64 [ %prol.iter712.sub, %selfLoopOptExitBlock ], [ %xtraiter710, %for.body10.i122.prol.preheader ], mapping it to   %phiIVClone2 = phi i64 
User in header block to replace Phi:   %487 = add i64 -400, %prol.iter712
Applied self loop transform on for.body10.i122.prol( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body10.i122.prol<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %vector.body512<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body512( neoscrypt_fastkdf() ). Self Loop cost: 40. Iterations: 100
Self loop is not canonical. Going for generic transformation with 100 iterations.
Attempting to transform self loop vector.body512 of neoscrypt_fastkdf with 100 inner loop iterations --> Loop at depth 1 containing: %vector.body512<header><latch><exiting>
Found local ind var:   %index529 = phi i64 [ 0, %vector.ph526 ], [ %index.next530, %selfLoopOptExitBlock4 ], mapping it to   %phiIVClone5 = phi i64 
User in header block to replace Phi:   %459 = add i64 12800, %index529
Applied self loop transform on vector.body512( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %vector.body512<header>,%selfLoopOptBlock3,%selfLoopOptExitBlock4<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock3<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body.i107<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i107( neoscrypt_fastkdf() ). Self Loop cost: 30. Iterations: 133
Self loop is not canonical. Going for generic transformation with 133 iterations.
Attempting to transform self loop for.body.i107 of neoscrypt_fastkdf with 133 inner loop iterations --> Loop at depth 1 containing: %for.body.i107<header><latch><exiting>
Found local ind var:   %indvars.iv47.i101 = phi i64 [ %indvars.iv.next48.i105.3, %selfLoopOptExitBlock11 ], [ %indvars.iv47.i101.unr, %for.body.i107.preheader6 ], mapping it to   %phiIVClone12 = phi i64 
User in header block to replace Phi:   %447 = add i64 532, %indvars.iv47.i101
Applied self loop transform on for.body.i107( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body.i107<header>,%selfLoopOptBlock10,%selfLoopOptExitBlock11<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock10<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body.i107.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i107.prol( neoscrypt_fastkdf() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body.i107.prol of neoscrypt_fastkdf with 400 inner loop iterations --> Loop at depth 1 containing: %for.body.i107.prol<header><latch><exiting>
Found local ind var:   %prol.iter715 = phi i64 [ %prol.iter715.sub, %selfLoopOptExitBlock18 ], [ %xtraiter713, %for.body.i107.prol.preheader ], mapping it to   %phiIVClone20 = phi i64 
User in header block to replace Phi:   %444 = add i64 -400, %prol.iter715
Applied self loop transform on for.body.i107.prol( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body.i107.prol<header>,%selfLoopOptBlock17,%selfLoopOptExitBlock18<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock17<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %vector.body478<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body478( neoscrypt_fastkdf() ). Self Loop cost: 39. Iterations: 102
Self loop is not canonical. Going for generic transformation with 102 iterations.
Attempting to transform self loop vector.body478 of neoscrypt_fastkdf with 102 inner loop iterations --> Loop at depth 1 containing: %vector.body478<header><latch><exiting>
Found local ind var:   %index494 = phi i64 [ 0, %vector.ph491 ], [ %index.next495, %selfLoopOptExitBlock26 ], mapping it to   %phiIVClone27 = phi i64 
User in header block to replace Phi:   %417 = add i64 1632, %index494
Applied self loop transform on vector.body478( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %vector.body478<header>,%selfLoopOptBlock25,%selfLoopOptExitBlock26<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock25<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i.i( neoscrypt_fastkdf() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop for.body10.i.i of neoscrypt_fastkdf with 571 inner loop iterations --> Loop at depth 2 containing: %for.body10.i.i<header><latch><exiting>
Found local ind var:   %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %selfLoopOptExitBlock33 ], [ %indvars.iv.i.i.ph, %for.body10.i.i.preheader ], mapping it to   %phiIVClone34 = phi i64 
User in header block to replace Phi:   %148 = add i64 571, %indvars.iv.i.i
Applied self loop transform on for.body10.i.i( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %for.body10.i.i<header>,%selfLoopOptBlock32,%selfLoopOptExitBlock33<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock32<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %vector.body434<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body434( neoscrypt_fastkdf() ). Self Loop cost: 55. Iterations: 72
Self loop is not canonical. Going for generic transformation with 72 iterations.
Attempting to transform self loop vector.body434 of neoscrypt_fastkdf with 72 inner loop iterations --> Loop at depth 2 containing: %vector.body434<header><latch><exiting>
Found local ind var:   %niter721 = phi i64 [ %unroll_iter720, %vector.ph438.new ], [ %niter721.nsub.1, %selfLoopOptExitBlock40 ], mapping it to   %phiIVClone42 = phi i64 
User in header block to replace Phi:   %100 = add i64 -144, %niter721
Applied self loop transform on vector.body434( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %vector.body434<header>,%selfLoopOptBlock39,%selfLoopOptExitBlock40<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock39<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i8.i( neoscrypt_fastkdf() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop for.body.i8.i of neoscrypt_fastkdf with 571 inner loop iterations --> Loop at depth 2 containing: %for.body.i8.i<header><latch><exiting>
Found local ind var:   %indvars.iv42.i3.i = phi i64 [ %indvars.iv.next43.i6.i, %selfLoopOptExitBlock48 ], [ %indvars.iv42.i3.i.ph, %for.body.i8.i.preheader ], mapping it to   %phiIVClone49 = phi i64 
User in header block to replace Phi:   %93 = add i64 571, %indvars.iv42.i3.i
Applied self loop transform on for.body.i8.i( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %for.body.i8.i<header>,%selfLoopOptBlock47,%selfLoopOptExitBlock48<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock47<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %vector.body457<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body457( neoscrypt_fastkdf() ). Self Loop cost: 53. Iterations: 75
Self loop is not canonical. Going for generic transformation with 75 iterations.
Attempting to transform self loop vector.body457 of neoscrypt_fastkdf with 75 inner loop iterations --> Loop at depth 2 containing: %vector.body457<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %vector.ph461.new ], [ %niter.nsub.1, %selfLoopOptExitBlock55 ], mapping it to   %phiIVClone57 = phi i64 
User in header block to replace Phi:   %45 = add i64 -150, %niter
Applied self loop transform on vector.body457( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %vector.body457<header>,%selfLoopOptBlock54,%selfLoopOptExitBlock55<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock54<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i170( neoscrypt_fastkdf() ). Self Loop cost: 22. Iterations: 181
Self loop is not canonical. Going for generic transformation with 181 iterations.
Attempting to transform self loop for.body10.i170 of neoscrypt_fastkdf with 181 inner loop iterations --> Loop at depth 2 containing: %for.body10.i170<header><latch><exiting>
Found local ind var:   %indvars.iv.i165 = phi i64 [ %indvars.iv.next.i168.3, %selfLoopOptExitBlock63 ], [ %indvars.iv.i165.unr, %for.body10.i170.preheader7 ], mapping it to   %phiIVClone64 = phi i64 
User in header block to replace Phi:   %305 = add i64 724, %indvars.iv.i165
Applied self loop transform on for.body10.i170( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %for.body10.i170<header>,%selfLoopOptBlock62,%selfLoopOptExitBlock63<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock62<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i170.prol( neoscrypt_fastkdf() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Attempting to transform self loop for.body10.i170.prol of neoscrypt_fastkdf with 500 inner loop iterations --> Loop at depth 2 containing: %for.body10.i170.prol<header><latch><exiting>
Found local ind var:   %prol.iter735 = phi i64 [ %prol.iter735.sub, %selfLoopOptExitBlock70 ], [ %xtraiter733, %for.body10.i170.prol.preheader ], mapping it to   %phiIVClone72 = phi i64 
User in header block to replace Phi:   %303 = add i64 -500, %prol.iter735
Applied self loop transform on for.body10.i170.prol( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %for.body10.i170.prol<header>,%selfLoopOptBlock69,%selfLoopOptExitBlock70<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock69<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %vector.body365<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body365( neoscrypt_fastkdf() ). Self Loop cost: 55. Iterations: 72
Self loop is not canonical. Going for generic transformation with 72 iterations.
Attempting to transform self loop vector.body365 of neoscrypt_fastkdf with 72 inner loop iterations --> Loop at depth 2 containing: %vector.body365<header><latch><exiting>
Found local ind var:   %niter732 = phi i64 [ %unroll_iter731, %vector.ph378.new ], [ %niter732.nsub.1, %selfLoopOptExitBlock78 ], mapping it to   %phiIVClone80 = phi i64 
User in header block to replace Phi:   %252 = add i64 -144, %niter732
Applied self loop transform on vector.body365( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %vector.body365<header>,%selfLoopOptBlock77,%selfLoopOptExitBlock78<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock77<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i156.for.body.i156_crit_edge( neoscrypt_fastkdf() ). Self Loop cost: 22. Iterations: 181
Self loop is not canonical. Going for generic transformation with 181 iterations.
Attempting to transform self loop for.body.i156.for.body.i156_crit_edge of neoscrypt_fastkdf with 181 inner loop iterations --> Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header><latch><exiting>
Found local ind var:   %indvars.iv.next43.i154337 = phi i64 [ %indvars.iv.next43.i154.3, %selfLoopOptExitBlock86 ], [ %indvars.iv.next43.i154337.unr, %for.body.i156.for.body.i156_crit_edge.preheader8 ], mapping it to   %phiIVClone87 = phi i64 
User in header block to replace Phi:   %242 = add i64 724, %indvars.iv.next43.i154337
Applied self loop transform on for.body.i156.for.body.i156_crit_edge( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header>,%selfLoopOptBlock85,%selfLoopOptExitBlock86<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock85<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i156.for.body.i156_crit_edge.prol( neoscrypt_fastkdf() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Attempting to transform self loop for.body.i156.for.body.i156_crit_edge.prol of neoscrypt_fastkdf with 500 inner loop iterations --> Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header><latch><exiting>
Found local ind var:   %prol.iter728 = phi i64 [ %prol.iter728.sub, %selfLoopOptExitBlock93 ], [ %xtraiter726, %for.body.i156.for.body.i156_crit_edge.prol.preheader ], mapping it to   %phiIVClone95 = phi i64 
User in header block to replace Phi:   %241 = add i64 -500, %prol.iter728
Applied self loop transform on for.body.i156.for.body.i156_crit_edge.prol( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header>,%selfLoopOptBlock92,%selfLoopOptExitBlock93<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock92<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %vector.body397<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body397( neoscrypt_fastkdf() ). Self Loop cost: 54. Iterations: 74
Self loop is not canonical. Going for generic transformation with 74 iterations.
Attempting to transform self loop vector.body397 of neoscrypt_fastkdf with 74 inner loop iterations --> Loop at depth 2 containing: %vector.body397<header><latch><exiting>
Found local ind var:   %niter725 = phi i64 [ %unroll_iter724, %vector.ph415.new ], [ %niter725.nsub.1, %selfLoopOptExitBlock101 ], mapping it to   %phiIVClone103 = phi i64 
User in header block to replace Phi:   %190 = add i64 -148, %niter725
Applied self loop transform on vector.body397( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %vector.body397<header>,%selfLoopOptBlock100,%selfLoopOptExitBlock101<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock100<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i146( neoscrypt_fastkdf() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop for.body10.i146 of neoscrypt_fastkdf with 571 inner loop iterations --> Loop at depth 2 containing: %for.body10.i146<header><latch><exiting>
Found local ind var:   %indvars.iv.i141 = phi i64 [ %indvars.iv.next.i144, %selfLoopOptExitBlock109 ], [ %indvars.iv.i141.ph, %for.body10.i146.preheader ], mapping it to   %phiIVClone110 = phi i64 
User in header block to replace Phi:   %429 = add i64 571, %indvars.iv.i141
Applied self loop transform on for.body10.i146( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %for.body10.i146<header>,%selfLoopOptBlock108,%selfLoopOptExitBlock109<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock108<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %vector.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body( neoscrypt_fastkdf() ). Self Loop cost: 55. Iterations: 72
Self loop is not canonical. Going for generic transformation with 72 iterations.
Attempting to transform self loop vector.body of neoscrypt_fastkdf with 72 inner loop iterations --> Loop at depth 2 containing: %vector.body<header><latch><exiting>
Found local ind var:   %niter743 = phi i64 [ %unroll_iter742, %vector.ph.new ], [ %niter743.nsub.1, %selfLoopOptExitBlock116 ], mapping it to   %phiIVClone118 = phi i64 
User in header block to replace Phi:   %381 = add i64 -144, %niter743
Applied self loop transform on vector.body( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock115,%selfLoopOptExitBlock116<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock115<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %for.body.i132<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i132( neoscrypt_fastkdf() ). Self Loop cost: 7. Iterations: 571
Self loop is not canonical. Going for generic transformation with 571 iterations.
Attempting to transform self loop for.body.i132 of neoscrypt_fastkdf with 571 inner loop iterations --> Loop at depth 2 containing: %for.body.i132<header><latch><exiting>
Found local ind var:   %indvars.iv42.i127 = phi i64 [ %indvars.iv.next43.i130, %selfLoopOptExitBlock124 ], [ %indvars.iv42.i127.ph, %for.body.i132.preheader ], mapping it to   %phiIVClone125 = phi i64 
User in header block to replace Phi:   %374 = add i64 571, %indvars.iv42.i127
Applied self loop transform on for.body.i132( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %for.body.i132<header>,%selfLoopOptBlock123,%selfLoopOptExitBlock124<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock123<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 2 containing: %vector.body344<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body344( neoscrypt_fastkdf() ). Self Loop cost: 53. Iterations: 75
Self loop is not canonical. Going for generic transformation with 75 iterations.
Attempting to transform self loop vector.body344 of neoscrypt_fastkdf with 75 inner loop iterations --> Loop at depth 2 containing: %vector.body344<header><latch><exiting>
Found local ind var:   %niter739 = phi i64 [ %unroll_iter738, %vector.ph348.new ], [ %niter739.nsub.1, %selfLoopOptExitBlock131 ], mapping it to   %phiIVClone133 = phi i64 
User in header block to replace Phi:   %326 = add i64 -150, %niter739
Applied self loop transform on vector.body344( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 2 containing: %vector.body344<header>,%selfLoopOptBlock130,%selfLoopOptExitBlock131<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock130<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body10.i47<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i47( neoscrypt_fastkdf() ). Self Loop cost: 30. Iterations: 133
Self loop is not canonical. Going for generic transformation with 133 iterations.
Attempting to transform self loop for.body10.i47 of neoscrypt_fastkdf with 133 inner loop iterations --> Loop at depth 1 containing: %for.body10.i47<header><latch><exiting>
Found local ind var:   %indvars.iv.i43 = phi i64 [ %indvars.iv.next.i45.3, %selfLoopOptExitBlock139 ], [ %indvars.iv.i43.unr, %for.body10.i47.preheader1 ], mapping it to   %phiIVClone140 = phi i64 
User in header block to replace Phi:   %713 = add i64 532, %indvars.iv.i43
Applied self loop transform on for.body10.i47( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body10.i47<header>,%selfLoopOptBlock138,%selfLoopOptExitBlock139<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock138<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body10.i47.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i47.prol( neoscrypt_fastkdf() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body10.i47.prol of neoscrypt_fastkdf with 400 inner loop iterations --> Loop at depth 1 containing: %for.body10.i47.prol<header><latch><exiting>
Found local ind var:   %prol.iter = phi i64 [ %prol.iter.sub, %selfLoopOptExitBlock146 ], [ %xtraiter, %for.body10.i47.prol.preheader ], mapping it to   %phiIVClone148 = phi i64 
User in header block to replace Phi:   %710 = add i64 -400, %prol.iter
Applied self loop transform on for.body10.i47.prol( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body10.i47.prol<header>,%selfLoopOptBlock145,%selfLoopOptExitBlock146<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock145<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %vector.body655<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body655( neoscrypt_fastkdf() ). Self Loop cost: 40. Iterations: 100
Self loop is not canonical. Going for generic transformation with 100 iterations.
Attempting to transform self loop vector.body655 of neoscrypt_fastkdf with 100 inner loop iterations --> Loop at depth 1 containing: %vector.body655<header><latch><exiting>
Found local ind var:   %index672 = phi i64 [ 0, %vector.ph669 ], [ %index.next673, %selfLoopOptExitBlock154 ], mapping it to   %phiIVClone155 = phi i64 
User in header block to replace Phi:   %682 = add i64 12800, %index672
Applied self loop transform on vector.body655( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %vector.body655<header>,%selfLoopOptBlock153,%selfLoopOptExitBlock154<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock153<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body.i35<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i35( neoscrypt_fastkdf() ). Self Loop cost: 30. Iterations: 133
Self loop is not canonical. Going for generic transformation with 133 iterations.
Attempting to transform self loop for.body.i35 of neoscrypt_fastkdf with 133 inner loop iterations --> Loop at depth 1 containing: %for.body.i35<header><latch><exiting>
Found local ind var:   %indvars.iv47.i = phi i64 [ %indvars.iv.next48.i.3, %selfLoopOptExitBlock161 ], [ %indvars.iv47.i.unr, %for.body.i35.preheader2 ], mapping it to   %phiIVClone162 = phi i64 
User in header block to replace Phi:   %666 = add i64 532, %indvars.iv47.i
Applied self loop transform on for.body.i35( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body.i35<header>,%selfLoopOptBlock160,%selfLoopOptExitBlock161<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock160<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body.i35.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i35.prol( neoscrypt_fastkdf() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body.i35.prol of neoscrypt_fastkdf with 400 inner loop iterations --> Loop at depth 1 containing: %for.body.i35.prol<header><latch><exiting>
Found local ind var:   %prol.iter703 = phi i64 [ %prol.iter703.sub, %selfLoopOptExitBlock168 ], [ %xtraiter701, %for.body.i35.prol.preheader ], mapping it to   %phiIVClone170 = phi i64 
User in header block to replace Phi:   %663 = add i64 -400, %prol.iter703
Applied self loop transform on for.body.i35.prol( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body.i35.prol<header>,%selfLoopOptBlock167,%selfLoopOptExitBlock168<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock167<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %vector.body620<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body620( neoscrypt_fastkdf() ). Self Loop cost: 39. Iterations: 102
Self loop is not canonical. Going for generic transformation with 102 iterations.
Attempting to transform self loop vector.body620 of neoscrypt_fastkdf with 102 inner loop iterations --> Loop at depth 1 containing: %vector.body620<header><latch><exiting>
Found local ind var:   %index637 = phi i64 [ 0, %vector.ph634 ], [ %index.next638, %selfLoopOptExitBlock176 ], mapping it to   %phiIVClone177 = phi i64 
User in header block to replace Phi:   %636 = add i64 1632, %index637
Applied self loop transform on vector.body620( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %vector.body620<header>,%selfLoopOptBlock175,%selfLoopOptExitBlock176<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock175<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body10.i72<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i72( neoscrypt_fastkdf() ). Self Loop cost: 30. Iterations: 133
Self loop is not canonical. Going for generic transformation with 133 iterations.
Attempting to transform self loop for.body10.i72 of neoscrypt_fastkdf with 133 inner loop iterations --> Loop at depth 1 containing: %for.body10.i72<header><latch><exiting>
Found local ind var:   %indvars.iv.i66 = phi i64 [ %indvars.iv.next.i70.3, %selfLoopOptExitBlock183 ], [ %indvars.iv.i66.unr, %for.body10.i72.preheader3 ], mapping it to   %phiIVClone184 = phi i64 
User in header block to replace Phi:   %620 = add i64 532, %indvars.iv.i66
Applied self loop transform on for.body10.i72( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body10.i72<header>,%selfLoopOptBlock182,%selfLoopOptExitBlock183<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock182<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body10.i72.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i72.prol( neoscrypt_fastkdf() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body10.i72.prol of neoscrypt_fastkdf with 400 inner loop iterations --> Loop at depth 1 containing: %for.body10.i72.prol<header><latch><exiting>
Found local ind var:   %prol.iter706 = phi i64 [ %prol.iter706.sub, %selfLoopOptExitBlock190 ], [ %xtraiter704, %for.body10.i72.prol.preheader ], mapping it to   %phiIVClone192 = phi i64 
User in header block to replace Phi:   %617 = add i64 -400, %prol.iter706
Applied self loop transform on for.body10.i72.prol( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body10.i72.prol<header>,%selfLoopOptBlock189,%selfLoopOptExitBlock190<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock189<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %vector.body583<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body583( neoscrypt_fastkdf() ). Self Loop cost: 40. Iterations: 100
Self loop is not canonical. Going for generic transformation with 100 iterations.
Attempting to transform self loop vector.body583 of neoscrypt_fastkdf with 100 inner loop iterations --> Loop at depth 1 containing: %vector.body583<header><latch><exiting>
Found local ind var:   %index600 = phi i64 [ 0, %vector.ph597 ], [ %index.next601, %selfLoopOptExitBlock198 ], mapping it to   %phiIVClone199 = phi i64 
User in header block to replace Phi:   %589 = add i64 12800, %index600
Applied self loop transform on vector.body583( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %vector.body583<header>,%selfLoopOptBlock197,%selfLoopOptExitBlock198<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock197<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body.i57<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i57( neoscrypt_fastkdf() ). Self Loop cost: 30. Iterations: 133
Self loop is not canonical. Going for generic transformation with 133 iterations.
Attempting to transform self loop for.body.i57 of neoscrypt_fastkdf with 133 inner loop iterations --> Loop at depth 1 containing: %for.body.i57<header><latch><exiting>
Found local ind var:   %indvars.iv47.i51 = phi i64 [ %indvars.iv.next48.i55.3, %selfLoopOptExitBlock205 ], [ %indvars.iv47.i51.unr, %for.body.i57.preheader4 ], mapping it to   %phiIVClone206 = phi i64 
User in header block to replace Phi:   %577 = add i64 532, %indvars.iv47.i51
Applied self loop transform on for.body.i57( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body.i57<header>,%selfLoopOptBlock204,%selfLoopOptExitBlock205<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock204<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body.i57.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i57.prol( neoscrypt_fastkdf() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body.i57.prol of neoscrypt_fastkdf with 400 inner loop iterations --> Loop at depth 1 containing: %for.body.i57.prol<header><latch><exiting>
Found local ind var:   %prol.iter709 = phi i64 [ %prol.iter709.sub, %selfLoopOptExitBlock212 ], [ %xtraiter707, %for.body.i57.prol.preheader ], mapping it to   %phiIVClone214 = phi i64 
User in header block to replace Phi:   %574 = add i64 -400, %prol.iter709
Applied self loop transform on for.body.i57.prol( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body.i57.prol<header>,%selfLoopOptBlock211,%selfLoopOptExitBlock212<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock211<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %vector.body549<header><latch><exiting>


This selfloop will be transformed & instrumented --> vector.body549( neoscrypt_fastkdf() ). Self Loop cost: 39. Iterations: 102
Self loop is not canonical. Going for generic transformation with 102 iterations.
Attempting to transform self loop vector.body549 of neoscrypt_fastkdf with 102 inner loop iterations --> Loop at depth 1 containing: %vector.body549<header><latch><exiting>
Found local ind var:   %index565 = phi i64 [ 0, %vector.ph562 ], [ %index.next566, %selfLoopOptExitBlock220 ], mapping it to   %phiIVClone221 = phi i64 
User in header block to replace Phi:   %547 = add i64 1632, %index565
Applied self loop transform on vector.body549( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %vector.body549<header>,%selfLoopOptBlock219,%selfLoopOptExitBlock220<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock219<header><latch><exiting>


neoscrypt_fastkdf(): Self loop Loop at depth 1 containing: %for.body10.i122<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body10.i122( neoscrypt_fastkdf() ). Self Loop cost: 30. Iterations: 133
Self loop is not canonical. Going for generic transformation with 133 iterations.
Attempting to transform self loop for.body10.i122 of neoscrypt_fastkdf with 133 inner loop iterations --> Loop at depth 1 containing: %for.body10.i122<header><latch><exiting>
Found local ind var:   %indvars.iv.i116 = phi i64 [ %indvars.iv.next.i120.3, %selfLoopOptExitBlock227 ], [ %indvars.iv.i116.unr, %for.body10.i122.preheader5 ], mapping it to   %phiIVClone228 = phi i64 
User in header block to replace Phi:   %528 = add i64 532, %indvars.iv.i116
Applied self loop transform on for.body10.i122( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed Self loop Loop at depth 1 containing: %for.body10.i122<header>,%selfLoopOptBlock226,%selfLoopOptExitBlock227<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock226<header><latch><exiting>


neoscrypt_fastkdf(): Max depth loop Loop at depth 1 containing: %for.body21.us<header>,%for.body10.i261.us.preheader,%neoscrypt_copy.exit263.us<latch><exiting>,%for.body21.usDirectSucc


This seseloop will be transformed & instrumented --> for.body21.us( neoscrypt_fastkdf() ). SESE Loop cost: 3. Iterations: 1333
Found local ind var:   %indvars.iv = phi i64 [ 0, %for.body21.us.preheader ], [ %indvars.iv.next, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone233 = phi i64 
User in header block to replace Phi:   %11 = add i64 1333, %indvars.iv
Applied sese loop transform on for.body21.us( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed loop Loop at depth 1 containing: %for.body21.us<header>,%for.body10.i261.us.preheader,%neoscrypt_copy.exit263.us,%for.body21.usDirectSucc,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%neoscrypt_copy.exit263.us<latch><exiting>,%for.body21.usDirectSucc,%for.body10.i261.us.preheader


neoscrypt_fastkdf(): Max depth loop Loop at depth 1 containing: %for.body21<header>,%for.body10.i261.preheader,%neoscrypt_copy.exit263<latch><exiting>,%for.body21DirectSucc


This seseloop will be transformed & instrumented --> for.body21( neoscrypt_fastkdf() ). SESE Loop cost: 3. Iterations: 1333
Found local ind var:   %indvars.iv322 = phi i64 [ 0, %for.body21.preheader ], [ %indvars.iv.next323, %seseLoopOptHNCExitBlock237 ], mapping it to   %phiIVClone238 = phi i64 
User in header block to replace Phi:   %16 = add i64 1333, %indvars.iv322
Applied sese loop transform on for.body21( neoscrypt_fastkdf() )

neoscrypt_fastkdf(): Transformed loop Loop at depth 1 containing: %for.body21<header>,%for.body10.i261.preheader,%neoscrypt_copy.exit263,%for.body21DirectSucc,%seseLoopOptBlock236,%seseLoopOptHNCExitBlock237<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock236<header>,%neoscrypt_copy.exit263<latch><exiting>,%for.body21DirectSucc,%for.body10.i261.preheader


neoscrypt_fastkdf(): Max depth loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy,%if.end.iDirectSucc,%if.then.i.iDirectSucc,%selfLoopOptBlock32,%selfLoopOptExitBlock33,%selfLoopOptBlock39,%selfLoopOptExitBlock40,%selfLoopOptBlock47,%selfLoopOptExitBlock48,%selfLoopOptBlock54,%selfLoopOptExitBlock55,%selfLoopOptBlock62,%selfLoopOptExitBlock63,%selfLoopOptBlock69,%selfLoopOptExitBlock70,%selfLoopOptBlock77,%selfLoopOptExitBlock78,%selfLoopOptBlock85,%selfLoopOptExitBlock86,%selfLoopOptBlock92,%selfLoopOptExitBlock93,%selfLoopOptBlock100,%selfLoopOptExitBlock101,%selfLoopOptBlock108,%selfLoopOptExitBlock109,%selfLoopOptBlock115,%selfLoopOptExitBlock116,%selfLoopOptBlock123,%selfLoopOptExitBlock124,%selfLoopOptBlock130,%selfLoopOptExitBlock131
    Loop at depth 2 containing: %vector.body457<header>,%selfLoopOptBlock54,%selfLoopOptExitBlock55<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock54<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header>,%selfLoopOptBlock47,%selfLoopOptExitBlock48<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock47<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header>,%selfLoopOptBlock39,%selfLoopOptExitBlock40<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock39<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header>,%selfLoopOptBlock32,%selfLoopOptExitBlock33<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock32<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header>,%selfLoopOptBlock100,%selfLoopOptExitBlock101<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock100<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header>,%selfLoopOptBlock92,%selfLoopOptExitBlock93<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock92<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header>,%selfLoopOptBlock85,%selfLoopOptExitBlock86<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock85<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header>,%selfLoopOptBlock77,%selfLoopOptExitBlock78<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock77<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header>,%selfLoopOptBlock69,%selfLoopOptExitBlock70<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock69<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header>,%selfLoopOptBlock62,%selfLoopOptExitBlock63<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock62<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header>,%selfLoopOptBlock130,%selfLoopOptExitBlock131<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock130<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header>,%selfLoopOptBlock123,%selfLoopOptExitBlock124<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock123<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock115,%selfLoopOptExitBlock116<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock115<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header>,%selfLoopOptBlock108,%selfLoopOptExitBlock109<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock108<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body42

neoscrypt_fastkdf(): Transformed loop Loop at depth 1 containing: %for.body42<header>,%for.body.preheader.i2.i,%vector.ph461,%vector.ph461.new,%vector.body457,%middle.block458.unr-lcssa.loopexit,%middle.block458.unr-lcssa,%vector.body457.epil,%middle.block458,%for.body.i8.i.preheader,%for.body.i8.i,%for.end.i11.i.loopexit,%for.end.i11.i,%if.then.i13.i,%for.body10.preheader.i.i,%vector.ph438,%vector.ph438.new,%vector.body434,%middle.block435.unr-lcssa.loopexit,%middle.block435.unr-lcssa,%vector.body434.epil,%middle.block435,%for.body10.i.i.preheader,%for.body10.i.i,%if.end.loopexit.i.loopexit,%if.end.loopexit.i,%if.end.i,%for.body.preheader.i.i,%for.end.i.i,%if.then.i.i,%for.body8.preheader.i.i,%neoscrypt_blake2s.exit,%if.then60,%for.body.preheader.i150,%for.body.i156.for.body.i156_crit_edge.lr.ph,%vector.memcheck414,%vector.ph415,%vector.ph415.new,%vector.body397,%middle.block398.unr-lcssa.loopexit,%middle.block398.unr-lcssa,%vector.body397.epil,%middle.block398,%for.body.i156.for.body.i156_crit_edge.preheader,%for.body.i156.for.body.i156_crit_edge.prol.preheader,%for.body.i156.for.body.i156_crit_edge.prol,%for.body.i156.for.body.i156_crit_edge.prol.loopexit.loopexit,%for.body.i156.for.body.i156_crit_edge.prol.loopexit,%for.body.i156.for.body.i156_crit_edge.preheader8,%for.body.i156.for.body.i156_crit_edge,%for.end.i159.loopexit,%for.end.i159,%if.then.i162,%for.body10.preheader.i164,%vector.memcheck,%vector.ph378,%vector.ph378.new,%vector.body365,%middle.block366.unr-lcssa.loopexit,%middle.block366.unr-lcssa,%vector.body365.epil,%middle.block366,%for.body10.i170.preheader,%for.body10.i170.prol.preheader,%for.body10.i170.prol,%for.body10.i170.prol.loopexit.loopexit,%for.body10.i170.prol.loopexit,%for.body10.i170.preheader7,%for.body10.i170,%if.end70.loopexit,%if.end70,%if.then74,%for.body.preheader.i126,%vector.ph348,%vector.ph348.new,%vector.body344,%middle.block345.unr-lcssa.loopexit,%middle.block345.unr-lcssa,%vector.body344.epil,%middle.block345,%for.body.i132.preheader,%for.body.i132,%for.end.i135.loopexit,%for.end.i135,%if.then.i138,%for.body10.preheader.i140,%vector.ph,%vector.ph.new,%vector.body,%middle.block.unr-lcssa.loopexit,%middle.block.unr-lcssa,%vector.body.epil,%middle.block,%for.body10.i146.preheader,%for.body10.i146,%for.inc80.loopexit,%for.inc80<latch><exiting>,%for.end.i11.i_dummy,%if.end.i_dummy,%neoscrypt_blake2s.exit_dummy,%for.end.i159_dummy,%for.end.i159_dummy_dummy,%for.end.i159_dummy_dummy_dummy,%if.end70_dummy,%if.end70_dummy_dummy,%if.end70_dummy_dummy_dummy,%if.end70_dummy_dummy_dummy_dummy,%for.end.i135_dummy,%for.inc80_dummy,%for.inc80_dummy_dummy,%for.inc80_dummy_dummy_dummy,%if.end.iDirectSucc,%if.then.i.iDirectSucc,%selfLoopOptBlock32,%selfLoopOptExitBlock33,%selfLoopOptBlock39,%selfLoopOptExitBlock40,%selfLoopOptBlock47,%selfLoopOptExitBlock48,%selfLoopOptBlock54,%selfLoopOptExitBlock55,%selfLoopOptBlock62,%selfLoopOptExitBlock63,%selfLoopOptBlock69,%selfLoopOptExitBlock70,%selfLoopOptBlock77,%selfLoopOptExitBlock78,%selfLoopOptBlock85,%selfLoopOptExitBlock86,%selfLoopOptBlock92,%selfLoopOptExitBlock93,%selfLoopOptBlock100,%selfLoopOptExitBlock101,%selfLoopOptBlock108,%selfLoopOptExitBlock109,%selfLoopOptBlock115,%selfLoopOptExitBlock116,%selfLoopOptBlock123,%selfLoopOptExitBlock124,%selfLoopOptBlock130,%selfLoopOptExitBlock131
    Loop at depth 2 containing: %vector.body457<header>,%selfLoopOptBlock54,%selfLoopOptExitBlock55<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock54<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i8.i<header>,%selfLoopOptBlock47,%selfLoopOptExitBlock48<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock47<header><latch><exiting>
    Loop at depth 2 containing: %vector.body434<header>,%selfLoopOptBlock39,%selfLoopOptExitBlock40<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock39<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i.i<header>,%selfLoopOptBlock32,%selfLoopOptExitBlock33<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock32<header><latch><exiting>
    Loop at depth 2 containing: %vector.body397<header>,%selfLoopOptBlock100,%selfLoopOptExitBlock101<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock100<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge.prol<header>,%selfLoopOptBlock92,%selfLoopOptExitBlock93<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock92<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i156.for.body.i156_crit_edge<header>,%selfLoopOptBlock85,%selfLoopOptExitBlock86<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock85<header><latch><exiting>
    Loop at depth 2 containing: %vector.body365<header>,%selfLoopOptBlock77,%selfLoopOptExitBlock78<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock77<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170.prol<header>,%selfLoopOptBlock69,%selfLoopOptExitBlock70<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock69<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i170<header>,%selfLoopOptBlock62,%selfLoopOptExitBlock63<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock62<header><latch><exiting>
    Loop at depth 2 containing: %vector.body344<header>,%selfLoopOptBlock130,%selfLoopOptExitBlock131<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock130<header><latch><exiting>
    Loop at depth 2 containing: %for.body.i132<header>,%selfLoopOptBlock123,%selfLoopOptExitBlock124<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock123<header><latch><exiting>
    Loop at depth 2 containing: %vector.body<header>,%selfLoopOptBlock115,%selfLoopOptExitBlock116<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock115<header><latch><exiting>
    Loop at depth 2 containing: %for.body10.i146<header>,%selfLoopOptBlock108,%selfLoopOptExitBlock109<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock108<header><latch><exiting>

Func cost 193 for neoscrypt_hash_finish_sha256 has been optimized for entry cost!
Storing cost of neoscrypt_hash_finish_sha256() : 193

Instrumenting loops (self loop count: 0, sese loop count: 0) for function neoscrypt_hash_finish_sha256

Loops scheduled for transform for neoscrypt_hash_finish_sha256:- 

neoscrypt_pbkdf2_sha256(): Transformed branch between if.end21.i41.i and vector.body112 in the forward direction
neoscrypt_pbkdf2_sha256(): Transformed branch between if.end21.i.i and neoscrypt_hmac_init_sha256.exit in the forward direction
neoscrypt_pbkdf2_sha256(): Transformed branch between if.end21.i.i28 and neoscrypt_hmac_update_sha256.exit in the forward direction
neoscrypt_pbkdf2_sha256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i44,%if.end14.i.i55,%if.then19.i.i59,%if.end21.i.i62,%if.end21.i.i62.thread,%if.then24.i.i65,%neoscrypt_hmac_update_sha256.exit66,%if.then.i.i80,%if.end14.i.i88,%if.then19.i.i92,%if.end21.i.i95,%if.end21.i.thread.i,%if.then24.i.i98,%neoscrypt_hmac_finish_sha256.exit<latch><exiting>
. Latch: neoscrypt_hmac_finish_sha256.exit, Exiting block: neoscrypt_hmac_finish_sha256.exit
neoscrypt_pbkdf2_sha256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i44,%if.end14.i.i55,%if.then19.i.i59,%if.end21.i.i62,%if.end21.i.i62.thread,%if.then24.i.i65,%neoscrypt_hmac_update_sha256.exit66,%if.then.i.i80,%if.end14.i.i88,%if.then19.i.i92,%if.end21.i.i95,%if.end21.i.thread.i,%if.then24.i.i98,%neoscrypt_hmac_finish_sha256.exit<latch><exiting>
. Latch: neoscrypt_hmac_finish_sha256.exit, Exiting block: neoscrypt_hmac_finish_sha256.exit
neoscrypt_pbkdf2_sha256(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i44,%if.end14.i.i55,%if.then19.i.i59,%if.end21.i.i62,%if.end21.i.i62.thread,%if.then24.i.i65,%neoscrypt_hmac_update_sha256.exit66,%if.then.i.i80,%if.end14.i.i88,%if.then19.i.i92,%if.end21.i.i95,%if.end21.i.thread.i,%if.then24.i.i98,%neoscrypt_hmac_finish_sha256.exit<latch><exiting>
. Latch: neoscrypt_hmac_finish_sha256.exit, Exiting block: neoscrypt_hmac_finish_sha256.exit
manageDanglingLCCs(inverted V shape): Removing cost 14 of vector.body112
manageDanglingLCCs(inverted V shape): Adding pred cost 14 of vector.body112 to successor if.then.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 14 of vector.body112 to successor if.end14.i.thread.i
manageDanglingLCCs(inverted V shape): Removing cost 115 of for.body
manageDanglingLCCs(inverted V shape): Adding pred cost 115 of for.body to successor if.end21.i.i62.thread
manageDanglingLCCs(inverted V shape): Adding pred cost 115 of for.body to successor if.then.i.i44
manageDanglingLCCs(inverted V shape): Removing cost 298 of neoscrypt_hmac_update_sha256.exit66
manageDanglingLCCs(inverted V shape): Adding pred cost 298 of neoscrypt_hmac_update_sha256.exit66 to successor if.end21.i.thread.i
manageDanglingLCCs(inverted V shape): Adding pred cost 298 of neoscrypt_hmac_update_sha256.exit66 to successor if.then.i.i80
Pred cost for for.end41.loopexit is 1
Direct branch from entry needs to be instrumented
Func cost 309 for neoscrypt_pbkdf2_sha256 has been optimized for entry cost!
Direct branch from if.end21.i41.i needs to be instrumented
Direct branch from if.end21.i.i needs to be instrumented
Direct branch from if.end21.i.i28 needs to be instrumented
Func cost 506 for neoscrypt_pbkdf2_sha256 has been optimized for exit cost!
Storing cost of neoscrypt_pbkdf2_sha256() : 815

Instrumenting loops (self loop count: 0, sese loop count: 0) for function neoscrypt_pbkdf2_sha256

Loops scheduled for transform for neoscrypt_pbkdf2_sha256:- 


neoscrypt_pbkdf2_sha256(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i44,%if.end14.i.i55,%if.then19.i.i59,%if.end21.i.i62,%if.end21.i.i62.thread,%if.then24.i.i65,%neoscrypt_hmac_update_sha256.exit66,%if.then.i.i80,%if.end14.i.i88,%if.then19.i.i92,%if.end21.i.i95,%if.end21.i.thread.i,%if.then24.i.i98,%neoscrypt_hmac_finish_sha256.exit<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

neoscrypt_pbkdf2_sha256(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i44,%if.end14.i.i55,%if.then19.i.i59,%if.end21.i.i62,%if.end21.i.i62.thread,%if.then24.i.i65,%neoscrypt_hmac_update_sha256.exit66,%if.then.i.i80,%if.end14.i.i88,%if.then19.i.i92,%if.end21.i.i95,%if.end21.i.thread.i,%if.then24.i.i98,%neoscrypt_hmac_finish_sha256.exit<latch><exiting>

scanhash_neoscrypt(): Transformed branch between for.cond.i and cleanup.i in the forward direction
scanhash_neoscrypt(): Transformed branch between if.end.i and cleanup.i in the forward direction
scanhash_neoscrypt(): Transformed branch between if.end.1.i and cleanup.i_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between for.cond.1.i and cleanup.i_dummy_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between if.end.2.i and cleanup.i_dummy_dummy_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between for.cond.2.i and cleanup.i_dummy_dummy_dummy_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between if.end.3.i and cleanup.i_dummy_dummy_dummy_dummy_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between for.cond.3.i and cleanup.i_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between if.end.4.i and cleanup.i_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between for.cond.4.i and cleanup.i_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between if.end.5.i and cleanup.i_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between for.cond.5.i and cleanup.i_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
scanhash_neoscrypt(): Transformed branch between if.end.6.i and cleanup.i_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy_dummy in the forward direction
Pred cost for while.end.loopexit is 1
Pred cost for while.end is 2
Pred cost for if.then is 105
manageDanglingLCCs(V shape): Removing cost 105 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 2 of predecessor while.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 53 as initial cost for merge node cleanup
Func cost 112 for scanhash_neoscrypt has been optimized for entry cost!
Direct branch from cleanup.i needs to be instrumented
Func cost 157 for scanhash_neoscrypt has been optimized for exit cost!
Storing cost of scanhash_neoscrypt() : 269

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_neoscrypt

Loops scheduled for transform for scanhash_neoscrypt:- 

sha256_blocks(): Checking if simple for Loop Loop at depth 1 containing: %for.cond2.preheader<header>,%for.body30,%for.cond76.preheader,%for.body79,%for.cond157.preheader<latch><exiting>
    Loop at depth 2 containing: %for.body30<header><latch><exiting>
    Loop at depth 2 containing: %for.body79<header><latch><exiting>
. Latch: for.cond157.preheader, Exiting block: for.cond157.preheader
sha256_blocks(): Checking if simple for Loop Loop at depth 2 containing: %for.body30<header><latch><exiting>
. Latch: for.body30, Exiting block: for.body30
sha256_blocks(): Checking if simple for Loop Loop at depth 1 containing: %for.cond2.preheader<header>,%for.body30,%for.cond76.preheader,%for.body79,%for.cond157.preheader<latch><exiting>
    Loop at depth 2 containing: %for.body30<header><latch><exiting>
    Loop at depth 2 containing: %for.body79<header><latch><exiting>
. Latch: for.cond157.preheader, Exiting block: for.cond157.preheader
sha256_blocks(): Checking if simple for Loop Loop at depth 2 containing: %for.body79<header><latch><exiting>
. Latch: for.body79, Exiting block: for.body79
sha256_blocks(): Checking if simple for Loop Loop at depth 1 containing: %for.cond2.preheader<header>,%for.body30,%for.cond76.preheader,%for.body79,%for.cond157.preheader<latch><exiting>
    Loop at depth 2 containing: %for.body30<header><latch><exiting>
    Loop at depth 2 containing: %for.body79<header><latch><exiting>
. Latch: for.cond157.preheader, Exiting block: for.cond157.preheader
Has backedges: (+ -1 (ARG: 2) ) (numCost: -1)
Has backedges: 63 (numCost: 63)
Has backedges: 47 (numCost: 47)
Self loop:- #backedges: 48, body cost: 35, preheader cost: 237
Self loop:- loop & preheader cost 1917 will be instrumented in post loop exit
Self loop:- #backedges: 64, body cost: 43, preheader cost: 1926
Self loop:- loop cost 2752 will be instrumented in post loop exit
Instrumenting loop with body cost: 2775
Non-header-colocated-exit loop will be transformed, & body cost is 2775 for loop with header for.cond2.preheader
Func cost 529 for sha256_blocks has been optimized for entry cost!
Storing cost of sha256_blocks() : 529

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sha256_blocks

Loops scheduled for transform for sha256_blocks:- 
Sese Loop: Loop at depth 1 containing: %for.cond2.preheader<header>,%for.body30,%for.cond76.preheader,%for.body79,%for.cond157.preheader<latch><exiting>
    Loop at depth 2 containing: %for.body30<header><latch><exiting>
    Loop at depth 2 containing: %for.body79<header><latch><exiting>



sha256_blocks(): Self loop Loop at depth 2 containing: %for.body79<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body79

sha256_blocks(): Transformed Self loop Loop at depth 2 containing: %for.body79<header><latch><exiting>


sha256_blocks(): Self loop Loop at depth 2 containing: %for.body30<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body30

sha256_blocks(): Transformed Self loop Loop at depth 2 containing: %for.body30<header><latch><exiting>


sha256_blocks(): Max depth loop Loop at depth 1 containing: %for.cond2.preheader<header>,%for.body30,%for.cond76.preheader,%for.body79,%for.cond157.preheader<latch><exiting>
    Loop at depth 2 containing: %for.body30<header><latch><exiting>
    Loop at depth 2 containing: %for.body79<header><latch><exiting>


This seseloop will not be transformed because of too low iteration count --> for.cond2.preheader( sha256_blocks() ). SESE Loop cost: 2775. Iterations: 1

sha256_blocks(): Transformed loop Loop at depth 1 containing: %for.cond2.preheader<header>,%for.body30,%for.cond76.preheader,%for.body79,%for.cond157.preheader<latch><exiting>
    Loop at depth 2 containing: %for.body30<header><latch><exiting>
    Loop at depth 2 containing: %for.body79<header><latch><exiting>

Total functions: 8, uninstrumented functions: 1
Optimized 12 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-neoscrypt.o `test -f 'algo/cpuminer-neoscrypt.ll' || echo './'`algo/cpuminer-neoscrypt.ll
mv -f algo/.deps/cpuminer-neoscrypt.Tpo algo/.deps/cpuminer-neoscrypt.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-nist5.ll -MD -MP -MF algo/.deps/cpuminer-nist5.Tpo -c -o algo/llvm_cpuminer-nist5.ll `test -f 'algo/nist5.c' || echo './'`algo/nist5.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/nist5.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-nist5.ll > algo/opt_cpuminer-nist5.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-nist5.ll > algo/cpuminer-nist5.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: nist5hash
Function: scanhash_nist5
Func cost 2841 for nist5hash has been optimized for entry cost!
Storing cost of nist5hash() : 2841

Instrumenting loops (self loop count: 0, sese loop count: 0) for function nist5hash

Loops scheduled for transform for nist5hash:- 

Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 770 for scanhash_nist5 has been optimized for entry cost!
Func cost 360 for scanhash_nist5 has been optimized for exit cost!
Storing cost of scanhash_nist5() : 1130

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_nist5

Loops scheduled for transform for scanhash_nist5:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-nist5.o `test -f 'algo/cpuminer-nist5.ll' || echo './'`algo/cpuminer-nist5.ll
mv -f algo/.deps/cpuminer-nist5.Tpo algo/.deps/cpuminer-nist5.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-pluck.ll -MD -MP -MF algo/.deps/cpuminer-pluck.Tpo -c -o algo/llvm_cpuminer-pluck.ll `test -f 'algo/pluck.c' || echo './'`algo/pluck.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/pluck.c:28:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-pluck.ll > algo/cpuminer-pluck.ll
#/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-pluck.ll > algo/cpuminer-pluck.ll
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-pluck.o `test -f 'algo/cpuminer-pluck.ll' || echo './'`algo/cpuminer-pluck.ll
mv -f algo/.deps/cpuminer-pluck.Tpo algo/.deps/cpuminer-pluck.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-qubit.ll -MD -MP -MF algo/.deps/cpuminer-qubit.Tpo -c -o algo/llvm_cpuminer-qubit.ll `test -f 'algo/qubit.c' || echo './'`algo/qubit.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/qubit.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-qubit.ll > algo/opt_cpuminer-qubit.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-qubit.ll > algo/cpuminer-qubit.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: qubithash
Function: scanhash_qubit
Func cost 2841 for qubithash has been optimized for entry cost!
Storing cost of qubithash() : 2841

Instrumenting loops (self loop count: 0, sese loop count: 0) for function qubithash

Loops scheduled for transform for qubithash:- 

Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 770 for scanhash_qubit has been optimized for entry cost!
Func cost 360 for scanhash_qubit has been optimized for exit cost!
Storing cost of scanhash_qubit() : 1130

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_qubit

Loops scheduled for transform for scanhash_qubit:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-qubit.o `test -f 'algo/cpuminer-qubit.ll' || echo './'`algo/cpuminer-qubit.ll
mv -f algo/.deps/cpuminer-qubit.Tpo algo/.deps/cpuminer-qubit.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-rainforest.ll -MD -MP -MF algo/.deps/cpuminer-rainforest.Tpo -c -o algo/llvm_cpuminer-rainforest.ll `test -f 'algo/rainforest.c' || echo './'`algo/rainforest.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/rainforest.c:33:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-rainforest.ll > algo/opt_cpuminer-rainforest.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-rainforest.ll > algo/cpuminer-rainforest.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: rf256_hash
Function: rf256_init
Function: rf256_one_round
Function: rf_rambox
Function: scanhash_rf256
rf256_hash(): Transformed branch between if.end.i and while.cond.backedge.i in the forward direction
rf256_hash(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy
. Latch: while.cond.backedge.i, Exiting block: while.cond.backedge.i
rf256_hash(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy
. Latch: while.cond.backedge.i, Exiting block: while.cond.backedge.i
Instrumenting loop with body cost: 20
Non-header-colocated-exit loop will be transformed, & body cost is 20 for loop with header while.body.i
Func cost 317 for rf256_hash has been optimized for entry cost!
Storing cost of rf256_hash() : 317

Instrumenting loops (self loop count: 0, sese loop count: 1) for function rf256_hash

Loops scheduled for transform for rf256_hash:- 
Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy



rf256_hash(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy


This seseloop will not be transformed since it has no induction variable --> while.body.i( rf256_hash() )

rf256_hash(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy

rf256_init(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>
. Latch: for.body.i, Exiting block: for.body.i
Has backedges: 127 (numCost: 127)
Self loop:- #backedges: 128, body cost: 107, preheader cost: 3
Self loop will be transformed, & body cost is 107 for loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>

Func cost 113 for rf256_init has been optimized for entry cost!
Storing cost of rf256_init() : 113

Instrumenting loops (self loop count: 1, sese loop count: 0) for function rf256_init

Loops scheduled for transform for rf256_init:- 
Self Loop: Loop at depth 1 containing: %for.body.i<header><latch><exiting>



rf256_init(): Self loop Loop at depth 1 containing: %for.body.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body.i( rf256_init() ). Self Loop cost: 107. Iterations: 37
Self loop is not canonical. Going for generic transformation with 37 iterations.
Attempting to transform self loop for.body.i of rf256_init with 37 inner loop iterations --> Loop at depth 1 containing: %for.body.i<header><latch><exiting>
Found local ind var:   %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %0 = add i64 592, %indvars.iv.i
Applied self loop transform on for.body.i( rf256_init() )

rf256_init(): Transformed Self loop Loop at depth 1 containing: %for.body.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

rf256_one_round(): Transformed branch between if.else.i284 and if.end9.i296 in the forward direction
rf256_one_round(): Transformed branch between if.else14.i298 and rf256_divbox.exit310 in the forward direction
rf256_one_round(): Transformed branch between if.else.i623 and if.end9.i635 in the forward direction
rf256_one_round(): Transformed branch between if.else14.i637 and rf256_divbox.exit649 in the forward direction
rf256_one_round(): Transformed branch between if.else.i746 and if.end9.i758 in the forward direction
rf256_one_round(): Transformed branch between if.else14.i760 and rf256_divbox.exit772 in the forward direction
rf256_one_round(): Transformed branch between if.else.i1115 and if.end9.i1127 in the forward direction
rf256_one_round(): Transformed branch between if.else14.i1129 and rf256_divbox.exit1141 in the forward direction
rf256_one_round(): Transformed branch between if.else.i1238 and if.end9.i1250 in the forward direction
rf256_one_round(): Transformed branch between if.else14.i1252 and rf256_divbox.exit1264 in the forward direction
rf256_one_round(): Transformed branch between if.else.i1484 and if.end9.i1496 in the forward direction
rf256_one_round(): Transformed branch between if.else14.i1498 and rf256_divbox.exit1510 in the forward direction
rf256_one_round(): Transformed branch between if.else.i992 and if.end9.i1004 in the forward direction
rf256_one_round(): Transformed branch between if.else14.i1006 and rf256_divbox.exit1018 in the forward direction
rf256_one_round(): Transformed branch between if.else.i and if.end9.i in the forward direction
rf256_one_round(): Transformed branch between if.else14.i and rf256_divbox.exit in the forward direction
Func cost 2275 for rf256_one_round has been optimized for entry cost!
Storing cost of rf256_one_round() : 2275

Instrumenting loops (self loop count: 0, sese loop count: 0) for function rf256_one_round

Loops scheduled for transform for rf256_one_round:- 

Func cost 304 for rf_rambox has been optimized for entry cost!
Storing cost of rf_rambox() : 304

Instrumenting loops (self loop count: 0, sese loop count: 0) for function rf_rambox

Loops scheduled for transform for rf_rambox:- 

scanhash_rf256(): Transformed branch between if.end.i and while.cond.backedge.i in the forward direction
scanhash_rf256(): Transformed branch between for.cond.cleanup18.loopexit.unr-lcssa and for.cond.cleanup18 in the forward direction
scanhash_rf256(): Transformed branch between if.end.i135 and while.cond.backedge.i125 in the forward direction
scanhash_rf256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy
. Latch: while.cond.backedge.i, Exiting block: while.cond.backedge.i
scanhash_rf256(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy
. Latch: while.cond.backedge.i, Exiting block: while.cond.backedge.i
scanhash_rf256(): Checking if simple for Loop Loop at depth 2 containing: %for.body19.epil<header><latch><exiting>
. Latch: for.body19.epil, Exiting block: for.body19.epil
scanhash_rf256(): Checking if simple for Loop Loop at depth 2 containing: %for.body19<header><latch><exiting>
. Latch: for.body19, Exiting block: for.body19
scanhash_rf256(): Checking if simple for Loop Loop at depth 2 containing: %while.body.i117<header>,%if.end.i135,%if.then10.i136,%if.then.i121,%while.cond.backedge.i125<latch><exiting>,%while.cond.backedge.i125_dummy
. Latch: while.cond.backedge.i125, Exiting block: while.cond.backedge.i125
scanhash_rf256(): Checking if simple for Loop Loop at depth 2 containing: %while.body.i117<header>,%if.end.i135,%if.then10.i136,%if.then.i121,%while.cond.backedge.i125<latch><exiting>,%while.cond.backedge.i125_dummy
. Latch: while.cond.backedge.i125, Exiting block: while.cond.backedge.i125
Pred cost for do.end is 4
Pred cost for if.then44 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then44 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Direct branch from if.end.i needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i
Func cost 1000 for scanhash_rf256 has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 35, preheader cost: 7
Self loop will be transformed, & body cost is 35 for loop Loop at depth 2 containing: %for.body19<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 11, preheader cost: 9
Self loop will be transformed, & body cost is 11 for loop Loop at depth 2 containing: %for.body19.epil<header><latch><exiting>

Direct branch from if.end.i135 needs to be instrumented
Instrumenting loop with body cost: 2
Non-header-colocated-exit loop will be transformed, & body cost is 2 for loop with header while.body.i117
Func cost 461 for scanhash_rf256 has been optimized for exit cost!
Storing cost of scanhash_rf256() : 1461

Instrumenting loops (self loop count: 2, sese loop count: 2) for function scanhash_rf256

Loops scheduled for transform for scanhash_rf256:- 
Self Loop: Loop at depth 2 containing: %for.body19.epil<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body19<header><latch><exiting>

Sese Loop: Loop at depth 2 containing: %while.body.i117<header>,%if.end.i135,%if.then10.i136,%if.then.i121,%while.cond.backedge.i125<latch><exiting>,%while.cond.backedge.i125_dummy,%if.end.i135DirectSucc

Sese Loop: Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy,%if.end.iDirectSucc



scanhash_rf256(): Self loop Loop at depth 2 containing: %for.body19.epil<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body19.epil( scanhash_rf256() ). Self Loop cost: 11. Iterations: 363
Self loop is not canonical. Going for generic transformation with 363 iterations.
Attempting to transform self loop for.body19.epil of scanhash_rf256 with 363 inner loop iterations --> Loop at depth 2 containing: %for.body19.epil<header><latch><exiting>
Found local ind var:   %epil.iter = phi i64 [ %epil.iter.sub, %selfLoopOptExitBlock ], [ %xtraiter, %for.body19.epil.preheader ], mapping it to   %phiIVClone1 = phi i64 
User in header block to replace Phi:   %55 = add i64 -363, %epil.iter
Applied self loop transform on for.body19.epil( scanhash_rf256() )

scanhash_rf256(): Transformed Self loop Loop at depth 2 containing: %for.body19.epil<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>


scanhash_rf256(): Self loop Loop at depth 2 containing: %for.body19<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body19( scanhash_rf256() ). Self Loop cost: 35. Iterations: 114
Self loop is not canonical. Going for generic transformation with 114 iterations.
Attempting to transform self loop for.body19 of scanhash_rf256 with 114 inner loop iterations --> Loop at depth 2 containing: %for.body19<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %unroll_iter, %for.body19.preheader.new ], [ %niter.nsub.3, %selfLoopOptExitBlock3 ], mapping it to   %phiIVClone5 = phi i64 
User in header block to replace Phi:   %59 = add i64 -456, %niter
Applied self loop transform on for.body19( scanhash_rf256() )

scanhash_rf256(): Transformed Self loop Loop at depth 2 containing: %for.body19<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock2<header><latch><exiting>


scanhash_rf256(): Max depth loop Loop at depth 2 containing: %while.body.i117<header>,%if.end.i135,%if.then10.i136,%if.then.i121,%while.cond.backedge.i125<latch><exiting>,%while.cond.backedge.i125_dummy,%if.end.i135DirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i117( scanhash_rf256() )

scanhash_rf256(): Transformed loop Loop at depth 2 containing: %while.body.i117<header>,%if.end.i135,%if.then10.i136,%if.then.i121,%while.cond.backedge.i125<latch><exiting>,%while.cond.backedge.i125_dummy,%if.end.i135DirectSucc


scanhash_rf256(): Max depth loop Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy,%if.end.iDirectSucc


This seseloop will not be transformed since it has no induction variable --> while.body.i( scanhash_rf256() )

scanhash_rf256(): Transformed loop Loop at depth 1 containing: %while.body.i<header>,%if.end.i,%if.then10.i,%if.then.i,%while.cond.backedge.i<latch><exiting>,%while.cond.backedge.i_dummy,%if.end.iDirectSucc

Total functions: 5, uninstrumented functions: 2
Optimized 6 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-rainforest.o `test -f 'algo/cpuminer-rainforest.ll' || echo './'`algo/cpuminer-rainforest.ll
mv -f algo/.deps/cpuminer-rainforest.Tpo algo/.deps/cpuminer-rainforest.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-scrypt.ll -MD -MP -MF algo/.deps/cpuminer-scrypt.Tpo -c -o algo/llvm_cpuminer-scrypt.ll `test -f 'algo/scrypt.c' || echo './'`algo/scrypt.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/scrypt.c:30:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-scrypt.ll > algo/opt_cpuminer-scrypt.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-scrypt.ll > algo/cpuminer-scrypt.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: HMAC_SHA256_80_init_4way
Function: HMAC_SHA256_80_init_8way
Function: PBKDF2_SHA256_128_32_4way
Function: PBKDF2_SHA256_80_128
Function: PBKDF2_SHA256_80_128_4way
Function: PBKDF2_SHA256_80_128_8way
Function: scanhash_scrypt
Function: scrypt_1024_1_1_256
Function: scrypt_buffer_alloc
Function: scrypthash
Func cost 1474 for HMAC_SHA256_80_init_4way has been optimized for entry cost!
Storing cost of HMAC_SHA256_80_init_4way() : 1474

Instrumenting loops (self loop count: 0, sese loop count: 0) for function HMAC_SHA256_80_init_4way

Loops scheduled for transform for HMAC_SHA256_80_init_4way:- 

Func cost 1543 for HMAC_SHA256_80_init_8way has been optimized for entry cost!
Storing cost of HMAC_SHA256_80_init_8way() : 1543

Instrumenting loops (self loop count: 0, sese loop count: 0) for function HMAC_SHA256_80_init_8way

Loops scheduled for transform for HMAC_SHA256_80_init_8way:- 

Func cost 205 for PBKDF2_SHA256_128_32_4way has been optimized for entry cost!
Storing cost of PBKDF2_SHA256_128_32_4way() : 205

Instrumenting loops (self loop count: 0, sese loop count: 0) for function PBKDF2_SHA256_128_32_4way

Loops scheduled for transform for PBKDF2_SHA256_128_32_4way:- 

Func cost 3374 for PBKDF2_SHA256_80_128 has been optimized for entry cost!
Storing cost of PBKDF2_SHA256_80_128() : 3374

Instrumenting loops (self loop count: 0, sese loop count: 0) for function PBKDF2_SHA256_80_128

Loops scheduled for transform for PBKDF2_SHA256_80_128:- 

Func cost 720 for PBKDF2_SHA256_80_128_4way has been optimized for entry cost!
Storing cost of PBKDF2_SHA256_80_128_4way() : 720

Instrumenting loops (self loop count: 0, sese loop count: 0) for function PBKDF2_SHA256_80_128_4way

Loops scheduled for transform for PBKDF2_SHA256_80_128_4way:- 

Func cost 3246 for PBKDF2_SHA256_80_128_8way has been optimized for entry cost!
Storing cost of PBKDF2_SHA256_80_128_8way() : 3246

Instrumenting loops (self loop count: 0, sese loop count: 0) for function PBKDF2_SHA256_80_128_8way

Loops scheduled for transform for PBKDF2_SHA256_80_128_8way:- 

scanhash_scrypt(): Transformed branch between for.end.loopexit.unr-lcssa and for.end in the forward direction
scanhash_scrypt(): Transformed branch between for.end18.loopexit.unr-lcssa and for.end18 in the forward direction
scanhash_scrypt(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
scanhash_scrypt(): Checking if simple for Loop Loop at depth 2 containing: %for.body12<header><latch><exiting>
. Latch: for.body12, Exiting block: for.body12
scanhash_scrypt(): Checking if simple for Loop Loop at depth 2 containing: %for.cond183.preheader.i<header><latch><exiting>
. Latch: for.cond183.preheader.i, Exiting block: for.cond183.preheader.i
Pred cost for do.end is 6
Pred cost for if.then64 is 112
manageDanglingLCCs(V shape): Removing cost 112 of predecessor if.then64 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 6 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 59 as initial cost for merge node cleanup
Self loop:- #backedges: 0, body cost: 215, preheader cost: 544
Self loop will be transformed, & body cost is 215 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Direct branch from for.end.loopexit.unr-lcssa needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 2099 for scanhash_scrypt has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 17, preheader cost: 3
Self loop will be transformed, & body cost is 17 for loop Loop at depth 2 containing: %for.body12<header><latch><exiting>

Has backedges: 2 (numCost: 2)
Self loop:- #backedges: 3, body cost: 387, preheader cost: 3486
Self loop:- loop cost 1161 will be instrumented in post loop exit
Func cost 364 for scanhash_scrypt has been optimized for exit cost!
Storing cost of scanhash_scrypt() : 2463

Instrumenting loops (self loop count: 2, sese loop count: 0) for function scanhash_scrypt

Loops scheduled for transform for scanhash_scrypt:- 
Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body12<header><latch><exiting>



scanhash_scrypt(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body( scanhash_scrypt() ). Self Loop cost: 215. Iterations: 18
Self loop is not canonical. Going for generic transformation with 18 iterations.
Attempting to transform self loop for.body of scanhash_scrypt with 18 inner loop iterations --> Loop at depth 1 containing: %for.body<header><latch><exiting>
Found local ind var:   %niter857 = phi i64 [ %unroll_iter856, %for.body.lr.ph.new ], [ %niter857.nsub.1, %selfLoopOptExitBlock ], mapping it to   %phiIVClone1 = phi i64 
User in header block to replace Phi:   %7 = add i64 -36, %niter857
Applied self loop transform on for.body( scanhash_scrypt() )

scanhash_scrypt(): Transformed Self loop Loop at depth 1 containing: %for.body<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>


scanhash_scrypt(): Self loop Loop at depth 2 containing: %for.body12<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body12( scanhash_scrypt() ). Self Loop cost: 17. Iterations: 235
Self loop is not canonical. Going for generic transformation with 235 iterations.
Attempting to transform self loop for.body12 of scanhash_scrypt with 235 inner loop iterations --> Loop at depth 2 containing: %for.body12<header><latch><exiting>
Found local ind var:   %niter = phi i64 [ %niter.nsub.1, %selfLoopOptExitBlock3 ], [ %unroll_iter, %for.body12.preheader1 ], mapping it to   %phiIVClone6 = phi i64 
User in header block to replace Phi:   %1208 = add i64 -470, %niter
Applied self loop transform on for.body12( scanhash_scrypt() )

scanhash_scrypt(): Transformed Self loop Loop at depth 2 containing: %for.body12<header>,%selfLoopOptBlock2,%selfLoopOptExitBlock3<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock2<header><latch><exiting>


scanhash_scrypt(): Self loop Loop at depth 2 containing: %for.cond183.preheader.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.cond183.preheader.i

scanhash_scrypt(): Transformed Self loop Loop at depth 2 containing: %for.cond183.preheader.i<header><latch><exiting>

Func cost 711 for scrypt_1024_1_1_256 has been optimized for entry cost!
Storing cost of scrypt_1024_1_1_256() : 711

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scrypt_1024_1_1_256

Loops scheduled for transform for scrypt_1024_1_1_256:- 

Func cost 105 for scrypt_buffer_alloc has been optimized for entry cost!
Storing cost of scrypt_buffer_alloc() : 105

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scrypt_buffer_alloc

Loops scheduled for transform for scrypt_buffer_alloc:- 

Direct branch from entry needs to be instrumented
Func cost 102 for scrypthash has been optimized for entry cost!
Storing cost of scrypthash() : 102

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scrypthash

Loops scheduled for transform for scrypthash:- 

Total functions: 10, uninstrumented functions: 4
Optimized 11 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-scrypt.o `test -f 'algo/cpuminer-scrypt.ll' || echo './'`algo/cpuminer-scrypt.ll
mv -f algo/.deps/cpuminer-scrypt.Tpo algo/.deps/cpuminer-scrypt.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-scrypt-jane.ll -MD -MP -MF algo/.deps/cpuminer-scrypt-jane.Tpo -c -o algo/llvm_cpuminer-scrypt-jane.ll `test -f 'algo/scrypt-jane.c' || echo './'`algo/scrypt-jane.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/scrypt-jane.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-scrypt-jane.ll > algo/opt_cpuminer-scrypt-jane.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-scrypt-jane.ll > algo/cpuminer-scrypt-jane.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: GetNfactor
Function: keccak_block
Function: scanhash_scryptjane
Function: scrypt_ChunkMix_avx_1
Function: scrypt_ChunkMix_avx_1_xor
Function: scrypt_N_1_1
Function: scrypt_ROMix_1
Function: scrypt_ensure_zero
Function: scrypt_hash_finish
Function: scrypt_pbkdf2_1
Function: scryptjanehash
GetNfactor(): Transformed branch between while.end and cleanup in the forward direction
GetNfactor(): Checking if simple for Loop Loop at depth 1 containing: %while.body<header><latch><exiting>
. Latch: while.body, Exiting block: while.body
Self loop:- #backedges: 0, body cost: 4, preheader cost: 7
Self loop will be transformed, & body cost is 4 for loop Loop at depth 1 containing: %while.body<header><latch><exiting>

Func cost 13 for GetNfactor has been optimized for entry cost!
Storing cost of GetNfactor() : 13

Instrumenting loops (self loop count: 1, sese loop count: 0) for function GetNfactor

Loops scheduled for transform for GetNfactor:- 
Self Loop: Loop at depth 1 containing: %while.body<header><latch><exiting>



GetNfactor(): Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.body( GetNfactor() )

GetNfactor(): Transformed Self loop Loop at depth 1 containing: %while.body<header><latch><exiting>

keccak_block(): Checking if simple for Loop Loop at depth 1 containing: %for.body37<header><latch><exiting>
. Latch: for.body37, Exiting block: for.body37
Has backedges: 23 (numCost: 23)
Self loop:- #backedges: 24, body cost: 218, preheader cost: 417
Self loop will be transformed, & body cost is 218 for loop Loop at depth 1 containing: %for.body37<header><latch><exiting>

Func cost 443 for keccak_block has been optimized for entry cost!
Storing cost of keccak_block() : 443

Instrumenting loops (self loop count: 1, sese loop count: 0) for function keccak_block

Loops scheduled for transform for keccak_block:- 
Self Loop: Loop at depth 1 containing: %for.body37<header><latch><exiting>



keccak_block(): Self loop Loop at depth 1 containing: %for.body37<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body37( keccak_block() ). Self Loop cost: 218. Iterations: 18
Self loop is canonical. Going for special transformation with 18 iterations.
Attempting to transform self loop for.body37 of keccak_block with 18 inner loop iterations --> Loop at depth 1 containing: %for.body37<header><latch><exiting>
Found local ind var:   %i.1753 = phi i64 [ 0, %entry ], [ %inc487, %selfLoopOptExitBlock ], mapping it to   %phiIVClone25 = phi i64 
User in header block to replace Phi:   %106 = add i64 18, %i.1753
Applied self loop transform on for.body37( keccak_block() )

keccak_block(): Transformed Self loop Loop at depth 1 containing: %for.body37<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 2 containing: %selfLoopOptBlock<header><latch><exiting>

scanhash_scryptjane(): Transformed branch between if.end9 and cleanup45 in the forward direction
manageDanglingLCCs(inverted V shape): Removing cost 106 of if.end9
manageDanglingLCCs(inverted V shape): Adding pred cost 106 of if.end9 to successor if.then14
manageDanglingLCCs(inverted V shape): Adding pred cost 106 of if.end9 to successor if.end15
Pred cost for if.then14 is 208
Pred cost for cleanup is 308
Pred cost for do.end is 208
manageDanglingLCCs(V shape): Removing cost 208 of predecessor if.then14 for merge node cleanup45_dummy
manageDanglingLCCs(V shape): Removing cost 308 of predecessor cleanup for merge node cleanup45_dummy
manageDanglingLCCs(V shape): Removing cost 208 of predecessor do.end for merge node cleanup45_dummy
manageDanglingLCCs(V shape): Settting average cost 241 as initial cost for merge node cleanup45_dummy
Func cost 580 for scanhash_scryptjane has been optimized for entry cost!
Func cost 102 for scanhash_scryptjane has been optimized for exit cost!
Storing cost of scanhash_scryptjane() : 682

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_scryptjane

Loops scheduled for transform for scanhash_scryptjane:- 

scrypt_ChunkMix_avx_1(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: 1 (numCost: 1)
Self loop:- #backedges: 2, body cost: 235, preheader cost: 13
Self loop:- loop & preheader cost 483 will be instrumented in post loop exit
Func cost 484 for scrypt_ChunkMix_avx_1 has been optimized for entry cost!
Storing cost of scrypt_ChunkMix_avx_1() : 484

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scrypt_ChunkMix_avx_1

Loops scheduled for transform for scrypt_ChunkMix_avx_1:- 


scrypt_ChunkMix_avx_1(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

scrypt_ChunkMix_avx_1(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

scrypt_ChunkMix_avx_1_xor(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
Has backedges: 1 (numCost: 1)
Self loop:- #backedges: 2, body cost: 251, preheader cost: 29
Self loop:- loop & preheader cost 531 will be instrumented in post loop exit
Func cost 532 for scrypt_ChunkMix_avx_1_xor has been optimized for entry cost!
Storing cost of scrypt_ChunkMix_avx_1_xor() : 532

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scrypt_ChunkMix_avx_1_xor

Loops scheduled for transform for scrypt_ChunkMix_avx_1_xor:- 


scrypt_ChunkMix_avx_1_xor(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

scrypt_ChunkMix_avx_1_xor(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 7 for scrypt_N_1_1 has been optimized for entry cost!
Storing cost of scrypt_N_1_1() : 7

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scrypt_N_1_1

Loops scheduled for transform for scrypt_N_1_1:- 

scrypt_ROMix_1(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
scrypt_ROMix_1(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header><latch><exiting>
. Latch: for.body7, Exiting block: for.body7
Func cost 106 for scrypt_ROMix_1 has been optimized for entry cost!
Has backedges: (+ -2 (zext (ARG: 3) i64) ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 489, preheader cost: 1
Self loop will be transformed, & body cost is 489 for loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 1079, preheader cost: 3
Self loop will be transformed, & body cost is 1079 for loop Loop at depth 1 containing: %for.body7<header><latch><exiting>

Func cost 1 for scrypt_ROMix_1 has been optimized for exit cost!
Storing cost of scrypt_ROMix_1() : 107

Instrumenting loops (self loop count: 2, sese loop count: 0) for function scrypt_ROMix_1

Loops scheduled for transform for scrypt_ROMix_1:- 
Self Loop: Loop at depth 1 containing: %for.body7<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %for.body<header><latch><exiting>



scrypt_ROMix_1(): Self loop Loop at depth 1 containing: %for.body7<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body7( scrypt_ROMix_1() ). Self Loop cost: 1079. Iterations: 3

scrypt_ROMix_1(): Transformed Self loop Loop at depth 1 containing: %for.body7<header><latch><exiting>


scrypt_ROMix_1(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> for.body( scrypt_ROMix_1() ). Self Loop cost: 489. Iterations: 8

scrypt_ROMix_1(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 1 for scrypt_ensure_zero has been optimized for entry cost!
Storing cost of scrypt_ensure_zero() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scrypt_ensure_zero

Loops scheduled for transform for scrypt_ensure_zero:- 

Func cost 904 for scrypt_hash_finish has been optimized for entry cost!
Storing cost of scrypt_hash_finish() : 904

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scrypt_hash_finish

Loops scheduled for transform for scrypt_hash_finish:- 

scrypt_pbkdf2_1(): Transformed branch between while.end.i59.i and vector.body123 in the forward direction
scrypt_pbkdf2_1(): Transformed branch between while.end.i.i and scrypt_hmac_init.exit in the forward direction
scrypt_pbkdf2_1(): Transformed branch between while.end.i.i49 and scrypt_hmac_update.exit in the forward direction
scrypt_pbkdf2_1(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i.i.i<header><latch><exiting>
. Latch: while.body.i.i.i, Exiting block: while.body.i.i.i
scrypt_pbkdf2_1(): Checking if simple for Loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>
. Latch: while.body.i.i, Exiting block: while.body.i.i
scrypt_pbkdf2_1(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i65,%while.end.i.i84,%while.end.i.i84.thread,%if.then23.i.i87,%scrypt_hmac_update.exit88,%if.then.i.i103,%while.end.i.i109,%while.end.i.thread.i93,%if.then23.i.i112,%scrypt_hmac_finish.exit<latch><exiting>
. Latch: scrypt_hmac_finish.exit, Exiting block: scrypt_hmac_finish.exit
manageDanglingLCCs(inverted V shape): Removing cost 115 of for.body
manageDanglingLCCs(inverted V shape): Adding pred cost 115 of for.body to successor while.end.i.i84.thread
manageDanglingLCCs(inverted V shape): Adding pred cost 115 of for.body to successor if.then.i.i65
manageDanglingLCCs(inverted V shape): Removing cost 1009 of scrypt_hmac_update.exit88
manageDanglingLCCs(inverted V shape): Adding pred cost 1009 of scrypt_hmac_update.exit88 to successor while.end.i.thread.i93
manageDanglingLCCs(inverted V shape): Adding pred cost 1009 of scrypt_hmac_update.exit88 to successor if.then.i.i103
Pred cost for if.then23.i.i112 is 103
Pred cost for for.end.loopexit is 1
Has backedges: (/ (+ -72 (ARG: 1) ) 72 ) (numCost: -1)
Self loop:- #backedges: 0, body cost: 448, preheader cost: 1030
Self loop will be transformed, & body cost is 448 for loop Loop at depth 1 containing: %while.body.i.i.i<header><latch><exiting>

Direct branch from while.end.i.i.i needs to be instrumented
Func cost 1014 for scrypt_pbkdf2_1 has been optimized for entry cost!
Direct branch from while.end.i59.i needs to be instrumented
Direct branch from while.end.i.i needs to be instrumented
Self loop:- #backedges: 0, body cost: 448, preheader cost: 3
Self loop will be transformed, & body cost is 448 for loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>

Direct branch from while.end.i.i49 needs to be instrumented
Func cost 506 for scrypt_pbkdf2_1 has been optimized for exit cost!
Storing cost of scrypt_pbkdf2_1() : 1520

Instrumenting loops (self loop count: 2, sese loop count: 0) for function scrypt_pbkdf2_1

Loops scheduled for transform for scrypt_pbkdf2_1:- 
Self Loop: Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>

Self Loop: Loop at depth 1 containing: %while.body.i.i.i<header><latch><exiting>



scrypt_pbkdf2_1(): Self loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body.i.i( scrypt_pbkdf2_1() ). Self Loop cost: 448. Iterations: 8

scrypt_pbkdf2_1(): Transformed Self loop Loop at depth 1 containing: %while.body.i.i<header><latch><exiting>


scrypt_pbkdf2_1(): Self loop Loop at depth 1 containing: %while.body.i.i.i<header><latch><exiting>


This selfloop will not be transformed because of too low iteration count --> while.body.i.i.i( scrypt_pbkdf2_1() ). Self Loop cost: 448. Iterations: 8

scrypt_pbkdf2_1(): Transformed Self loop Loop at depth 1 containing: %while.body.i.i.i<header><latch><exiting>


scrypt_pbkdf2_1(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i65,%while.end.i.i84,%while.end.i.i84.thread,%if.then23.i.i87,%scrypt_hmac_update.exit88,%if.then.i.i103,%while.end.i.i109,%while.end.i.thread.i93,%if.then23.i.i112,%scrypt_hmac_finish.exit<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

scrypt_pbkdf2_1(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.then.i.i65,%while.end.i.i84,%while.end.i.i84.thread,%if.then23.i.i87,%scrypt_hmac_update.exit88,%if.then.i.i103,%while.end.i.i109,%while.end.i.thread.i93,%if.then23.i.i112,%scrypt_hmac_finish.exit<latch><exiting>

Direct branch from if.end needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 1 for scryptjanehash has been optimized for entry cost!
Storing cost of scryptjanehash() : 1

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scryptjanehash

Loops scheduled for transform for scryptjanehash:- 

Total functions: 11, uninstrumented functions: 5
Optimized 14 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-scrypt-jane.o `test -f 'algo/cpuminer-scrypt-jane.ll' || echo './'`algo/cpuminer-scrypt-jane.ll
mv -f algo/.deps/cpuminer-scrypt-jane.Tpo algo/.deps/cpuminer-scrypt-jane.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-sha2.ll -MD -MP -MF algo/.deps/cpuminer-sha2.Tpo -c -o algo/llvm_cpuminer-sha2.ll `test -f 'algo/sha2.c' || echo './'`algo/sha2.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/sha2.c:11:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-sha2.ll > algo/opt_cpuminer-sha2.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-sha2.ll > algo/cpuminer-sha2.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_sha256d
Function: sha256_init
Function: sha256_transform
Function: sha256d
Function: sha256d_ms
Function: sha256d_preextend
Function: sha256d_prehash
scanhash_sha256d(): Transformed branch between if.end and cleanup in the forward direction
scanhash_sha256d(): Checking if simple for Loop Loop at depth 1 containing: %for.cond7.preheader.i<header><latch><exiting>
. Latch: for.cond7.preheader.i, Exiting block: for.cond7.preheader.i
scanhash_sha256d(): Checking if simple for Loop Loop at depth 1 containing: %for.cond24.preheader.i<header><latch><exiting>
. Latch: for.cond24.preheader.i, Exiting block: for.cond24.preheader.i
scanhash_sha256d(): Checking if simple for Loop Loop at depth 1 containing: %for.cond7.preheader.i112<header><latch><exiting>
. Latch: for.cond7.preheader.i112, Exiting block: for.cond7.preheader.i112
Pred cost for do.end.i is 6
Pred cost for if.then73.i is 107
manageDanglingLCCs(V shape): Removing cost 107 of predecessor if.then73.i for merge node scanhash_sha256d_8way.exit
manageDanglingLCCs(V shape): Removing cost 6 of predecessor do.end.i for merge node scanhash_sha256d_8way.exit
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node scanhash_sha256d_8way.exit
Pred cost for do.end.i177 is 6
Pred cost for if.then73.i169 is 107
manageDanglingLCCs(V shape): Removing cost 107 of predecessor if.then73.i169 for merge node scanhash_sha256d_4way.exit
manageDanglingLCCs(V shape): Removing cost 6 of predecessor do.end.i177 for merge node scanhash_sha256d_4way.exit
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node scanhash_sha256d_4way.exit
Pred cost for scanhash_sha256d_4way.exit is 461
Pred cost for if.then34 is 106
Pred cost for do.end is 6
manageDanglingLCCs(V shape): Removing cost 461 of predecessor scanhash_sha256d_4way.exit for merge node cleanup_dummy
manageDanglingLCCs(V shape): Removing cost 106 of predecessor if.then34 for merge node cleanup_dummy
manageDanglingLCCs(V shape): Removing cost 6 of predecessor do.end for merge node cleanup_dummy
manageDanglingLCCs(V shape): Settting average cost 191 as initial cost for merge node cleanup_dummy
Pred cost for cleanup_dummy is 192
Pred cost for scanhash_sha256d_8way.exit is 461
manageDanglingLCCs(V shape): Removing cost 461 of predecessor scanhash_sha256d_8way.exit for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 192 of predecessor cleanup_dummy for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 326 as initial cost for merge node cleanup
Func cost 531 for scanhash_sha256d has been optimized for entry cost!
Has backedges: 7 (numCost: 7)
Has backedges: 31 (numCost: 31)
Self loop:- #backedges: 32, body cost: 36, preheader cost: 516
Self loop:- loop & preheader cost 1668 will be instrumented in post loop exit
Self loop:- #backedges: 8, body cost: 61, preheader cost: 1875
Self loop:- loop & preheader cost 2363 will be instrumented in post loop exit
Has backedges: 31 (numCost: 31)
Self loop:- #backedges: 32, body cost: 20, preheader cost: 516
Self loop:- loop & preheader cost 1156 will be instrumented in post loop exit
Func cost 731 for scanhash_sha256d has been optimized for exit cost!
Storing cost of scanhash_sha256d() : 1262

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_sha256d

Loops scheduled for transform for scanhash_sha256d:- 


scanhash_sha256d(): Self loop Loop at depth 1 containing: %for.cond7.preheader.i112<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.cond7.preheader.i112

scanhash_sha256d(): Transformed Self loop Loop at depth 1 containing: %for.cond7.preheader.i112<header><latch><exiting>


scanhash_sha256d(): Self loop Loop at depth 1 containing: %for.cond24.preheader.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.cond24.preheader.i

scanhash_sha256d(): Transformed Self loop Loop at depth 1 containing: %for.cond24.preheader.i<header><latch><exiting>


scanhash_sha256d(): Self loop Loop at depth 1 containing: %for.cond7.preheader.i<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.cond7.preheader.i

scanhash_sha256d(): Transformed Self loop Loop at depth 1 containing: %for.cond7.preheader.i<header><latch><exiting>

Func cost 103 for sha256_init has been optimized for entry cost!
Storing cost of sha256_init() : 103

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sha256_init

Loops scheduled for transform for sha256_init:- 

sha256_transform(): Checking if simple for Loop Loop at depth 1 containing: %for.body5<header><latch><exiting>
. Latch: for.body5, Exiting block: for.body5
Has backedges: 23 (numCost: 23)
Self loop:- #backedges: 24, body cost: 65, preheader cost: 2
Self loop:- loop & preheader cost 1562 will be instrumented in post loop exit
Func cost 458 for sha256_transform has been optimized for entry cost!
Storing cost of sha256_transform() : 458

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sha256_transform

Loops scheduled for transform for sha256_transform:- 


sha256_transform(): Self loop Loop at depth 1 containing: %for.body5<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body5

sha256_transform(): Transformed Self loop Loop at depth 1 containing: %for.body5<header><latch><exiting>

sha256d(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%if.then,%if.end,%if.then16,%if.end18<latch><exiting>
. Latch: if.end18, Exiting block: if.end18
Sign Extend: operand %len, type i64, scev (sext i32 %len to i64)
Sign Extend: operand %len, type i64, scev (sext i32 %len to i64)
Has backedges: (/ (+ 8 (sext (ARG: 2) i64) ) 64 ) (numCost: -1)
Direct branch from for.body needs to be instrumented
Instrumenting loop with body cost: 766
Non-header-colocated-exit loop will be transformed, & body cost is 766 for loop with header for.body
Func cost 1355 for sha256d has been optimized for entry cost!
Storing cost of sha256d() : 1355

Instrumenting loops (self loop count: 0, sese loop count: 1) for function sha256d

Loops scheduled for transform for sha256d:- 
Sese Loop: Loop at depth 1 containing: %for.body<header>,%if.then,%if.end,%if.then16,%if.end18<latch><exiting>,%for.bodyDirectSucc



sha256d(): Max depth loop Loop at depth 1 containing: %for.body<header>,%if.then,%if.end,%if.then16,%if.end18<latch><exiting>,%for.bodyDirectSucc


This seseloop will not be transformed because of too low iteration count --> for.body( sha256d() ). SESE Loop cost: 766. Iterations: 5

sha256d(): Transformed loop Loop at depth 1 containing: %for.body<header>,%if.then,%if.end,%if.then16,%if.end18<latch><exiting>,%for.bodyDirectSucc

sha256d_ms(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header><latch><exiting>
. Latch: for.body, Exiting block: for.body
sha256d_ms(): Checking if simple for Loop Loop at depth 1 containing: %for.body4756<header><latch><exiting>
. Latch: for.body4756, Exiting block: for.body4756
Has backedges: 13 (numCost: 13)
Has backedges: 15 (numCost: 15)
Self loop:- #backedges: 16, body cost: 65, preheader cost: 292
Self loop:- loop & preheader cost 1332 will be instrumented in post loop exit
Self loop:- #backedges: 14, body cost: 65, preheader cost: 357
Self loop:- loop & preheader cost 1267 will be instrumented in post loop exit
Func cost 3910 for sha256d_ms has been optimized for entry cost!
Storing cost of sha256d_ms() : 3910

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sha256d_ms

Loops scheduled for transform for sha256d_ms:- 


sha256d_ms(): Self loop Loop at depth 1 containing: %for.body4756<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body4756

sha256d_ms(): Transformed Self loop Loop at depth 1 containing: %for.body4756<header><latch><exiting>


sha256d_ms(): Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>


This selfloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

sha256d_ms(): Transformed Self loop Loop at depth 1 containing: %for.body<header><latch><exiting>

Func cost 195 for sha256d_preextend has been optimized for entry cost!
Storing cost of sha256d_preextend() : 195

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sha256d_preextend

Loops scheduled for transform for sha256d_preextend:- 

Func cost 135 for sha256d_prehash has been optimized for entry cost!
Storing cost of sha256d_prehash() : 135

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sha256d_prehash

Loops scheduled for transform for sha256d_prehash:- 

Total functions: 7, uninstrumented functions: 3
Optimized 8 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-sha2.o `test -f 'algo/cpuminer-sha2.ll' || echo './'`algo/cpuminer-sha2.ll
mv -f algo/.deps/cpuminer-sha2.Tpo algo/.deps/cpuminer-sha2.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-sia.ll -MD -MP -MF algo/.deps/cpuminer-sia.Tpo -c -o algo/llvm_cpuminer-sia.ll `test -f 'algo/sia.c' || echo './'`algo/sia.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/sia.c:6:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-sia.ll > algo/opt_cpuminer-sia.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-sia.ll > algo/cpuminer-sia.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: blake2b_hash
Function: scanhash_blake2b
Function: scanhash_sia
Func cost 813 for blake2b_hash has been optimized for entry cost!
Storing cost of blake2b_hash() : 813

Instrumenting loops (self loop count: 0, sese loop count: 0) for function blake2b_hash

Loops scheduled for transform for blake2b_hash:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 565 for scanhash_blake2b has been optimized for entry cost!
Func cost 259 for scanhash_blake2b has been optimized for exit cost!
Storing cost of scanhash_blake2b() : 824

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_blake2b

Loops scheduled for transform for scanhash_blake2b:- 

Pred cost for cleanup.loopexit is 1
Pred cost for if.then13 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then13 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 337 for scanhash_sia has been optimized for entry cost!
Func cost 259 for scanhash_sia has been optimized for exit cost!
Storing cost of scanhash_sia() : 596

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_sia

Loops scheduled for transform for scanhash_sia:- 

Total functions: 3, uninstrumented functions: 1
Optimized 5 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-sia.o `test -f 'algo/cpuminer-sia.ll' || echo './'`algo/cpuminer-sia.ll
mv -f algo/.deps/cpuminer-sia.Tpo algo/.deps/cpuminer-sia.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-sibcoin.ll -MD -MP -MF algo/.deps/cpuminer-sibcoin.Tpo -c -o algo/llvm_cpuminer-sibcoin.ll `test -f 'algo/sibcoin.c' || echo './'`algo/sibcoin.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/sibcoin.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-sibcoin.ll > algo/opt_cpuminer-sibcoin.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-sibcoin.ll > algo/cpuminer-sibcoin.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_sib
Function: sibhash
Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_sib has been optimized for entry cost!
Func cost 259 for scanhash_sib has been optimized for exit cost!
Storing cost of scanhash_sib() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_sib

Loops scheduled for transform for scanhash_sib:- 

Func cost 2627 for sibhash has been optimized for entry cost!
Storing cost of sibhash() : 2627

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sibhash

Loops scheduled for transform for sibhash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-sibcoin.o `test -f 'algo/cpuminer-sibcoin.ll' || echo './'`algo/cpuminer-sibcoin.ll
mv -f algo/.deps/cpuminer-sibcoin.Tpo algo/.deps/cpuminer-sibcoin.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-skein.ll -MD -MP -MF algo/.deps/cpuminer-skein.Tpo -c -o algo/llvm_cpuminer-skein.ll `test -f 'algo/skein.c' || echo './'`algo/skein.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/skein.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-skein.ll > algo/opt_cpuminer-skein.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-skein.ll > algo/cpuminer-skein.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_skein
Function: skeinhash
Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 567 for scanhash_skein has been optimized for entry cost!
Func cost 259 for scanhash_skein has been optimized for exit cost!
Storing cost of scanhash_skein() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_skein

Loops scheduled for transform for scanhash_skein:- 

Func cost 1320 for skeinhash has been optimized for entry cost!
Storing cost of skeinhash() : 1320

Instrumenting loops (self loop count: 0, sese loop count: 0) for function skeinhash

Loops scheduled for transform for skeinhash:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-skein.o `test -f 'algo/cpuminer-skein.ll' || echo './'`algo/cpuminer-skein.ll
mv -f algo/.deps/cpuminer-skein.Tpo algo/.deps/cpuminer-skein.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-skein2.ll -MD -MP -MF algo/.deps/cpuminer-skein2.Tpo -c -o algo/llvm_cpuminer-skein2.ll `test -f 'algo/skein2.c' || echo './'`algo/skein2.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/skein2.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-skein2.ll > algo/opt_cpuminer-skein2.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-skein2.ll > algo/cpuminer-skein2.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_skein2
Function: skein2hash
Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 565 for scanhash_skein2 has been optimized for entry cost!
Func cost 259 for scanhash_skein2 has been optimized for exit cost!
Storing cost of scanhash_skein2() : 824

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_skein2

Loops scheduled for transform for scanhash_skein2:- 

Func cost 1116 for skein2hash has been optimized for entry cost!
Storing cost of skein2hash() : 1116

Instrumenting loops (self loop count: 0, sese loop count: 0) for function skein2hash

Loops scheduled for transform for skein2hash:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-skein2.o `test -f 'algo/cpuminer-skein2.ll' || echo './'`algo/cpuminer-skein2.ll
mv -f algo/.deps/cpuminer-skein2.Tpo algo/.deps/cpuminer-skein2.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-sonoa.ll -MD -MP -MF algo/.deps/cpuminer-sonoa.Tpo -c -o algo/llvm_cpuminer-sonoa.ll `test -f 'algo/sonoa.c' || echo './'`algo/sonoa.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/sonoa.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-sonoa.ll > algo/opt_cpuminer-sonoa.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-sonoa.ll > algo/cpuminer-sonoa.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_sonoa
Function: sonoa_hash
Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 770 for scanhash_sonoa has been optimized for entry cost!
Func cost 360 for scanhash_sonoa has been optimized for exit cost!
Storing cost of scanhash_sonoa() : 1130

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_sonoa

Loops scheduled for transform for scanhash_sonoa:- 

Func cost 1415 for sonoa_hash has been optimized for entry cost!
Storing cost of sonoa_hash() : 1415

Instrumenting loops (self loop count: 0, sese loop count: 0) for function sonoa_hash

Loops scheduled for transform for sonoa_hash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-sonoa.o `test -f 'algo/cpuminer-sonoa.ll' || echo './'`algo/cpuminer-sonoa.ll
mv -f algo/.deps/cpuminer-sonoa.Tpo algo/.deps/cpuminer-sonoa.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-s3.ll -MD -MP -MF algo/.deps/cpuminer-s3.Tpo -c -o algo/llvm_cpuminer-s3.ll `test -f 'algo/s3.c' || echo './'`algo/s3.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/s3.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-s3.ll > algo/opt_cpuminer-s3.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-s3.ll > algo/cpuminer-s3.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: s3hash
Function: scanhash_s3
Func cost 1827 for s3hash has been optimized for entry cost!
Storing cost of s3hash() : 1827

Instrumenting loops (self loop count: 0, sese loop count: 0) for function s3hash

Loops scheduled for transform for s3hash:- 

Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 774 for scanhash_s3 has been optimized for entry cost!
Func cost 360 for scanhash_s3 has been optimized for exit cost!
Storing cost of scanhash_s3() : 1134

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_s3

Loops scheduled for transform for scanhash_s3:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-s3.o `test -f 'algo/cpuminer-s3.ll' || echo './'`algo/cpuminer-s3.ll
mv -f algo/.deps/cpuminer-s3.Tpo algo/.deps/cpuminer-s3.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-bitcore.ll -MD -MP -MF algo/.deps/cpuminer-bitcore.Tpo -c -o algo/llvm_cpuminer-bitcore.ll `test -f 'algo/bitcore.c' || echo './'`algo/bitcore.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/bitcore.c:7:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-bitcore.ll > algo/opt_cpuminer-bitcore.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-bitcore.ll > algo/cpuminer-bitcore.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: bitcore_hash
Function: scanhash_bitcore
bitcore_hash(): Transformed branch between while.cond8.while.cond8_crit_edge.i.preheader and land.rhs.i6.preheader.i in the forward direction
bitcore_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%if.end12.6.i,%if.end12.7.i,%while.body.i.4.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
bitcore_hash(): Checking if simple for Loop Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
. Latch: while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge, Exiting block: while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge
bitcore_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%if.end12.6.i,%if.end12.7.i,%while.body.i.4.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
bitcore_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%if.end12.6.i,%if.end12.7.i,%while.body.i.4.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
bitcore_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%if.end12.6.i,%if.end12.7.i,%while.body.i.4.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
bitcore_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%if.end12.6.i,%if.end12.7.i,%while.body.i.4.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
bitcore_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body15<header>,%sw.bb43,%sw.bb41,%sw.bb39,%sw.bb37,%sw.bb35,%sw.bb33,%sw.bb31,%sw.bb29,%sw.bb27,%sw.bb,%for.inc45<latch><exiting>
. Latch: for.inc45, Exiting block: for.inc45
bitcore_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%if.end12.6.i,%if.end12.7.i,%while.body.i.4.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
manageDanglingLCCs(inverted V shape): Removing cost 3 of next_permutation.exit
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of next_permutation.exit to successor for.cond.cleanup6.loopexit
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of next_permutation.exit to successor next_permutation.exit.for.body7_crit_edge
Pred cost for for.cond.cleanup6.loopexit is 4
Func cost 1140 for bitcore_hash has been optimized for entry cost!
Has backedges: 9 (numCost: 9)
Direct branch from for.body15 needs to be instrumented
Non-header-colocated-exit loop:- loop & preheader cost 31 will be instrumented in post loop exit
Func cost 1246 for bitcore_hash has been optimized for exit cost!
Self loop:- #backedges: 0, body cost: 5, preheader cost: 5
Self loop will be transformed, & body cost is 5 for loop Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>

Storing cost of bitcore_hash() : 2386

Instrumenting loops (self loop count: 1, sese loop count: 0) for function bitcore_hash

Loops scheduled for transform for bitcore_hash:- 
Self Loop: Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>



bitcore_hash(): Self loop Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge( bitcore_hash() )

bitcore_hash(): Transformed Self loop Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>


bitcore_hash(): Max depth loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%if.end12.6.i,%if.end12.7.i,%while.body.i.4.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body7

bitcore_hash(): Transformed loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%if.end12.6.i,%if.end12.7.i,%while.body.i.4.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>


bitcore_hash(): Max depth loop Loop at depth 1 containing: %for.body15<header>,%sw.bb43,%sw.bb41,%sw.bb39,%sw.bb37,%sw.bb35,%sw.bb33,%sw.bb31,%sw.bb29,%sw.bb27,%sw.bb,%for.inc45<latch><exiting>,%for.body15DirectSucc

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body15

bitcore_hash(): Transformed loop Loop at depth 1 containing: %for.body15<header>,%sw.bb43,%sw.bb41,%sw.bb39,%sw.bb37,%sw.bb35,%sw.bb33,%sw.bb31,%sw.bb29,%sw.bb27,%sw.bb,%for.inc45<latch><exiting>,%for.body15DirectSucc

Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_bitcore has been optimized for entry cost!
Func cost 259 for scanhash_bitcore has been optimized for exit cost!
Storing cost of scanhash_bitcore() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_bitcore

Loops scheduled for transform for scanhash_bitcore:- 

Total functions: 2, uninstrumented functions: 0
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-bitcore.o `test -f 'algo/cpuminer-bitcore.ll' || echo './'`algo/cpuminer-bitcore.ll
mv -f algo/.deps/cpuminer-bitcore.Tpo algo/.deps/cpuminer-bitcore.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-timetravel.ll -MD -MP -MF algo/.deps/cpuminer-timetravel.Tpo -c -o algo/llvm_cpuminer-timetravel.ll `test -f 'algo/timetravel.c' || echo './'`algo/timetravel.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/timetravel.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-timetravel.ll > algo/opt_cpuminer-timetravel.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-timetravel.ll > algo/cpuminer-timetravel.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_timetravel
Function: timetravel_hash
Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_timetravel has been optimized for entry cost!
Func cost 259 for scanhash_timetravel has been optimized for exit cost!
Storing cost of scanhash_timetravel() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_timetravel

Loops scheduled for transform for scanhash_timetravel:- 

timetravel_hash(): Transformed branch between while.cond8.while.cond8_crit_edge.i.preheader and land.rhs.i6.preheader.i in the forward direction
timetravel_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%while.body.i.3.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
timetravel_hash(): Checking if simple for Loop Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
. Latch: while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge, Exiting block: while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge
timetravel_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%while.body.i.3.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
timetravel_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%while.body.i.3.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
timetravel_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%while.body.i.3.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
timetravel_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%while.body.i.3.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
timetravel_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body15<header>,%sw.bb39,%sw.bb37,%sw.bb35,%sw.bb33,%sw.bb31,%sw.bb29,%sw.bb27,%sw.bb,%for.inc41<latch><exiting>
. Latch: for.inc41, Exiting block: for.inc41
timetravel_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%while.body.i.3.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>
. Latch: next_permutation.exit.for.body7_crit_edge, Exiting block: next_permutation.exit
manageDanglingLCCs(inverted V shape): Removing cost 3 of next_permutation.exit
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of next_permutation.exit to successor for.cond.cleanup6.loopexit
manageDanglingLCCs(inverted V shape): Adding pred cost 3 of next_permutation.exit to successor next_permutation.exit.for.body7_crit_edge
Pred cost for for.cond.cleanup6.loopexit is 4
Func cost 934 for timetravel_hash has been optimized for entry cost!
Has backedges: 7 (numCost: 7)
Direct branch from for.body15 needs to be instrumented
Non-header-colocated-exit loop:- loop & preheader cost 25 will be instrumented in post loop exit
Func cost 1038 for timetravel_hash has been optimized for exit cost!
Self loop:- #backedges: 0, body cost: 5, preheader cost: 5
Self loop will be transformed, & body cost is 5 for loop Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>

Storing cost of timetravel_hash() : 1972

Instrumenting loops (self loop count: 1, sese loop count: 0) for function timetravel_hash

Loops scheduled for transform for timetravel_hash:- 
Self Loop: Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>



timetravel_hash(): Self loop Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>


This selfloop will not be transformed since it has no induction variable --> while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge( timetravel_hash() )

timetravel_hash(): Transformed Self loop Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>


timetravel_hash(): Max depth loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%while.body.i.3.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body7

timetravel_hash(): Transformed loop Loop at depth 1 containing: %for.body7<header>,%if.end12.i,%if.end12.1.i,%if.end12.2.i,%if.end12.3.i,%if.end12.4.i,%if.end12.5.i,%while.body.i.3.i,%while.cond8.preheader.i,%while.cond8.while.cond8_crit_edge.i.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge.preheader,%while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge,%land.rhs.i6.preheader.i.loopexit,%land.rhs.i6.preheader.i,%land.rhs.i6.i,%while.body.i9.i,%next_permutation.exit.loopexit,%next_permutation.exit<exiting>,%next_permutation.exit.for.body7_crit_edge<latch>,%land.rhs.i6.preheader.i_dummy
    Loop at depth 2 containing: %while.cond8.while.cond8_crit_edge.i.while.cond8.while.cond8_crit_edge.i_crit_edge<header><latch><exiting>
    Loop at depth 2 containing: %land.rhs.i6.i<header><exiting>,%while.body.i9.i<latch><exiting>


timetravel_hash(): Max depth loop Loop at depth 1 containing: %for.body15<header>,%sw.bb39,%sw.bb37,%sw.bb35,%sw.bb33,%sw.bb31,%sw.bb29,%sw.bb27,%sw.bb,%for.inc41<latch><exiting>,%for.body15DirectSucc

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body15

timetravel_hash(): Transformed loop Loop at depth 1 containing: %for.body15<header>,%sw.bb39,%sw.bb37,%sw.bb35,%sw.bb33,%sw.bb31,%sw.bb29,%sw.bb27,%sw.bb,%for.inc41<latch><exiting>,%for.body15DirectSucc

Total functions: 2, uninstrumented functions: 0
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-timetravel.o `test -f 'algo/cpuminer-timetravel.ll' || echo './'`algo/cpuminer-timetravel.ll
mv -f algo/.deps/cpuminer-timetravel.Tpo algo/.deps/cpuminer-timetravel.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-tribus.ll -MD -MP -MF algo/.deps/cpuminer-tribus.Tpo -c -o algo/llvm_cpuminer-tribus.ll `test -f 'algo/tribus.c' || echo './'`algo/tribus.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/tribus.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-tribus.ll > algo/opt_cpuminer-tribus.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-tribus.ll > algo/cpuminer-tribus.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_tribus
Function: tribus_hash
Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 774 for scanhash_tribus has been optimized for entry cost!
Func cost 360 for scanhash_tribus has been optimized for exit cost!
Storing cost of scanhash_tribus() : 1134

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_tribus

Loops scheduled for transform for scanhash_tribus:- 

Func cost 1827 for tribus_hash has been optimized for entry cost!
Storing cost of tribus_hash() : 1827

Instrumenting loops (self loop count: 0, sese loop count: 0) for function tribus_hash

Loops scheduled for transform for tribus_hash:- 

Total functions: 2, uninstrumented functions: 1
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-tribus.o `test -f 'algo/cpuminer-tribus.ll' || echo './'`algo/cpuminer-tribus.ll
mv -f algo/.deps/cpuminer-tribus.Tpo algo/.deps/cpuminer-tribus.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-veltor.ll -MD -MP -MF algo/.deps/cpuminer-veltor.Tpo -c -o algo/llvm_cpuminer-veltor.ll `test -f 'algo/veltor.c' || echo './'`algo/veltor.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/veltor.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-veltor.ll > algo/opt_cpuminer-veltor.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-veltor.ll > algo/cpuminer-veltor.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_veltor
Function: veltor_hash
Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_veltor has been optimized for entry cost!
Func cost 259 for scanhash_veltor has been optimized for exit cost!
Storing cost of scanhash_veltor() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_veltor

Loops scheduled for transform for scanhash_veltor:- 

Direct branch from entry needs to be instrumented
Func cost 1216 for veltor_hash has been optimized for entry cost!
Storing cost of veltor_hash() : 1216

Instrumenting loops (self loop count: 0, sese loop count: 0) for function veltor_hash

Loops scheduled for transform for veltor_hash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-veltor.o `test -f 'algo/cpuminer-veltor.ll' || echo './'`algo/cpuminer-veltor.ll
mv -f algo/.deps/cpuminer-veltor.Tpo algo/.deps/cpuminer-veltor.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x11evo.ll -MD -MP -MF algo/.deps/cpuminer-x11evo.Tpo -c -o algo/llvm_cpuminer-x11evo.ll `test -f 'algo/x11evo.c' || echo './'`algo/x11evo.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x11evo.c:6:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x11evo.ll > algo/opt_cpuminer-x11evo.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x11evo.ll > algo/cpuminer-x11evo.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: evo_twisted_code
Function: scanhash_x11evo
Function: x11evo_hash
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: for.body40.i.i, Exiting block: for.body40.i.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
evo_twisted_code(): Checking if simple for Loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
. Latch: nextPerm.exit.i, Exiting block: nextPerm.exit.i
manageDanglingLCCs(inverted V shape): Removing cost 2 of for.cond.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of for.cond.i.i to successor land.rhs.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 2 of for.cond.i.i to successor for.body40.preheader.i.i.loopexit
manageDanglingLCCs(inverted V shape): Removing cost 4 of for.cond12.preheader.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of for.cond12.preheader.i.i to successor if.end35.thread23.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of for.cond12.preheader.i.i to successor land.rhs15.preheader.i.i
manageDanglingLCCs(inverted V shape): Removing cost 4 of land.rhs15.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of land.rhs15.i.i to successor for.inc27.i.i
manageDanglingLCCs(inverted V shape): Adding pred cost 4 of land.rhs15.i.i to successor if.end35.split.loop.exit.i.i
Pred cost for if.end35.i.i.loopexit is 1
Pred cost for if.end35.split.loop.exit.i.i is 6
manageDanglingLCCs(V shape): Removing cost 6 of predecessor if.end35.split.loop.exit.i.i for merge node if.end35.i.i
manageDanglingLCCs(V shape): Removing cost 1 of predecessor if.end35.i.i.loopexit for merge node if.end35.i.i
manageDanglingLCCs(V shape): Settting average cost 3 as initial cost for merge node if.end35.i.i
Func cost 6 for evo_twisted_code has been optimized for entry cost!
Self loop:- #backedges: 0, body cost: 10, preheader cost: 2
Self loop will be transformed, & body cost is 10 for loop Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>

Func cost 1 for evo_twisted_code has been optimized for exit cost!
Storing cost of evo_twisted_code() : 7

Instrumenting loops (self loop count: 1, sese loop count: 0) for function evo_twisted_code

Loops scheduled for transform for evo_twisted_code:- 
Self Loop: Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>



evo_twisted_code(): Self loop Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body40.i.i( evo_twisted_code() ). Self Loop cost: 10. Iterations: 400
Self loop is not canonical. Going for generic transformation with 400 iterations.
Attempting to transform self loop for.body40.i.i of evo_twisted_code with 400 inner loop iterations --> Loop at depth 2 containing: %for.body40.i.i<header><latch><exiting>
Found local ind var:   %indvars.iv14.i.i = phi i64 [ %10, %for.body40.preheader.i.i ], [ %indvars.iv.next15.i.i, %selfLoopOptExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %11 = add i64 400, %indvars.iv14.i.i
Applied self loop transform on for.body40.i.i( evo_twisted_code() )

evo_twisted_code(): Transformed Self loop Loop at depth 2 containing: %for.body40.i.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>


evo_twisted_code(): Max depth loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>,%selfLoopOptBlock,%selfLoopOptExitBlock
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.cond.i.preheader.i

evo_twisted_code(): Transformed loop Loop at depth 1 containing: %for.cond.i.preheader.i<header>,%for.cond.i.i,%land.rhs.i.i,%for.cond12.preheader.i.i,%if.end35.thread23.i.i,%land.rhs15.preheader.i.i,%land.rhs15.i.i,%for.inc27.i.i,%if.end35.i.i.loopexit,%if.end35.split.loop.exit.i.i,%if.end35.i.i,%for.body40.preheader.i.i.loopexit,%for.body40.preheader.i.i,%for.body40.i.i,%nextPerm.exit.i.loopexit,%nextPerm.exit.i<latch><exiting>,%selfLoopOptBlock,%selfLoopOptExitBlock
    Loop at depth 2 containing: %for.cond.i.i<header><exiting>,%land.rhs.i.i<latch><exiting>
    Loop at depth 2 containing: %land.rhs15.i.i<header><exiting>,%for.inc27.i.i<latch><exiting>
    Loop at depth 2 containing: %for.body40.i.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>

scanhash_x11evo(): Transformed branch between if.then and if.end9 in the forward direction
Pred cost for do.end is 4
Pred cost for if.then26 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then26 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Direct branch from if.then needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 352 for scanhash_x11evo has been optimized for entry cost!
Func cost 259 for scanhash_x11evo has been optimized for exit cost!
Storing cost of scanhash_x11evo() : 611

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x11evo

Loops scheduled for transform for scanhash_x11evo:- 

x11evo_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%sw.bb45,%sw.bb42,%sw.bb39,%sw.bb36,%sw.bb33,%sw.bb30,%sw.bb27,%sw.bb24,%sw.bb21,%sw.bb18,%sw.bb,%sw.epilog<latch><exiting>
. Latch: sw.epilog, Exiting block: sw.epilog
Direct branch from for.body needs to be instrumented
Instrumenting loop with body cost: 3
Non-header-colocated-exit loop will be transformed, & body cost is 3 for loop with header for.body
Func cost 2662 for x11evo_hash has been optimized for entry cost!
Storing cost of x11evo_hash() : 2662

Instrumenting loops (self loop count: 0, sese loop count: 1) for function x11evo_hash

Loops scheduled for transform for x11evo_hash:- 
Sese Loop: Loop at depth 1 containing: %for.body<header>,%sw.bb45,%sw.bb42,%sw.bb39,%sw.bb36,%sw.bb33,%sw.bb30,%sw.bb27,%sw.bb24,%sw.bb21,%sw.bb18,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc



x11evo_hash(): Max depth loop Loop at depth 1 containing: %for.body<header>,%sw.bb45,%sw.bb42,%sw.bb39,%sw.bb36,%sw.bb33,%sw.bb30,%sw.bb27,%sw.bb24,%sw.bb21,%sw.bb18,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc


This seseloop will be transformed & instrumented --> for.body( x11evo_hash() ). SESE Loop cost: 3. Iterations: 1333
Found local ind var:   %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %seseLoopOptHNCExitBlock ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %15 = add i64 1333, %indvars.iv
Applied sese loop transform on for.body( x11evo_hash() )

x11evo_hash(): Transformed loop Loop at depth 1 containing: %for.body<header>,%sw.bb45,%sw.bb42,%sw.bb39,%sw.bb36,%sw.bb33,%sw.bb30,%sw.bb27,%sw.bb24,%sw.bb21,%sw.bb18,%sw.bb,%sw.epilog,%for.bodyDirectSucc,%seseLoopOptBlock,%seseLoopOptHNCExitBlock<latch><exiting>
    Loop at depth 2 containing: %seseLoopOptBlock<header>,%sw.bb42,%sw.bb39,%sw.bb36,%sw.bb33,%sw.bb30,%sw.bb27,%sw.bb24,%sw.bb21,%sw.bb18,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc,%sw.bb45

Total functions: 3, uninstrumented functions: 0
Optimized 5 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x11evo.o `test -f 'algo/cpuminer-x11evo.ll' || echo './'`algo/cpuminer-x11evo.ll
mv -f algo/.deps/cpuminer-x11evo.Tpo algo/.deps/cpuminer-x11evo.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x11.ll -MD -MP -MF algo/.deps/cpuminer-x11.Tpo -c -o algo/llvm_cpuminer-x11.ll `test -f 'algo/x11.c' || echo './'`algo/x11.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x11.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x11.ll > algo/opt_cpuminer-x11.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x11.ll > algo/cpuminer-x11.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x11
Function: x11hash
Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_x11 has been optimized for entry cost!
Func cost 259 for scanhash_x11 has been optimized for exit cost!
Storing cost of scanhash_x11() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x11

Loops scheduled for transform for scanhash_x11:- 

Func cost 2122 for x11hash has been optimized for entry cost!
Storing cost of x11hash() : 2122

Instrumenting loops (self loop count: 0, sese loop count: 0) for function x11hash

Loops scheduled for transform for x11hash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x11.o `test -f 'algo/cpuminer-x11.ll' || echo './'`algo/cpuminer-x11.ll
mv -f algo/.deps/cpuminer-x11.Tpo algo/.deps/cpuminer-x11.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x12.ll -MD -MP -MF algo/.deps/cpuminer-x12.Tpo -c -o algo/llvm_cpuminer-x12.ll `test -f 'algo/x12.c' || echo './'`algo/x12.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x12.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x12.ll > algo/opt_cpuminer-x12.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x12.ll > algo/cpuminer-x12.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x12
Function: x12hash
Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_x12 has been optimized for entry cost!
Func cost 259 for scanhash_x12 has been optimized for exit cost!
Storing cost of scanhash_x12() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x12

Loops scheduled for transform for scanhash_x12:- 

Func cost 2425 for x12hash has been optimized for entry cost!
Storing cost of x12hash() : 2425

Instrumenting loops (self loop count: 0, sese loop count: 0) for function x12hash

Loops scheduled for transform for x12hash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x12.o `test -f 'algo/cpuminer-x12.ll' || echo './'`algo/cpuminer-x12.ll
mv -f algo/.deps/cpuminer-x12.Tpo algo/.deps/cpuminer-x12.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x13.ll -MD -MP -MF algo/.deps/cpuminer-x13.Tpo -c -o algo/llvm_cpuminer-x13.ll `test -f 'algo/x13.c' || echo './'`algo/x13.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x13.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x13.ll > algo/opt_cpuminer-x13.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x13.ll > algo/cpuminer-x13.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x13
Function: x13hash
Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 770 for scanhash_x13 has been optimized for entry cost!
Func cost 360 for scanhash_x13 has been optimized for exit cost!
Storing cost of scanhash_x13() : 1130

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x13

Loops scheduled for transform for scanhash_x13:- 

Func cost 2930 for x13hash has been optimized for entry cost!
Storing cost of x13hash() : 2930

Instrumenting loops (self loop count: 0, sese loop count: 0) for function x13hash

Loops scheduled for transform for x13hash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x13.o `test -f 'algo/cpuminer-x13.ll' || echo './'`algo/cpuminer-x13.ll
mv -f algo/.deps/cpuminer-x13.Tpo algo/.deps/cpuminer-x13.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x14.ll -MD -MP -MF algo/.deps/cpuminer-x14.Tpo -c -o algo/llvm_cpuminer-x14.ll `test -f 'algo/x14.c' || echo './'`algo/x14.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x14.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x14.ll > algo/opt_cpuminer-x14.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x14.ll > algo/cpuminer-x14.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x14
Function: x14hash
Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 770 for scanhash_x14 has been optimized for entry cost!
Func cost 360 for scanhash_x14 has been optimized for exit cost!
Storing cost of scanhash_x14() : 1130

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x14

Loops scheduled for transform for scanhash_x14:- 

Func cost 3435 for x14hash has been optimized for entry cost!
Storing cost of x14hash() : 3435

Instrumenting loops (self loop count: 0, sese loop count: 0) for function x14hash

Loops scheduled for transform for x14hash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x14.o `test -f 'algo/cpuminer-x14.ll' || echo './'`algo/cpuminer-x14.ll
mv -f algo/.deps/cpuminer-x14.Tpo algo/.deps/cpuminer-x14.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x15.ll -MD -MP -MF algo/.deps/cpuminer-x15.Tpo -c -o algo/llvm_cpuminer-x15.ll `test -f 'algo/x15.c' || echo './'`algo/x15.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x15.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x15.ll > algo/opt_cpuminer-x15.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x15.ll > algo/cpuminer-x15.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x15
Function: x15hash
Pred cost for for.end38 is 6
Pred cost for cleanup37 is 106
manageDanglingLCCs(V shape): Removing cost 106 of predecessor cleanup37 for merge node cleanup43
manageDanglingLCCs(V shape): Removing cost 6 of predecessor for.end38 for merge node cleanup43
manageDanglingLCCs(V shape): Settting average cost 56 as initial cost for merge node cleanup43
Func cost 770 for scanhash_x15 has been optimized for entry cost!
Func cost 360 for scanhash_x15 has been optimized for exit cost!
Storing cost of scanhash_x15() : 1130

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x15

Loops scheduled for transform for scanhash_x15:- 

Func cost 3940 for x15hash has been optimized for entry cost!
Storing cost of x15hash() : 3940

Instrumenting loops (self loop count: 0, sese loop count: 0) for function x15hash

Loops scheduled for transform for x15hash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x15.o `test -f 'algo/cpuminer-x15.ll' || echo './'`algo/cpuminer-x15.ll
mv -f algo/.deps/cpuminer-x15.Tpo algo/.deps/cpuminer-x15.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x16r.ll -MD -MP -MF algo/.deps/cpuminer-x16r.Tpo -c -o algo/llvm_cpuminer-x16r.ll `test -f 'algo/x16r.c' || echo './'`algo/x16r.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x16r.c:6:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x16r.ll > algo/opt_cpuminer-x16r.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x16r.ll > algo/cpuminer-x16r.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x16r
Function: x16r_hash
scanhash_x16r(): Transformed branch between getAlgoString.exit and if.end15 in the forward direction
scanhash_x16r(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>
. Latch: if.end.i, Exiting block: if.end.i
Pred cost for do.end is 4
Pred cost for if.then28 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then28 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Has backedges: 15 (numCost: 15)
Non-header-colocated-exit loop:- loop & preheader cost 1695 will be instrumented in post loop exit
Direct branch from getAlgoString.exit needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 12 for scanhash_x16r has been optimized for entry cost!
Func cost 259 for scanhash_x16r has been optimized for exit cost!
Storing cost of scanhash_x16r() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x16r

Loops scheduled for transform for scanhash_x16r:- 


scanhash_x16r(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body.i

scanhash_x16r(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

x16r_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>
. Latch: if.end.i, Exiting block: if.end.i
x16r_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb32,%sw.bb29,%sw.bb26,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>
. Latch: sw.epilog, Exiting block: sw.epilog
Has backedges: 15 (numCost: 15)
Has backedges: 15 (numCost: 15)
Non-header-colocated-exit loop:- loop & preheader cost 2892 will be instrumented in post loop exit
Direct branch from entry needs to be instrumented
Direct branch from for.body needs to be instrumented
Non-header-colocated-exit loop:- loop & preheader cost 49 will be instrumented in post loop exit
Func cost 1868 for x16r_hash has been optimized for entry cost!
Storing cost of x16r_hash() : 1868

Instrumenting loops (self loop count: 0, sese loop count: 0) for function x16r_hash

Loops scheduled for transform for x16r_hash:- 


x16r_hash(): Max depth loop Loop at depth 1 containing: %for.body<header>,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb32,%sw.bb29,%sw.bb26,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

x16r_hash(): Transformed loop Loop at depth 1 containing: %for.body<header>,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb32,%sw.bb29,%sw.bb26,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc


x16r_hash(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body.i

x16r_hash(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x16r.o `test -f 'algo/cpuminer-x16r.ll' || echo './'`algo/cpuminer-x16r.ll
mv -f algo/.deps/cpuminer-x16r.Tpo algo/.deps/cpuminer-x16r.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x16rv2.ll -MD -MP -MF algo/.deps/cpuminer-x16rv2.Tpo -c -o algo/llvm_cpuminer-x16rv2.ll `test -f 'algo/x16rv2.c' || echo './'`algo/x16rv2.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x16rv2.c:6:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x16rv2.ll > algo/opt_cpuminer-x16rv2.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x16rv2.ll > algo/cpuminer-x16rv2.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x16rv2
Function: x16rv2_hash
scanhash_x16rv2(): Transformed branch between getAlgoString.exit and if.end15 in the forward direction
scanhash_x16rv2(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>
. Latch: if.end.i, Exiting block: if.end.i
Pred cost for do.end is 4
Pred cost for if.then28 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then28 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Has backedges: 15 (numCost: 15)
Non-header-colocated-exit loop:- loop & preheader cost 1695 will be instrumented in post loop exit
Direct branch from getAlgoString.exit needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 12 for scanhash_x16rv2 has been optimized for entry cost!
Func cost 259 for scanhash_x16rv2 has been optimized for exit cost!
Storing cost of scanhash_x16rv2() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x16rv2

Loops scheduled for transform for scanhash_x16rv2:- 


scanhash_x16rv2(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body.i

scanhash_x16rv2(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

x16rv2_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>
. Latch: if.end.i, Exiting block: if.end.i
x16rv2_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%sw.bb59,%sw.bb56,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb29,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>
. Latch: sw.epilog, Exiting block: sw.epilog
Has backedges: 15 (numCost: 15)
Has backedges: 15 (numCost: 15)
Non-header-colocated-exit loop:- loop & preheader cost 2995 will be instrumented in post loop exit
Direct branch from entry needs to be instrumented
Direct branch from for.body needs to be instrumented
Non-header-colocated-exit loop:- loop & preheader cost 51 will be instrumented in post loop exit
Func cost 1971 for x16rv2_hash has been optimized for entry cost!
Storing cost of x16rv2_hash() : 1971

Instrumenting loops (self loop count: 0, sese loop count: 0) for function x16rv2_hash

Loops scheduled for transform for x16rv2_hash:- 


x16rv2_hash(): Max depth loop Loop at depth 1 containing: %for.body<header>,%sw.bb59,%sw.bb56,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb29,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

x16rv2_hash(): Transformed loop Loop at depth 1 containing: %for.body<header>,%sw.bb59,%sw.bb56,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb29,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc


x16rv2_hash(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body.i

x16rv2_hash(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x16rv2.o `test -f 'algo/cpuminer-x16rv2.ll' || echo './'`algo/cpuminer-x16rv2.ll
mv -f algo/.deps/cpuminer-x16rv2.Tpo algo/.deps/cpuminer-x16rv2.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x16s.ll -MD -MP -MF algo/.deps/cpuminer-x16s.Tpo -c -o algo/llvm_cpuminer-x16s.ll `test -f 'algo/x16s.c' || echo './'`algo/x16s.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x16s.c:6:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x16s.ll > algo/opt_cpuminer-x16s.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x16s.ll > algo/cpuminer-x16s.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x16s
Function: x16s_hash
scanhash_x16s(): Transformed branch between for.body15.i.prol.loopexit and for.cond.cleanup14.i in the forward direction
scanhash_x16s(): Transformed branch between getAlgoString.exit and if.end15 in the forward direction
scanhash_x16s(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
scanhash_x16s(): Checking if simple for Loop Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
. Latch: for.body15.i.prol, Exiting block: for.body15.i.prol
scanhash_x16s(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
scanhash_x16s(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
scanhash_x16s(): Checking if simple for Loop Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.body15.i, Exiting block: for.body15.i
scanhash_x16s(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
scanhash_x16s(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
Pred cost for do.end is 4
Pred cost for if.then28 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then28 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Has backedges: 15 (numCost: 15)
Self loop:- #backedges: 0, body cost: 8, preheader cost: 22
Self loop will be transformed, & body cost is 8 for loop Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 22, preheader cost: 25
Self loop will be transformed, & body cost is 22 for loop Loop at depth 2 containing: %for.body15.i<header><latch><exiting>

Non-header-colocated-exit loop:- loop & preheader cost 1076 will be instrumented in post loop exit
Direct branch from getAlgoString.exit needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 12 for scanhash_x16s has been optimized for entry cost!
Func cost 259 for scanhash_x16s has been optimized for exit cost!
Storing cost of scanhash_x16s() : 271

Instrumenting loops (self loop count: 2, sese loop count: 0) for function scanhash_x16s

Loops scheduled for transform for scanhash_x16s:- 
Self Loop: Loop at depth 2 containing: %for.body15.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>



scanhash_x16s(): Self loop Loop at depth 2 containing: %for.body15.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body15.i( scanhash_x16s() ). Self Loop cost: 22. Iterations: 181
Self loop is not canonical. Going for generic transformation with 181 iterations.
Attempting to transform self loop for.body15.i of scanhash_x16s with 181 inner loop iterations --> Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
Found local ind var:   %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %selfLoopOptExitBlock ], [ %indvars.iv.i.unr, %for.body15.i.preheader1 ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %53 = add i64 -724, %indvars.iv.i
Applied self loop transform on for.body15.i( scanhash_x16s() )

scanhash_x16s(): Transformed Self loop Loop at depth 2 containing: %for.body15.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>


scanhash_x16s(): Self loop Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body15.i.prol( scanhash_x16s() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Attempting to transform self loop for.body15.i.prol of scanhash_x16s with 500 inner loop iterations --> Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
Found local ind var:   %prol.iter = phi i64 [ %prol.iter.sub, %selfLoopOptExitBlock2 ], [ %xtraiter, %for.body15.i.prol.preheader ], mapping it to   %phiIVClone4 = phi i64 
User in header block to replace Phi:   %51 = add i64 -500, %prol.iter
Applied self loop transform on for.body15.i.prol( scanhash_x16s() )

scanhash_x16s(): Transformed Self loop Loop at depth 2 containing: %for.body15.i.prol<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock1<header><latch><exiting>


scanhash_x16s(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock1,%selfLoopOptExitBlock2
    Loop at depth 2 containing: %for.body15.i.prol<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock1<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body.i

scanhash_x16s(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock1,%selfLoopOptExitBlock2
    Loop at depth 2 containing: %for.body15.i.prol<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock1<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>

x16s_hash(): Transformed branch between for.body15.i.prol.loopexit and for.cond.cleanup14.i in the forward direction
x16s_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
x16s_hash(): Checking if simple for Loop Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
. Latch: for.body15.i.prol, Exiting block: for.body15.i.prol
x16s_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
x16s_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
x16s_hash(): Checking if simple for Loop Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.body15.i, Exiting block: for.body15.i
x16s_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
x16s_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy
    Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
. Latch: for.cond.cleanup14.i, Exiting block: for.cond.cleanup14.i
x16s_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb32,%sw.bb29,%sw.bb26,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>
. Latch: sw.epilog, Exiting block: sw.epilog
Has backedges: 15 (numCost: 15)
Has backedges: 15 (numCost: 15)
Self loop:- #backedges: 0, body cost: 8, preheader cost: 22
Self loop will be transformed, & body cost is 8 for loop Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>

Self loop:- #backedges: 0, body cost: 22, preheader cost: 25
Self loop will be transformed, & body cost is 22 for loop Loop at depth 2 containing: %for.body15.i<header><latch><exiting>

Non-header-colocated-exit loop:- loop & preheader cost 2273 will be instrumented in post loop exit
Direct branch from entry needs to be instrumented
Direct branch from for.body needs to be instrumented
Non-header-colocated-exit loop:- loop & preheader cost 49 will be instrumented in post loop exit
Func cost 1868 for x16s_hash has been optimized for entry cost!
Storing cost of x16s_hash() : 1868

Instrumenting loops (self loop count: 2, sese loop count: 0) for function x16s_hash

Loops scheduled for transform for x16s_hash:- 
Self Loop: Loop at depth 2 containing: %for.body15.i<header><latch><exiting>

Self Loop: Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>



x16s_hash(): Self loop Loop at depth 2 containing: %for.body15.i<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body15.i( x16s_hash() ). Self Loop cost: 22. Iterations: 181
Self loop is not canonical. Going for generic transformation with 181 iterations.
Attempting to transform self loop for.body15.i of x16s_hash with 181 inner loop iterations --> Loop at depth 2 containing: %for.body15.i<header><latch><exiting>
Found local ind var:   %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %selfLoopOptExitBlock ], [ %indvars.iv.i.unr, %for.body15.i.preheader1 ], mapping it to   %phiIVClone = phi i64 
User in header block to replace Phi:   %27 = add i64 -724, %indvars.iv.i
Applied self loop transform on for.body15.i( x16s_hash() )

x16s_hash(): Transformed Self loop Loop at depth 2 containing: %for.body15.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>


x16s_hash(): Self loop Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>


This selfloop will be transformed & instrumented --> for.body15.i.prol( x16s_hash() ). Self Loop cost: 8. Iterations: 500
Self loop is not canonical. Going for generic transformation with 500 iterations.
Attempting to transform self loop for.body15.i.prol of x16s_hash with 500 inner loop iterations --> Loop at depth 2 containing: %for.body15.i.prol<header><latch><exiting>
Found local ind var:   %prol.iter = phi i64 [ %prol.iter.sub, %selfLoopOptExitBlock2 ], [ %xtraiter, %for.body15.i.prol.preheader ], mapping it to   %phiIVClone4 = phi i64 
User in header block to replace Phi:   %25 = add i64 -500, %prol.iter
Applied self loop transform on for.body15.i.prol( x16s_hash() )

x16s_hash(): Transformed Self loop Loop at depth 2 containing: %for.body15.i.prol<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
    Loop at depth 3 containing: %selfLoopOptBlock1<header><latch><exiting>


x16s_hash(): Max depth loop Loop at depth 1 containing: %for.body<header>,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb32,%sw.bb29,%sw.bb26,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

x16s_hash(): Transformed loop Loop at depth 1 containing: %for.body<header>,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb32,%sw.bb29,%sw.bb26,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc


x16s_hash(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock1,%selfLoopOptExitBlock2
    Loop at depth 2 containing: %for.body15.i.prol<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock1<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body.i

x16s_hash(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%for.body15.i.preheader,%for.body15.i.prol.preheader,%for.body15.i.prol,%for.body15.i.prol.loopexit.loopexit,%for.body15.i.prol.loopexit,%for.body15.i.preheader1,%for.body15.i,%for.cond.cleanup14.i.loopexit,%for.cond.cleanup14.i<latch><exiting>,%for.cond.cleanup14.i_dummy,%selfLoopOptBlock,%selfLoopOptExitBlock,%selfLoopOptBlock1,%selfLoopOptExitBlock2
    Loop at depth 2 containing: %for.body15.i.prol<header>,%selfLoopOptBlock1,%selfLoopOptExitBlock2<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock1<header><latch><exiting>
    Loop at depth 2 containing: %for.body15.i<header>,%selfLoopOptBlock,%selfLoopOptExitBlock<latch><exiting>
        Loop at depth 3 containing: %selfLoopOptBlock<header><latch><exiting>

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x16s.o `test -f 'algo/cpuminer-x16s.ll' || echo './'`algo/cpuminer-x16s.ll
mv -f algo/.deps/cpuminer-x16s.Tpo algo/.deps/cpuminer-x16s.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x20r.ll -MD -MP -MF algo/.deps/cpuminer-x20r.Tpo -c -o algo/llvm_cpuminer-x20r.ll `test -f 'algo/x20r.c' || echo './'`algo/x20r.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x20r.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x20r.ll > algo/opt_cpuminer-x20r.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x20r.ll > algo/cpuminer-x20r.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x20r
Function: x20r_hash
scanhash_x20r(): Transformed branch between getAlgoString.exit and if.end15 in the forward direction
scanhash_x20r(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>
. Latch: if.end.i, Exiting block: if.end.i
Pred cost for do.end is 4
Pred cost for if.then28 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then28 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Has backedges: 19 (numCost: 19)
Non-header-colocated-exit loop:- loop & preheader cost 1999 will be instrumented in post loop exit
Direct branch from getAlgoString.exit needs to be instrumented
Direct branch from entry needs to be instrumented
Func cost 12 for scanhash_x20r has been optimized for entry cost!
Func cost 259 for scanhash_x20r has been optimized for exit cost!
Storing cost of scanhash_x20r() : 271

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x20r

Loops scheduled for transform for scanhash_x20r:- 


scanhash_x20r(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body.i

scanhash_x20r(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

x20r_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>
. Latch: if.end.i, Exiting block: if.end.i
x20r_hash(): Checking if simple for Loop Loop at depth 1 containing: %for.body<header>,%sw.bb67,%sw.bb63,%sw.bb60,%sw.bb56,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb32,%sw.bb29,%sw.bb26,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>
. Latch: sw.epilog, Exiting block: sw.epilog
Has backedges: 19 (numCost: 19)
Has backedges: 19 (numCost: 19)
Non-header-colocated-exit loop:- loop & preheader cost 3608 will be instrumented in post loop exit
Direct branch from entry needs to be instrumented
Direct branch from for.body needs to be instrumented
Non-header-colocated-exit loop:- loop & preheader cost 63 will be instrumented in post loop exit
Func cost 2286 for x20r_hash has been optimized for entry cost!
Storing cost of x20r_hash() : 2286

Instrumenting loops (self loop count: 0, sese loop count: 0) for function x20r_hash

Loops scheduled for transform for x20r_hash:- 


x20r_hash(): Max depth loop Loop at depth 1 containing: %for.body<header>,%sw.bb67,%sw.bb63,%sw.bb60,%sw.bb56,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb32,%sw.bb29,%sw.bb26,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body

x20r_hash(): Transformed loop Loop at depth 1 containing: %for.body<header>,%sw.bb67,%sw.bb63,%sw.bb60,%sw.bb56,%sw.bb53,%sw.bb50,%sw.bb47,%sw.bb44,%sw.bb41,%sw.bb38,%sw.bb35,%sw.bb32,%sw.bb29,%sw.bb26,%sw.bb23,%sw.bb20,%sw.bb17,%sw.bb14,%sw.bb11,%sw.bb,%sw.epilog<latch><exiting>,%for.bodyDirectSucc


x20r_hash(): Max depth loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

This seseloop has fixed cost & is not scheduled for instrumentation in the body --> for.body.i

x20r_hash(): Transformed loop Loop at depth 1 containing: %for.body.i<header>,%if.else.i,%if.then.i,%if.end.i<latch><exiting>

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x20r.o `test -f 'algo/cpuminer-x20r.ll' || echo './'`algo/cpuminer-x20r.ll
mv -f algo/.deps/cpuminer-x20r.Tpo algo/.deps/cpuminer-x20r.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-x17.ll -MD -MP -MF algo/.deps/cpuminer-x17.Tpo -c -o algo/llvm_cpuminer-x17.ll `test -f 'algo/x17.c' || echo './'`algo/x17.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/x17.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-x17.ll > algo/opt_cpuminer-x17.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-x17.ll > algo/cpuminer-x17.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_x17
Function: x17hash
Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_x17 has been optimized for entry cost!
Func cost 259 for scanhash_x17 has been optimized for exit cost!
Storing cost of scanhash_x17() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_x17

Loops scheduled for transform for scanhash_x17:- 

Func cost 1011 for x17hash has been optimized for entry cost!
Storing cost of x17hash() : 1011

Instrumenting loops (self loop count: 0, sese loop count: 0) for function x17hash

Loops scheduled for transform for x17hash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-x17.o `test -f 'algo/cpuminer-x17.ll' || echo './'`algo/cpuminer-x17.ll
mv -f algo/.deps/cpuminer-x17.Tpo algo/.deps/cpuminer-x17.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-xevan.ll -MD -MP -MF algo/.deps/cpuminer-xevan.Tpo -c -o algo/llvm_cpuminer-xevan.ll `test -f 'algo/xevan.c' || echo './'`algo/xevan.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/xevan.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-xevan.ll > algo/opt_cpuminer-xevan.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-xevan.ll > algo/cpuminer-xevan.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_xevan
Function: xevan_hash
Pred cost for do.end is 4
Pred cost for if.then16 is 104
manageDanglingLCCs(V shape): Removing cost 104 of predecessor if.then16 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 4 of predecessor do.end for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 54 as initial cost for merge node cleanup
Func cost 567 for scanhash_xevan has been optimized for entry cost!
Func cost 259 for scanhash_xevan has been optimized for exit cost!
Storing cost of scanhash_xevan() : 826

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_xevan

Loops scheduled for transform for scanhash_xevan:- 

Func cost 2425 for xevan_hash has been optimized for entry cost!
Storing cost of xevan_hash() : 2425

Instrumenting loops (self loop count: 0, sese loop count: 0) for function xevan_hash

Loops scheduled for transform for xevan_hash:- 

Total functions: 2, uninstrumented functions: 0
Optimized 3 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-xevan.o `test -f 'algo/cpuminer-xevan.ll' || echo './'`algo/cpuminer-xevan.ll
mv -f algo/.deps/cpuminer-xevan.Tpo algo/.deps/cpuminer-xevan.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-yescrypt.ll -MD -MP -MF algo/.deps/cpuminer-yescrypt.Tpo -c -o algo/llvm_cpuminer-yescrypt.ll `test -f 'algo/yescrypt.c' || echo './'`algo/yescrypt.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/yescrypt.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-yescrypt.ll > algo/opt_cpuminer-yescrypt.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-yescrypt.ll > algo/cpuminer-yescrypt.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_yescrypt
Pred cost for cleanup.loopexit is 1
Pred cost for if.then is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 561 for scanhash_yescrypt has been optimized for entry cost!
Func cost 259 for scanhash_yescrypt has been optimized for exit cost!
Storing cost of scanhash_yescrypt() : 820

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_yescrypt

Loops scheduled for transform for scanhash_yescrypt:- 

Total functions: 1, uninstrumented functions: 0
Optimized 2 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-yescrypt.o `test -f 'algo/cpuminer-yescrypt.ll' || echo './'`algo/cpuminer-yescrypt.ll
mv -f algo/.deps/cpuminer-yescrypt.Tpo algo/.deps/cpuminer-yescrypt.Po
/mnt/nilanjana/bin/clang -S -emit-llvm -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include -Wno-pointer-sign -Wno-pointer-to-int-cast    -O3 -DCI -Ofast -flto -fuse-linker-plugin -march=native -DUSE_ASM -pg  -Iyes/include -Iyes/include -I./ -MT algo/llvm_cpuminer-zr5.ll -MD -MP -MF algo/.deps/cpuminer-zr5.Tpo -c -o algo/llvm_cpuminer-zr5.ll `test -f 'algo/zr5.c' || echo './'`algo/zr5.c 
clang-9: warning: optimization flag '-fuse-linker-plugin' is not supported [-Wignored-optimization-argument]
In file included from algo/zr5.c:1:
In file included from ./miner.h:5:
In file included from ./TriggerActionDecl.h:20:
In file included from ../shenango/shenango/inc/base/log.h:9:
In file included from ../shenango/shenango/inc/base/stddef.h:12:
../shenango/shenango/inc/base/assert.h:32:9: warning: 'assert' macro redefined [-Wmacro-redefined]
#define assert(cond)                                            \
        ^
/usr/include/assert.h:107:11: note: previous definition is here
#  define assert(expr)                                                  \
          ^
1 warning generated.
/mnt/nilanjana/bin/opt -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution -S < algo/llvm_cpuminer-zr5.ll > algo/opt_cpuminer-zr5.ll
/mnt/nilanjana/bin/opt -load /mnt/nilanjana/lib/LLVMLogicalClock.so -logicalclock -defclock=false -clock-type 1 -config 2 -inst-gran 2 -all-dev 100 -push-intv 20000 -commit-intv 4000 -target-cycles 10000 -mem-ops-cost 1 -fiber-config 0 -config-file ../../lc-config.txt -S < algo/opt_cpuminer-zr5.ll > algo/cpuminer-zr5.ll
Fiber config 0.000000e+00 not used anymore
******************** Clock Type: Instantaneous, Instrumentation Granularity : Optimized with Thread Local *********************
Running with configuration:
PI: 20000, CI: 4000, Allowed Dev: 100, Lib call cost: 100, Target Cycle: 10000
Target Interval in IR 20000, in Cycles 10000, Commit Interval 4000
No library file supplied
List of Functions in Call Graph order:-
Function: scanhash_zr5
Function: zr5hash
Function: zr5hash_pok
Pred cost for cleanup.loopexit is 1
Pred cost for if.then8 is 102
manageDanglingLCCs(V shape): Removing cost 102 of predecessor if.then8 for merge node cleanup
manageDanglingLCCs(V shape): Removing cost 1 of predecessor cleanup.loopexit for merge node cleanup
manageDanglingLCCs(V shape): Settting average cost 51 as initial cost for merge node cleanup
Func cost 120 for scanhash_zr5 has been optimized for entry cost!
Func cost 158 for scanhash_zr5 has been optimized for exit cost!
Storing cost of scanhash_zr5() : 278

Instrumenting loops (self loop count: 0, sese loop count: 0) for function scanhash_zr5

Loops scheduled for transform for scanhash_zr5:- 

Direct branch from entry needs to be instrumented
Direct branch from for.inc needs to be instrumented
Direct branch from for.inc.1 needs to be instrumented
Direct branch from for.inc.2 needs to be instrumented
Func cost 708 for zr5hash has been optimized for entry cost!
Storing cost of zr5hash() : 708

Instrumenting loops (self loop count: 0, sese loop count: 0) for function zr5hash

Loops scheduled for transform for zr5hash:- 

Direct branch from entry needs to be instrumented
Func cost 203 for zr5hash_pok has been optimized for entry cost!
Storing cost of zr5hash_pok() : 203

Instrumenting loops (self loop count: 0, sese loop count: 0) for function zr5hash_pok

Loops scheduled for transform for zr5hash_pok:- 

Total functions: 3, uninstrumented functions: 0
Optimized 4 function costs!!
/mnt/nilanjana/bin/llc -relocation-model=pic -filetype=obj -o algo/cpuminer-zr5.o `test -f 'algo/cpuminer-zr5.ll' || echo './'`algo/cpuminer-zr5.ll
mv -f algo/.deps/cpuminer-zr5.Tpo algo/.deps/cpuminer-zr5.Po
gcc -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include  -O2  -Ofast -flto -fuse-linker-plugin -ftree-loop-if-convert-stores -march=native -DUSE_ASM -pg -MT asm/cpuminer-neoscrypt_asm.o -MD -MP -MF asm/.deps/cpuminer-neoscrypt_asm.Tpo -c -o asm/cpuminer-neoscrypt_asm.o `test -f 'asm/neoscrypt_asm.S' || echo './'`asm/neoscrypt_asm.S
mv -f asm/.deps/cpuminer-neoscrypt_asm.Tpo asm/.deps/cpuminer-neoscrypt_asm.Po
gcc -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include  -O2  -Ofast -flto -fuse-linker-plugin -ftree-loop-if-convert-stores -march=native -DUSE_ASM -pg -MT asm/cpuminer-sha2-x64.o -MD -MP -MF asm/.deps/cpuminer-sha2-x64.Tpo -c -o asm/cpuminer-sha2-x64.o `test -f 'asm/sha2-x64.S' || echo './'`asm/sha2-x64.S
mv -f asm/.deps/cpuminer-sha2-x64.Tpo asm/.deps/cpuminer-sha2-x64.Po
gcc -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include  -O2  -Ofast -flto -fuse-linker-plugin -ftree-loop-if-convert-stores -march=native -DUSE_ASM -pg -MT asm/cpuminer-scrypt-x64.o -MD -MP -MF asm/.deps/cpuminer-scrypt-x64.Tpo -c -o asm/cpuminer-scrypt-x64.o `test -f 'asm/scrypt-x64.S' || echo './'`asm/scrypt-x64.S
mv -f asm/.deps/cpuminer-scrypt-x64.Tpo asm/.deps/cpuminer-scrypt-x64.Po
gcc -DHAVE_CONFIG_H -I.  -Iyes/include -Iyes/include -I../shenango/shenango/iokernel -I../shenango/shenango/inc -I../shenango/shenango/dpdk/build/include -fno-strict-aliasing  -I. -Iyes/include -Iyes/include  -O2  -Ofast -flto -fuse-linker-plugin -ftree-loop-if-convert-stores -march=native -DUSE_ASM -pg -MT asm/cpuminer-aesb-x64.o -MD -MP -MF asm/.deps/cpuminer-aesb-x64.Tpo -c -o asm/cpuminer-aesb-x64.o `test -f 'asm/aesb-x64.S' || echo './'`asm/aesb-x64.S
mv -f asm/.deps/cpuminer-aesb-x64.Tpo asm/.deps/cpuminer-aesb-x64.Po
g++  -g -O3 -Lyes/lib -Lyes/lib -Lyes/lib -Lyes/lib  -o cpuminer cpuminer-cpu-miner.o cpuminer-util.o cpuminer-api.o cpuminer-sysinfos.o cpuminer-uint256.o sha3/cpuminer-sph_keccak.o sha3/cpuminer-sph_hefty1.o sha3/cpuminer-sph_groestl.o sha3/cpuminer-sph_skein.o sha3/cpuminer-sph_bmw.o sha3/cpuminer-sph_jh.o sha3/cpuminer-sph_shavite.o sha3/cpuminer-sph_blake.o sha3/cpuminer-mod_blakecoin.o sha3/cpuminer-sph_luffa.o sha3/cpuminer-sph_cubehash.o sha3/cpuminer-sph_simd.o sha3/cpuminer-sph_echo.o sha3/cpuminer-sph_fugue.o sha3/cpuminer-sph_hamsi.o sha3/cpuminer-sph_haval.o sha3/cpuminer-sph_panama.o sha3/cpuminer-sph_radiogatun.o sha3/cpuminer-sph_ripemd.o sha3/cpuminer-sph_sha2.o sha3/cpuminer-sph_sha2big.o sha3/cpuminer-sph_shabal.o sha3/cpuminer-sph_whirlpool.o sha3/cpuminer-sph_tiger.o sha3/cpuminer-gost_streebog.o crypto/cpuminer-blake2s.o crypto/cpuminer-blake2b.o crypto/cpuminer-oaes_lib.o crypto/cpuminer-c_keccak.o crypto/cpuminer-c_groestl.o crypto/cpuminer-c_blake256.o crypto/cpuminer-c_jh.o crypto/cpuminer-c_skein.o crypto/cpuminer-hash.o crypto/cpuminer-aesb.o lyra2/cpuminer-Lyra2.o lyra2/cpuminer-Sponge.o yescrypt/cpuminer-yescrypt-common.o yescrypt/cpuminer-yescrypt-best.o yescrypt/cpuminer-sha256_Y.o algo/cpuminer-allium.o algo/cpuminer-axiom.o algo/cpuminer-bastion.o algo/cpuminer-blake.o algo/cpuminer-blakecoin.o algo/cpuminer-blake2.o algo/cpuminer-bmw256.o algo/cpuminer-c11.o algo/cpuminer-cryptonight.o algo/cpuminer-cryptolight.o algo/cpuminer-decred.o algo/cpuminer-drop.o algo/cpuminer-fresh.o algo/cpuminer-geek.o algo/cpuminer-groestl.o algo/cpuminer-heavy.o algo/cpuminer-ink.o algo/cpuminer-jha.o algo/cpuminer-lbry.o algo/cpuminer-luffa.o algo/cpuminer-lyra2re.o algo/cpuminer-lyra2rev2.o algo/cpuminer-lyra2v3.o algo/cpuminer-myr-groestl.o algo/cpuminer-keccak.o algo/cpuminer-pentablake.o algo/cpuminer-phi1612.o algo/cpuminer-phi2.o algo/cpuminer-quark.o algo/cpuminer-neoscrypt.o algo/cpuminer-nist5.o algo/cpuminer-pluck.o algo/cpuminer-qubit.o algo/cpuminer-rainforest.o algo/cpuminer-scrypt.o algo/cpuminer-scrypt-jane.o algo/cpuminer-sha2.o algo/cpuminer-sia.o algo/cpuminer-sibcoin.o algo/cpuminer-skein.o algo/cpuminer-skein2.o algo/cpuminer-sonoa.o algo/cpuminer-s3.o algo/cpuminer-bitcore.o algo/cpuminer-timetravel.o algo/cpuminer-tribus.o algo/cpuminer-veltor.o algo/cpuminer-x11evo.o algo/cpuminer-x11.o algo/cpuminer-x12.o algo/cpuminer-x13.o algo/cpuminer-x14.o algo/cpuminer-x15.o algo/cpuminer-x16r.o algo/cpuminer-x16rv2.o algo/cpuminer-x16s.o algo/cpuminer-x20r.o algo/cpuminer-x17.o algo/cpuminer-xevan.o algo/cpuminer-yescrypt.o algo/cpuminer-zr5.o asm/cpuminer-neoscrypt_asm.o  asm/cpuminer-sha2-x64.o asm/cpuminer-scrypt-x64.o asm/cpuminer-aesb-x64.o   -lcurl -lz -lssl -lcrypto -ljansson -lpthread  -lz -lci -L./ -Wl,-rpath=./ -L../shenango/shenango libiokernel.a libbase.a libnet.a -T base.ld -no-pie -L../shenango/shenango/dpdk/build/lib -Wl,-whole-archive -lrte_pmd_e1000 -Wl,-no-whole-archive -Wl,-whole-archive -lrte_pmd_ixgbe -Wl,-no-whole-archive -Wl,-whole-archive -lrte_mempool_ring -Wl,-no-whole-archive -ldpdk -lrte_eal -lrte_ethdev -lrte_hash -lrte_mbuf -lrte_mempool -lrte_mempool -lrte_mempool_stack -lrte_ring -ldl -lnuma ../shenango/shenango/iokernel/mempool_completion.o
make[2]: warning:  Clock skew detected.  Your build may be incomplete.
make[2]: Leaving directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/cpuminer-multi'
make[1]: warning:  Clock skew detected.  Your build may be incomplete.
make[1]: Leaving directory '/home/nbasu4/logicalclock/ci-llvm-v9/test-suite/cpuminer-multi'
make: warning:  Clock skew detected.  Your build may be incomplete.
