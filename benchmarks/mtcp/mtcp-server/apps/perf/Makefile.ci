# TODO: Make this Makefile.in pretty

TARGETS = epserver epwget
CC_OPT=-g -O3 -Wall -Werror -fgnu89-inline -DCI
#CC=gcc -g -O3 -Wall -Werror -fgnu89-inline
DPDK=1
PS=0
NETMAP=0
ONVM=0
CCP=
CFLAGS=-g -O2

# For CI
export LLVM_BUILD ?= /mnt/nilanjana
export ROOT ?= ${PWD}
export INST_LEVEL ?= 2
export PUSH_INTV ?= 5000
export CMMT_INTV ?= 1000
export ALLOWED_DEVIATION ?= 0
export CLOCK_TYPE ?= 1
export CONFIG = 2
export FIBER_CONFIG ?= 0
export CYCLE_INTV ?= 5000
export LC_FLAGS = -load $(LLVM_BUILD)/lib/LLVMLogicalClock.so -logicalclock -clock-type $(CLOCK_TYPE) -config $(CONFIG) -inst-gran $(INST_LEVEL) -all-dev $(ALLOWED_DEVIATION) -push-intv $(PUSH_INTV) -commit-intv $(CMMT_INTV) -target-cycles $(CYCLE_INTV) -mem-ops-cost 1 -fiber-config $(FIBER_CONFIG) -config-file ${ROOT}../../../lc-config.txt
export OPT_FLAGS = -postdomtree -mem2reg -indvars -loop-simplify -branch-prob -scalar-evolution

CC=$(LLVM_BUILD)/bin/clang ${CC_OPT}

# Add arch-specific optimization
ifeq ($(shell uname -m),x86_64)
LIBS += -m64
endif

# mtcp library and header 
MTCP_FLD    =../../mtcp/
MTCP_INC    =-I${MTCP_FLD}/include
MTCP_LIB    =-L${MTCP_FLD}/lib
MTCP_TARGET = ${MTCP_LIB}/libmtcp.a

UTIL_FLD = ../../util
UTIL_INC = -I${UTIL_FLD}/include
#UTIL_OBJ = ${UTIL_FLD}/http_parsing.o ${UTIL_FLD}/tdate_parse.o ${UTIL_FLD}/netlib.o
UTIL_OBJ = ${UTIL_FLD}/opt_http_parsing.ll ${UTIL_FLD}/opt_tdate_parse.ll ${UTIL_FLD}/opt_netlib.ll

# util library and header
INC = -I./include/ ${UTIL_INC} ${MTCP_INC} -I${UTIL_FLD}/include
INC += -I$(ROOT)
LIBS = ${MTCP_LIB}

# psio-specific variables
ifeq ($(PS),1)
PS_DIR = ../../io_engine/
PS_INC = ${PS_DIR}/include
INC += -I{PS_INC}
LIBS += -lmtcp -L${PS_DIR}/lib -lps -lpthread -lnuma -lrt
endif

# netmap-specific variables
ifeq ($(NETMAP),1)
LIBS += -lmtcp -lpthread -lnuma -lrt
endif

# dpdk-specific variables
ifeq ($(DPDK),1)
DPDK_MACHINE_LINKER_FLAGS=$${RTE_SDK}/$${RTE_TARGET}/lib/ldflags.txt
DPDK_MACHINE_LDFLAGS=$(shell cat ${DPDK_MACHINE_LINKER_FLAGS})
LIBS += -g -O3 -pthread -lrt -march=native ${MTCP_FLD}/lib/libmtcp.a -lnuma -lmtcp -lpthread -lrt -ldl -lgmp -L${RTE_SDK}/${RTE_TARGET}/lib ${DPDK_MACHINE_LDFLAGS}
endif

# onvm-specific variables
ifeq ($(ONVM),1)
ifeq ($(RTE_TARGET),)
$(error "Please define RTE_TARGET environment variable")
endif

INC += -I/onvm_nflib
INC += -DENABLE_ONVM
LIBS += /onvm_nflib/$(RTE_TARGET)/libonvm.a
endif

ifeq ($V,) # no echo
	export MSG=@echo
	export HIDE=
else
	export MSG=@\#
	export HIDE=
endif

ifeq ($(CCP), 1)
# LIBCCP
LIBCCP = $(MTCP_FLD)/src/libccp
LIBS += -L$(LIBCCP) -lccp -lstartccp
INC += -I$(LIBCCP)
endif

LIBS += -L./ -lci -Wl,-rpath=$(ROOT)

all: libci.so client

ci_lib.o: ci_lib.c ci_lib.h
	@gcc -c -fPIC $< -o $@

libci.so: ci_lib.o
	@gcc -shared $< -o $@

llvm_client.ll: client.c
	$(MSG) "   CC $<"
	$(HIDE) $(CC) -g $(CFLAGS) ${INC} -S -emit-llvm -o $@ $< > /dev/null 2>&1

opt_client.ll: llvm_client.ll
	$(HIDE) $(LLVM_BUILD)/bin/opt $(OPT_FLAGS) -S < $< > $@

opt_client_all.ll: opt_client.ll ${UTIL_OBJ}
	$(HIDE) $(LLVM_BUILD)/bin/llvm-link $^ -o $@

client.ll: opt_client_all.ll
	$(HIDE) $(LLVM_BUILD)/bin/opt $(LC_FLAGS) -S < $< > $@

client: client.ll libci.so
	$(HIDE) ${CC} $< ${LIBS} ${INC} -o $@

#client.o: client.c
#	$(MSG) "   CC $<"
#	${CC} -g -c $< ${CFLAGS} ${INC}
#
#client: client.o
#	$(MSG) "   LD $<"
#	${CC} $< ${INC} ${UTIL_OBJ} -g -o $@ ${LIBS} 

clean:
	rm -f *~ *.o *.ll ${TARGETS} log_*

distclean: clean
	rm -rf Makefile
